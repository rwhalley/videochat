{"version":3,"file":"static/js/411.6cb4f40b.js","mappings":"uIAGO,MAAMA,EAAe,IAAIC,K,EACZ,O,EAChB,MAAoB,eAAoB,GAAGA,CAAI,CACjD,C,2DCEK,MAAMC,EAAcC,GAAQ,CACjC,MAAMC,EAAkBD,IAAS,WAC3BE,EAAWD,EAAkB,KAAsB,KACnDE,G,EAAS,MAAYD,EAAS,YAAY,EAC1CE,G,EAAY,MAAYF,EAAS,SAAS,EAC1CG,G,EAAW,MAAYH,EAAS,IAAI,EACpCI,G,EAAa,MAAc,EAC3BC,EAAiBN,EACnBK,EAAW,cACXA,EAAW,cAEf,MAAO,CACL,OAAAH,EACA,QAASC,EAAU,QACnB,YAAaA,EAAU,YACvB,QAASG,EACT,KAAMF,CACR,CACF,C,+eCvBA,MAAMG,EAAoBC,GACxB,KAAK,UAAUA,EAAK,CAACC,EAAGC,IAAOA,IAAM,OAAY,KAAOA,CAAE,EAoB5D,MAAMC,EAA4B,CAChC,aAAc,CAOd,cAAO,CAACC,EAAS,KAAO,CAClB,KAAK,cAKT,KAAK,OAAS,IAAI,KAAO,GAAsC,CAC7D,QAAS,MACT,aAAc,EAChB,CAAC,EAKD,KAAK,QAAU,KAAK,OAAO,UAAU,WAAWA,GAAQ,EAMxD,KAAK,QAAQ,KAAK,gCAAiC,KAAK,gBAAgB,EAExE,QAAQ,IAAI,qDAAqD,EACjE,KAAK,YAAc,GACrB,CAAC,EAMD,oBAAa,CAACC,EAAWC,IAAY,CACnC,KAAK,YAAYD,GAAa,GAAE,UAAAA,CAAA,EAAcC,CAAO,CACvD,CAAC,EAMD,wBAAiBD,GACR,KAAK,YAAYA,EACzB,EAMD,wBAAiB,CAACA,EAAWE,EAAM,CAAC,IAAM,CA9E5C,MA+EI,KAAK,WAAWF,EAAWE,CAAG,GAE9B,OAAK,UAAL,QAAc,QACZ,UAAUF,IACVN,EAAkB,GAAE,UAAAM,CAAA,EAAcE,CAAG,CAAE,EAE3C,CAAC,EAOD,mBAAY,CAACF,EAAWG,IAAO,CA5FjC,QA6FI,cAAK,UAAL,QAAc,KAAK,UAAUH,IAAaC,GACxC,KAAK,WAAWD,EAAWC,CAAO,IAEpC,OAAK,UAAL,QAAc,KAAK,UAAUD,IAAaG,CAAE,EACrC,IAAM,CAjGjB,IAAAC,GAkGMA,EAAA,KAAK,UAAL,MAAAA,EAAc,OAAO,UAAUJ,IAAaG,CAAE,CAChD,CACF,CAAC,EAGD,0BAAmB,IAAM,CAvG3B,MAwGI,UAAWH,KAAa,KAAK,YACvB,KAAK,YAAYA,MACnB,OAAK,UAAL,QAAc,QACZ,UAAUA,IACV,KAAK,YAAYA,EAAA,EAIzB,CAAC,EArFC,KAAK,YAAc,GAEnB,KAAK,YAAc,CAAC,CACtB,CAmFF,CAKO,MAAMK,EAAW,IAAIP,GCtHfQ,EAAmB,CAE9B,aAAc,eAEd,cAAe,gBAEf,cAAe,eACjB,E,aCAA,MAAMC,GAAqB,IAAM,CAC/B,KAAM,CAAE,mBAAAC,CAAmB,G,EAAIC,EAAA,GAAsB,EAGrD,MAAO,CAAE,oB,EAFkB,O,EAAY,MAAqB,GAAG,CAAC,EAEnC,mBAAAD,CAAmB,CAClD,EAKO,SAASE,EAAoBX,EAAQ,CAC1C,KAAM,CAACY,EAAKC,CAAM,G,EAAI,YAAS,IAAI,EAC7B,CAACC,EAASC,CAAU,G,EAAI,YAAS,EAAK,EACtC,CAAE,mBAAAN,EAAoB,mBAAAO,CAAmB,EAAIR,GAAmB,EAKhES,I,EAAc,UAAO,IAAI,GAAK,EAC9BC,G,EAAgB,UAAO,IAAI,GAAK,EAEhCC,I,EAAkB,eAAY,KAC3B,CACL,OAAQF,GAAY,QAChB,OAAO,YAAYA,GAAY,OAAO,EACtC,CAAC,EACL,SAAUC,EAAc,QACpB,OAAO,YAAYA,EAAc,OAAO,EACxC,CAAC,CACP,GACC,CAAC,CAAC,EAECE,I,EAAmB,eAAY,IAAM,CACrCX,GAAsBK,GACxB,iBAAoB,gBAAsBK,GAAgB,CAAC,CAE/D,EAAG,CAACV,EAAoBK,EAASK,EAAe,CAAC,EAE3CE,I,EAAmB,eAAY,CAAC,CAAE,OAAAC,GAAQ,SAAAC,GAAU,MAAAC,GAAQ,EAAK,IAAM,CAC3E,GAAI,GAAEF,IAAUC,IAEhB,GAAIC,GAAO,CACT,MAAMC,GAAUR,GAAY,QACtBS,GAAYR,EAAc,QAEhC,GAAI,EAAEO,IAAWC,IAAY,OAC7B,OAAO,QAAQJ,EAAM,EAAE,QAAQ,CAAC,CAACK,GAAIC,EAAK,IAAM,CACzCA,GAGHH,GAAQ,IAAIG,GAAM,GAAIA,EAAK,EAF3BH,GAAQ,OAAOE,EAAE,CAIrB,CAAC,EAED,OAAO,QAAQJ,EAAQ,EAAE,QAAQ,CAAC,CAACI,GAAIE,EAAO,IAAM,CAC7CA,GAGHH,GAAU,IAAIG,GAAQ,GAAIA,EAAO,EAFjCH,GAAU,OAAOC,EAAE,CAIvB,CAAC,CACH,MACEV,GAAY,QAAU,IAAI,IAAI,OAAO,QAAQK,EAAM,CAAC,EACpDJ,EAAc,QAAU,IAAI,IAAI,OAAO,QAAQK,EAAQ,CAAC,CAE5D,EAAG,CAAC,CAAC,EAECO,I,EAAoB,eACxBC,IAAS,CAGHnB,GAAI,mBACFmB,GAAM,OACNA,GAAM,SACN,CAAC,CACH,CACN,EACA,CAACnB,CAAG,CACN,EAEMoB,I,EAAgB,eACpBD,IAAS,CACP,GAAI,CAACA,GACH,OAGF,KAAM,CAAE,OAAAT,GAAQ,SAAAC,GAAU,UAAAtB,EAAU,EAAI8B,GACxCV,GAAiB,CACf,OAAAC,GACA,SAAAC,GACA,MAAOtB,KAAc,cACvB,CAAC,EACD6B,GAAkBX,GAAgB,CAAC,CACrC,EACA,CAACW,GAAmBX,GAAiBE,EAAgB,CACvD,EAEMY,I,EAAoB,eAAY,IAAM,CACtC,CAACnB,IAIDL,GAEFuB,GAAc,iBAAoB,eAAoB,CAAC,EAEvDZ,GAAiB,GACRJ,GAKT,iBAAoB,eAAoB,EAE5C,EAAG,CACDF,EACAL,EACAO,EACAgB,GACAZ,EACF,CAAC,EAIKc,I,EAAU,eACdtB,IAAO,CACLA,GAAI,SAASZ,CAAM,EACnBY,GAAI,MAAM,EAEVC,EAAOD,EAAG,CACZ,EACA,CAACZ,CAAM,CACT,EAGMmC,I,EAAe,eACnB,CAACC,GAAMd,GAAQC,GAAUc,KAAY,CACnChB,GAAiB,CAAE,OAAAC,GAAQ,SAAAC,EAAS,CAAC,EACrC,iBAAoB,eAAqB,CAAE,OAAAD,GAAQ,SAAAC,EAAS,CAAC,EAU7DO,GAAkBX,GAAgB,CAAC,CACrC,EACA,CAACE,GAAkBS,GAAmBX,EAAe,CACvD,EAQA,O,EAAA,aAAU,IAAM,CACd,GAAI,CAACP,EAAK,OACV,MAAM0B,GAAS,CAAC,EAEhB,IAAIC,GAAa,GAGjB,SAASC,IAAgB,CAEnBD,KACFD,GAAO,KAAK,YAAe,eAAqBN,EAAa,CAAC,EAC9DM,GAAO,KAAK,YAAe,gBAAsBN,EAAa,CAAC,EAG/DM,GAAO,KAAK,YAAe,gBAAsBlB,EAAgB,CAAC,EAElEL,EAAW,EAAI,EAEnB,CAEA,cAAUf,CAAM,EAChBwC,GAAc,EACdP,GAAkB,EAEX,IAAM,CACXM,GAAa,GACbD,GAAO,QAAQG,IAASA,GAAM,CAAC,CACjC,CACF,EAAG,CAAC7B,EAAKZ,EAAQiC,GAAmBb,GAAkBY,EAAa,CAAC,G,EAEpE,aAAU,IAEc,IAAM,CACtBlB,GAAW,CAACE,IACd,QAAQ,IAAI,6BAA8BG,GAAgB,CAAC,EAC3D,aAAgB,gBAAsBA,GAAgB,CAAC,EAE3D,EAGC,CAACL,EAASE,EAAoBG,EAAe,CAAC,EAE1C,CAAE,QAAAe,GAAS,aAAAC,EAAa,CACjC,C,6UC7MO,MAAMO,EAAa,OAAW,CAAC,CAAE,OAAA1C,CAAO,IAAM,CACnD,MAAM2C,EAAShC,EAAoBX,CAAM,EAEzC,OACE,gBAAC,KAAM,GACL,UAAS,GACT,cAAe,GACf,gBAAiB,GACjB,UAAW,GACX,SAAU,IACN2C,CAAM,CACZ,CAEJ,CAAC,E,2CCZM,MAAMC,EAAmB,IAAM,CACpC,KAAM,CACJ,kBAAAC,EACA,gBAAiBC,EACjB,mBAAArC,EACA,iBAAAsC,CACF,G,EAAIrC,EAAA,GAAsB,EAE1B,OAAKmC,EAKH,gBAACG,EAAA,EAAO,CACN,MAAO,GACLF,EACIrC,EACE,kBACA,wBACF,qBAEN,IAAI,cAEJ,gBAACwC,EAAA,EAAU,CACT,QAASF,EACT,OAAQ,CAACD,EACT,SAAUA,GAAoB,CAACrC,EAC/B,cAAY,mBAEZ,gBAACyC,EAAA,EAAc,IAAC,CAClB,CACF,EAtBO,IAwBX,C,wMChBA,MAAMC,EAAW,CAAC,CAAE,KAAAhE,EAAM,SAAAiE,CAAS,IAAM,CACvC,MAAMC,EACJlE,IAAS,WAAwB,KAAsB,KACnDmE,G,EAAW,MAAYD,EAAe,QAAQ,EAC9C5D,G,EAAa,MAAc,EAC3BC,EACJP,IAAS,WACLM,EAAW,cACXA,EAAW,cAEjB,OAAK2D,EAKH,gBAAC,IAAM,CACL,KAAM,EACN,MAAO,CAACE,CAAQ,EAChB,cAAeC,GAAK,CAClB7D,EAAe,OAAO6D,EAAE,GAAK,IAAOH,CAAQ,CAC9C,EACF,EAVO,IAYX,EAEaI,EAAiB,CAAC,CAAE,KAAArE,EAAM,SAAAsE,CAAS,IAAM,CA/CtD,QAiDE,MAAMpE,EADkBF,IAAS,WACE,KAAsB,KACnDG,G,EAAS,MAAYD,EAAS,YAAY,EAChD,OAAKC,EAIH,gBAAC,IAAG,CAAC,IAAK,CAAE,GAAI,IAAK,GACnB,gBAAC,IAAI,CAAC,QAAQ,UAAU,IAAK,CAAE,EAAG,MAAO,GACvC,gBAAC,IAAG,KACF,gBAAC,IAAI,CAAC,QAAQ,MAAMA,EAAO,IAAK,IAC/B,EAAAA,EAAO,WAAP,cAAiB,cAChB,gBAAC,IAAI,CAAC,QAAQ,OAAM,EAAAA,EAAO,WAAP,cAAiB,WAAY,CAErD,EACA,gBAAC,IAAU,CACT,QAASmE,EACT,IAAK,CAAE,UAAW,QAAS,EAC3B,cAAY,yBAEZ,gBAAC,IAAY,IAAC,CAChB,CACF,CACF,EAnBO,IAqBX,EAEMC,EAAW,CAAC,CAAE,KAAAvE,EAAM,IAAAwE,EAAM,CAAC,CAAE,IAAM,CACvC,KAAM,CAAE,OAAArE,EAAQ,QAAAsE,EAAS,YAAAC,EAAa,QAAAC,CAAQ,G,EAAI,MAAY3E,CAAI,EAClE,OAAKG,EAIH,gBAAC,IAAI,CAAC,QAAQ,SAAS,IAAAqE,CAAA,EACrB,gBAAC,IAAU,CACT,SAAU,CAACE,EACX,QAAS,IAAM,CACbC,EAAQ,aAAa,CACvB,EACA,cAAY,qBAEZ,gBAAC,IAAQ,IAAC,CACZ,EACA,gBAAC,IAAU,CACT,QAAS,IAAM,CACbxE,EAAO,QAAUwE,EAAQ,MAAM,EAAIA,EAAQ,KAAKxE,EAAO,EAAE,CAC3D,EACA,cAAY,2BAEXA,EAAO,QACN,gBAAC,IAAS,CAAC,MAAO,GAAI,OAAQ,GAAI,EAElC,gBAAC,IAAQ,CAAC,MAAO,GAAI,OAAQ,GAAI,CAErC,EACA,gBAAC,IAAU,CACT,SAAU,CAACsE,EACX,QAAS,IAAM,CACbE,EAAQ,SAAS,CACnB,EACA,cAAY,qBAEZ,gBAAC,IAAQ,IAAC,CACZ,CACF,EAlCO,IAoCX,EAEMC,GAAgB,IAAM,CAC1B,MAAMtE,G,EAAa,MAAc,EAC3BuE,G,EAAS,MAAY,WAA0B,EAC/C1E,G,EAAS,MAAY,iBAAgC,EACrD2E,G,EAAsB,MAAY,IAA8B,EAChEC,G,EAAa,O,EACjB,MAAsCD,GAAqB,EAAE,CAC/D,EACME,G,EAAmB,O,EAAY,MAAuBD,GAAY,EAAE,CAAC,EACrEE,EAAe9E,EAAS0E,EAASG,EAEvC,OACE,gBAAC,IAAI,CAAC,MAAM,SAAS,IAAK,CAAE,MAAO,QAAS,GAC1C,gBAAC,IAAW,IAAC,EACb,gBAAC,IAAM,CACL,IAAK,CAAE,GAAI,KAAM,EAAG,KAAM,EAC1B,IAAK,EACL,IAAK,IACL,KAAM,EACN,MAAO,CAAC,KAAK,MAAMC,CAAY,CAAC,EAChC,cAAeb,GAAK,CAClB,MAAMc,EAAQd,EAAE,GACZjE,EACFG,EAAW,cAAc,UAAU4E,CAAK,EAC/BH,GACTzE,EAAW,UAAU4E,EAAOH,EAAW,EAAE,CAE7C,EACA,YAAa,CAAE,EAAG,KAAM,EAAG,IAAK,EAClC,CACF,CAEJ,EAEaI,EAAwB,CAAC,CAAE,SAAAb,CAAS,IAAM,CACrD,KAAM,CAAE,OAAAnE,CAAO,G,EAAI,MAAY,UAAqB,EACpD,OAAKA,EAIH,gBAAC,IAAG,CACF,IAAK,CACH,EAAG,KACH,UAAW,yBACX,GAAI,SACN,GAEA,gBAACoE,EAAA,CAAS,KAAM,UAAgB,CAAO,EACvC,gBAACP,EAAA,CAAS,KAAM,WAAuB,SAAU7D,EAAO,SAAU,EAClE,gBAACkE,EAAA,CAAe,KAAM,WAAuB,SAAAC,CAAA,CAAoB,CACnE,EAbO,IAeX,EAEac,EAAwB,CAAC,CAAE,SAAAC,CAAS,IAAM,CACrD,KAAM,CAAE,OAAAlF,CAAO,G,EAAI,MAAY,UAAqB,EAEpD,OACE,gBAAC,IAAG,CACF,IAAK,CACH,EAAG,KACH,GAAI,OACJ,EAAG,OACH,OAAQ,EACR,MAAO,CACL,GAAI,EACJ,EAAG,IACL,CACF,GAECA,GACC,gBAAC6D,EAAA,CAAS,KAAM,WAAuB,SAAU7D,EAAO,SAAU,EAEpE,gBAAC,IAAI,CAAC,MAAM,SAAS,QAAQ,WAC3B,gBAACyE,GAAA,IAAc,EACdzE,GAAU,gBAACoE,EAAA,CAAS,IAAK,CAAE,KAAM,OAAQ,EAAG,EAC5Cc,CACH,CACF,CAEJ,C,8LCpLA,MAAMC,EAAc,CAClB,SAAU,QACV,MAAO,OACP,UAAW,SACX,UAAW,OACX,GAAI,KACJ,WAAY,CACd,EAEMC,EAAO,CAAC,CAAE,OAAAC,EAAQ,MAAAC,EAAQ,OAAQ,OAAAC,EAAS,MAAO,IAAM,CAC5D,MAAMC,G,EAAQ,O,EAAY,MAA0BH,CAAM,CAAC,EACrDI,G,EAAO,O,EAAY,MAAeJ,CAAM,CAAC,EACzCK,G,EAAc,MAAc,iBAAuB,EACnDC,G,EAAa,MAAc,EAC3B,CAACC,EAAgBC,CAAiB,G,EAAI,YAAS,EAAK,EACpDC,G,EAAmB,MAAc,sBAA4B,EAC7DC,G,EAAQ,KAAkB,CAC9B,SAAUN,EAAK,KACf,QAAS,GACT,MAAAD,CACF,CAAC,EACKQ,G,EAAgB,UAAO,IAAI,EAE3B,CAACC,EAAYC,CAAa,G,EAAI,YAAS,EAAK,EAE5CC,G,EAAe,KAAcH,EAAeC,EAAY,CAC5D,QAAS,IAAMC,EAAc,EAAK,CACpC,CAAC,EACKE,EAAwB,cACxBxB,G,EAAa,O,EAAY,MAA+Ba,GAAM,EAAE,CAAC,EACvE,OACE,gBAAC,UACC,IAAK,CAAE,MAAAH,EAAO,OAAAC,CAAO,EACrB,cAAY,oBAEXE,EACC,gBAAC,eACC,cAAa,GACb,IAAKO,EACL,IAAK,CAAE,cAAe,QAAS,EAC/B,aAAc,IAAMH,EAAkB,EAAI,EAC1C,aAAc,IAAM,CAClBA,EAAkB,EAAK,CACzB,GAECC,EACC,gBAAC,KAAc,CACb,aAAclB,GAAY,GAC1B,aAAcY,GAAO,GACvB,EACE,KACHY,GAAyB,CAACT,EACzB,gBAAC,sBACC,QAAS,IAAMO,EAAc,CAACD,CAAU,GAEvCE,EAAe,gBAAC,IAAU,IAAC,EAAK,gBAAC,IAAU,IAAC,CAC/C,EACE,KACHX,EACC,gBAAC,IAAK,CACJ,YAAa,GACb,OAAQC,EAAK,SAAWD,GAAO,SAAW,UAC1C,OAAQ,CAACE,EACT,QAASF,EAAM,GACf,UAAW,IACb,EACE,KACJ,gBAAC,UAAqB,IAAKL,CAAA,EAAcY,CAAM,EAC9CH,GAAkB,CAACD,GAAc,CAACF,GAAM,QACvC,gBAAC,IAAQ,CACP,cAAa,GACb,OAAQA,GAAM,GACd,aAAcb,GAAY,GAC1B,aAAcY,GAAO,GACvB,EACE,IACN,EACE,IACN,CAEJ,EAIA,GAFwB,OAAWJ,CAAI,C,2ZCqBvC,QA/FiB,CAAC,CAChB,aAAAiB,EACA,aAAAC,EACA,OAAAC,EACA,cAAAC,EAAgB,EAClB,IAAM,CACJ,MAAMhC,G,EAAU,MAAc,EACxB,CAAE,aAAAiC,CAAa,G,EAAI,MAAY,IAAiB,EAChD,CACJ,eAAAC,EACA,eAAAC,EACA,UAAAC,EACA,YAAAC,EACA,YAAAC,EACA,OAAApC,CACF,G,EAAI,KAAkB2B,EAAcC,CAAY,EAC1C,CAAE,UAAAS,CAAU,G,EAAI,KAAe,CACnC,KAAM,IACR,CAAC,EACD,OAAMN,GAAgBI,GAAeC,GAAeF,EAIlD,gBAAC,cACC,gBAAC,aAAuB,cAAY,wBAClC,gBAAC,IAAkB,IAAC,CACtB,EACA,gBAAC,aAAuB,KAAK,MAAM,MAAM,MAAM,WAAY,GACxDE,EACC,gBAAC,gBACC,QAASA,EACT,cACEH,EACI,6BACA,gCAGLA,EAAiB,gBAAC,IAAW,IAAC,EAAK,gBAAC,IAAY,IAAC,EAClD,gBAAC,YAAM,GAAGA,EAAiB,OAAS,kBAAmB,CACzD,EACE,KACHE,EACC,gBAAC,gBACC,QAASA,EACT,cACEF,EACI,6BACA,gCAGLD,EAAiB,gBAAC,IAAS,IAAC,EAAK,gBAAC,IAAU,IAAC,EAC9C,gBAAC,YAAM,GAAGA,EAAiB,OAAS,kBAAmB,CACzD,EACE,KACHL,EACC,gBAAC,gBAA0B,cAAY,6BACrC,gBAAC,KAAI,CAAC,MAAM,SAAS,IAAK,GACxB,gBAAC,IAAW,IAAC,EAAE,IAAC,gBAAC,YAAK,WAAS3B,EAAO,GAAC,CACzC,EACA,gBAAC,IAAM,CACL,IAAK,CAAE,GAAI,QAAS,EACpB,KAAM,EACN,MAAO,CAACA,CAAM,EACd,cAAeT,GAAK2C,EAAU3C,EAAE,EAAE,EACpC,CACF,EACE,KAEHwC,EACC,gBAAC,gBACC,QAAS,IAAY,0BACnB,GAAI,CACF,MAAMjC,EAAQ,WAAW+B,EAAQ,EAAE,CACrC,MAAE,CAEF,CACF,CAAC,EACD,cAAY,0BAEZ,gBAAC,IAAc,IAAC,EAChB,gBAAC,YAAK,oBAAkB,CAC1B,EACE,KAEHE,GAAgBD,EACf,gBAAC,gBAA0B,QAAS,IAAMO,EAAU,CAAC,CAAC,GACpD,gBAAC,IAAe,IAAC,EACjB,gBAAC,YAAK,kBAAgB,CACxB,EACE,IACN,CACF,EAvEO,IAyEX,C,iICjHO,MAAMC,EAAa,CAAC,CAAE,KAAAC,EAAM,QAAAC,EAAS,SAAAC,CAAS,IAAM,CACzD,MAAMC,EAAcH,IAAS,EACvBI,EAAeJ,IAASE,EAAW,EACnCG,EAAW,IAAM,CACrBJ,EAAQ,KAAK,IAAID,EAAO,EAAGE,EAAW,CAAC,CAAC,CAC1C,EACMI,EAAW,IAAM,CACrBL,EAAQ,KAAK,IAAID,EAAO,EAAG,CAAC,CAAC,CAC/B,EACA,OACE,gBAACO,EAAA,YACC,gBAACA,EAAA,WAAyB,SAAUJ,EAAa,QAASG,CAAA,EACxD,gBAACE,EAAA,EAAe,CACd,MAAO,GACP,OAAQ,GACR,MAAO,CAAE,OAAQL,EAAc,cAAgB,SAAU,EAC3D,CACF,EACA,gBAACI,EAAA,YACE,CAAC,GAAG,MAAML,CAAQ,CAAC,EAAE,IAAI,CAACO,EAAGC,IAC5B,gBAACH,EAAA,OACC,IAAKG,EACL,OAAQV,IAASU,EACjB,QAAS,IAAMT,EAAQS,CAAC,EAC1B,CACD,CACH,EACA,gBAACH,EAAA,WAAyB,SAAUH,EAAc,QAASC,CAAA,EACzD,gBAACM,EAAA,EAAgB,CACf,MAAO,GACP,OAAQ,GACR,MAAO,CAAE,OAAQP,EAAe,cAAgB,SAAU,EAC5D,CACF,CACF,CAEJ,E,uDC7BA,MAAMQ,EAAO,CAAC,CACZ,aAAAC,EACA,MAAAC,EACA,YAAAC,EACA,YAAAC,EACA,0BAAAC,CACF,IAAM,CACJ,KAAM,CAAE,YAAAC,CAAY,G,EAAI,MAAS,EAC3BC,G,EAAa1I,EAAA,GAAa,iBAAkB,YAAY,EACxDiG,G,EAAa,MAAc,EAC3B,CAAE,IAAA0C,EAAK,eAAAC,CAAe,G,EAAIC,EAAA,GAAa,CAC3C,MAAAR,EACA,aAAAD,EACA,YAAAE,EACA,YAAAC,EACA,0BAAAC,EACA,YAAAC,EACA,QAASK,EAAU,CAAE,WAAA7C,EAAY,WAAAyC,CAAW,CAAC,CAC/C,CAAC,EACK,CAACnB,EAAMC,CAAO,G,EAAI,YAAS,CAAC,G,EAClC,aAAU,IAAM,CAEVD,GAAQqB,EAAe,QACzBpB,EAAQ,CAAC,CAEb,EAAG,CAACoB,EAAe,OAAQrB,CAAI,CAAC,EAChC,MAAMwB,EAAYC,GAAA,kBAA6B,EAC/C,OACE,gBAACC,EAAA,QAAqB,IAAAN,CAAA,EACpB,gBAACM,EAAA,iBACEL,GAAkBA,EAAe,OAAS,EACvCA,EAAe,IAAI,CAACM,EAAOC,IACzB,gBAAC,IAAM,CAAC,OAAQJ,GAAaxB,IAAS4B,EAAQ,IAAKA,CAAA,EACjD,gBAACF,EAAA,QACC,IAAK,CACH,M,EAAM,KAAQE,EAAQ5B,CAAI,EAC1B,WAAY,uBACd,GAEC2B,EAAM,IAAI,CAACE,EAAMnB,IAAG,CAlDvC,aAmDoB,UAAAmB,EAAK,QAAL,cAAY,UAAW,SACrB,gBAACC,EAAA,EAAe,CACd,IAAKD,EAAK,MAAM,GAChB,MAAOA,EAAK,MACZ,OAAQA,EAAK,OACb,OAAQA,EAAK,KAAK,GACpB,EAEA,gBAACE,EAAA,EAAS,CACR,MAAK,EAAAF,EAAK,QAAL,cAAY,KAAMA,EAAK,KAAK,GACjC,MAAOA,EAAK,MACZ,OAAQA,EAAK,OACb,QAAQ,EAAAA,EAAK,OAAL,cAAW,GACnB,SAAS,GAAAA,EAAK,QAAL,eAAY,GACvB,EAEJ,CACF,CACF,CACD,EACD,IACN,EACC,CAACnD,GAAc2C,EAAe,OAAS,EACtC,gBAACtB,EAAU,CACT,KAAAC,EACA,QAAAC,EACA,SAAUoB,EAAe,OAC3B,EACE,IACN,CAEJ,EAEMW,EAAY,OAAWpB,CAAI,EAE3BW,EAAY,CAAC,CAAE,OAAAU,EAAQ,WAAAvD,CAAW,IAClC,CAACA,GAAc,OAAOuD,GAAW,SAC5B,GAEFA,EAGT,GAAeD,C,kNC/Df,MAAM7D,EAAO,CAAC,CAAE,OAAAC,EAAQ,QAAA8D,EAAS,MAAA7D,EAAO,OAAAC,CAAO,IAAM,CACnD,MAAM6D,EAAgBD,G,EAClB,MAAqBA,CAAO,G,EAC5B,MAAyB9D,CAAM,EAC7BG,G,EAAQ,MAAY4D,CAAa,EACjCC,G,EAAW,O,EAAY,MAAmBhE,CAAM,CAAC,EACjDT,G,EAAa,O,EAAY,MAAyBS,CAAM,CAAC,EACzDiE,G,EAAc,MAAY,IAAiB,EAC3C5D,G,EAAc,MAAc,gBAAuB,EACnD6D,G,EAAmB,MAAc,qBAA4B,EAC7DzD,G,EAAmB,MAAc,qBAA4B,EAC7DH,G,EAAa,MAAc,EAC3B6D,EAAe,E,EAAC,O,EAAY,MAAyBnE,CAAM,CAAC,EAC5DoE,EAAe,CAACjE,GAAO,QACvB,CAACI,GAAgBC,CAAiB,G,EAAI,YAAS,EAAK,EACpD6D,I,EAAiB,KAAoB9E,GAAY,EAAE,EACnD+E,GAAkBnE,GAAO,SACzBoE,GAAUN,IAAgBjE,EAC1BU,I,EAAQ,KAAkB,CAC9B,SAAAsD,EACA,MAAA7D,EACA,QAAAoE,EACF,CAAC,EACKC,I,EAAiB,eAAYC,IAAS,CAC1CjE,EAAkBiE,GAAM,OAAS,YAAY,CAC/C,EAAG,CAAC,CAAC,EACCC,I,EAAiB,MAAa,gBAAgB,EAC9CC,GAAYrE,GAAcoE,IAAgB,aAChD,OACE,gBAAC,UACC,IAAK,CACH,MAAAzE,EACA,OAAAC,EACA,QAAS0E,EAAW,CAAE,WAAAtE,EAAY,OAAQoE,IAAgB,UAAW,CAAC,CACxE,EACA,cAAa,oBAAoBV,GAAA,EAEhCA,IAAa,OACZ,gBAAC,eACC,aAAcQ,GACd,aAAcA,GACd,IACElE,GAAcoE,IAAgB,eAC1B,OACAL,EAAA,EAGN,gBAAC,IAAc,CACb,UAAAM,GACA,KAAMjE,GACN,OAAM,GACN,OAAAV,EACA,MAAAC,CAAA,CACF,EACCQ,EACC,gBAAC,KAAc,CACb,aAAclB,GAAY,GAC1B,aAAcY,GAAO,GACrB,OAAQH,CAAA,CACV,EACE,KAEHG,EACC,gBAAC,IAAK,CACJ,QAASA,GAAO,GAChB,OAAQoE,GAAU,OAAY,CAAClE,EAC/B,OACE6D,GACAlE,IAAWiE,GACX9D,GAAO,SAAW,WAClBA,GAAO,aAAe,cAExB,SAAUmE,GACV,cAAY,yBACd,EACE,KACJ,gBAAC,yBACEF,GAAgBE,IAAoB,CAACC,IAAWlE,EAC/C,gBAAC,IAAM,CACL,KAAM2D,GAAY,GAClB,cAAY,0BACd,EACE,IACN,EAECa,EAAe,CACd,kBAAmBH,IAAgB,kBACnC,WAAApE,EACA,aAAA6D,CACF,CAAC,EACC,gBAAC,oBAA+B,cAAY,+BAC1C,gBAAC,IAAU,IAAC,CACd,EACE,KACH5D,IAAkB,CAACD,GAAc,CAACiE,GACjC,gBAAC,IAAQ,CACP,OAAQvE,EACR,aAAcT,GAAY,GAC1B,aAAcY,GAAO,GACvB,EACE,KACJ,gBAAC2E,EAAA,CAAa,OAAA9E,CAAA,CAAgB,CAChC,EACE,IACN,CAEJ,EAEM+E,GAAa,CAAE,IAAK,KAAM,KAAM,IAAK,EAErCD,EAAe,CAAC,CAAE,OAAA9E,CAAO,IAAM,CACnC,MAAMgF,G,EAAW,O,EAAY,MAAmBhF,CAAM,CAAC,EACjDiF,EAAeD,GAAU,cAAgB,GACzCE,EAAQF,GAAU,SAAW,GAEnC,OACE,gBAAC,WAAQ,KACNC,EACC,gBAAC,kBACC,IAAKF,GACL,cAAY,yBAEZ,gBAAC,IAAmB,CAAC,MAAO,GAAI,OAAQ,GAAI,CAC9C,EACE,KACHG,EACC,gBAAC,kBACC,IAAKH,GACL,cAAY,mBAEZ,gBAAC,IAAO,CAAC,MAAO,GAAI,OAAQ,GAAI,CAClC,EACE,IACN,CAEJ,EAEMpB,EAAY,OAAW5D,CAAI,EAE3B8E,EAAiB,CAAC,CAAE,kBAAAM,EAAmB,WAAA7E,EAAY,aAAA6D,CAAa,IAC/D7D,EAGE6D,GAAgB,CAACgB,EAFfhB,EAKLS,EAAa,CAAC,CAAE,WAAAtE,EAAY,OAAAuD,CAAO,IAAM,CAC7C,GAAI,GAACvD,GAAc,OAAOuD,GAAW,UAGrC,OAAOA,IAAW,EAAI,EAAI,MAC5B,EAEA,EAAeF,C,iMC3KR,MAAMyB,GAAY,CAAC,CAAE,UAAAC,CAAU,IAAM,CAC1C,MAAM3C,G,EAAQ,MAAY,IAAW,EAErC,OACE,gBAAC4C,EAAA,EAAI,CAAC,IAAK,CAAE,KAAM,OAAQ,MAAO,CAAE,cAAe,QAAS,CAAE,GAC5D,gBAACC,EAAA,IAAe,EAChB,gBAAC,IAAgB,CAAC,MAAA7C,EAAc,iBAAkB2C,CAAA,CAAW,CAC/D,CAEJ,EAEME,EAAiB,IAAM,CAC3B,KAAM,CAAE,iBAAAC,EAAkB,kBAAAC,CAAkB,G,EAC1CC,EAAA,GAAe,GAAiB,EAC5B,CAACC,EAAaC,CAAc,G,EAAI,MACpC,gBACF,EACM,CAACC,EAAiBC,CAAkB,G,EAAI,YAAS,EAAK,EAEtDC,G,EAA+B,UAAO,EAAK,EAC3CC,EAAML,EAAY,IAClBM,G,EAAY,UAAO,EAEnBC,G,EAAmB,eAAY,IAAM,CACrCF,GACFJ,EAAe,CAAE,IAAK,EAAG,CAAC,CAE9B,EAAG,CAACI,EAAKJ,CAAc,CAAC,EAExB,O,EAAA,aAAU,IAAM,CAEZD,EAAY,aACZ,CAACH,GACD,CAACK,GACD,CAACE,EAA6B,UAE9BA,EAA6B,QAAU,GAEvCN,EAAkB,CAChB,gBAAiB,GACjB,YAAaQ,EAAU,OACzB,CAAC,EACE,KAAK,IAAM,CACVH,EAAmB,EAAI,CACzB,CAAC,EACA,MAAMI,CAAgB,EACtB,QAAQ,IAAM,CACbH,EAA6B,QAAU,EACzC,CAAC,EAGP,EAAG,CAAC,CAAC,G,EAEL,aAAU,KAEJF,GAAmB,CAACL,GACtBU,EAAiB,EAEZ,IAAM,CAEPL,GAAmBL,GACrBC,EAAkB,CAEtB,GACC,CAACI,EAAiBL,EAAkBU,EAAkBT,CAAiB,CAAC,EAGzE,gBAACU,EAAA,EAAG,CACF,IAAKF,EACL,IAAK,CACH,GAAI,KACJ,KAAM,QACN,MAAO,CACL,KAAM,QACN,QAAS,OACT,WAAY,QACd,CACF,GAEA,gBAAC,UACC,IAAAD,EACA,MAAOA,EACP,MAAO,CAAE,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,CAAE,EAClD,MAAM,sGACN,eAAe,cACjB,CACF,CAEJ,EAEA,EAAeZ,GCnGFgB,EAAe9L,I,EACnB,O,EAAY,MAAoB,eAAoBA,CAAI,CAAC,ECQrD+L,GAAe,IAAM,CAChC,MAAMC,EAAcF,EAAa,QAAQ,GAAK,CAAC,EACzCG,EAAgBH,EAAa,UAAU,GAAK,CAAC,EAC7C3D,G,EAAe+D,EAAA,IAAc,iBAAwB,EACrD9D,G,EAAQ,MAAY,IAAW,EAC/B+D,G,EAAc,MAAY,IAAiB,EAC3CC,EAAchE,EAAM,OAAOtC,GAAQkG,EAAY,SAASlG,EAAK,QAAQ,CAAC,EACtEuG,EAAejE,EAAM,OAAOtC,GAChCmG,EAAc,SAASnG,EAAK,QAAQ,CACtC,EAYA,IAAIwG,EAAeF,EAAY,OAAS,GAAKC,EAAa,OAAS,EACnE,GAAID,EAAY,SAAW,EAAG,CAG5B,MAAMG,EACJnE,EAAM,SAAW,GAAKA,EAAM,GAAG,KAAO+D,EAClCK,EAAoBH,EAAa,SAAW,EAClDC,EAAeC,GAAsBC,CACvC,CAEA,OACE,gBAACxB,EAAA,EAAI,CACH,IAAK,CACH,KAAM,MACR,EACA,UAAW,CACT,WAAY,MACZ,MAAO,QACT,GAEA,gBAAC,IAAc,CACb,MAAOsB,EAAeF,EAAchE,EACpC,aAAAD,EACA,gBAAiB,GACjB,aAAc,CAACmE,EACf,WAAYlE,EAAM,OACpB,EACCkE,GACC,gBAAC,IAAgB,CAAC,MAAOD,EAAc,WAAYjE,EAAM,OAAQ,CAErE,CAEJ,E,8DCrCA,MAAMqE,EAAiB,OAAW,IAAM,6BAA0B,EAC5DC,EAAU,OAAW,IAAM,oDAAmB,EAC9CC,EAAoB,OAAW,IAAM,4BAA6B,EAE3DC,EAAqB,IAAM,CACtC,MAAMC,G,EAAgB,MAAY,IAAuB,EACnDC,G,EAAc,MAAY,IAAuB,EACjDC,G,EAAmB,MAAY,IAAsB,EACrD/H,G,EAAsB,MAAY,IAA8B,EAChE,CAAE,gBAAiBgI,CAAiB,G,EAAI,MAAsB,EAC9DC,G,EAAc,MAAY,IAAuB,G,EACvD,MAAiB,G,EACjBC,EAAA,IAA0B,EAC1B,MAAM1M,G,EAAa,MAAc,EAC3BwF,G,EAAa,MAAc,EAC3BmH,G,EAAiBpN,EAAA,GAAa,iBAAkB,QAAQ,EACxD,CAAE,WAAAqN,EAAY,YAAArH,CAAY,G,EAAImG,EAAA,IAAc,EAC5CmB,G,EAAgB,MAAiB,EACjCC,I,EAAc,MAAc,EAmBlC,I,EAlBA,aAAU,IAAM,CACd,GAAI,CAACL,EACH,OAEF,MAAMM,GAAgB,KAAK,MACzB,s+NAAY,0BAA4B,IAC1C,EACMC,GAAgB,KAAK,MACzB,s+NAAY,0BAA4B,IAC1C,EACIA,GAAc,OAAS,GACzBhN,EAAW,cAAc,QAAQgN,EAAa,EAE5CD,GAAc,OAAS,GACzB/M,EAAW,cAAc,QAAQ+M,EAAa,CAElD,EAAG,CAACN,EAAazM,CAAU,CAAC,EAExB,CAACqM,EAEH,OAAO,KAGT,IAAIY,EACJ,OAAIZ,IAAkBQ,EACpBI,EAAgBf,EACPY,GACTG,EAAgB,EACPT,EACTS,EAAgBhB,GAEdK,GAAeA,EAAY,KAAOC,GAAkB,IACpD/H,IACF,CAACe,EAED0H,EAAgB,IAEhBL,IAAe,MACdpH,GAAcmH,IAAmB,KAElCM,EAAgBd,EAEhBc,EAAgB1B,GAIhB,gBAAC,WAAQ,CAAC,SAAU,gBAAC2B,EAAA,EAAgB,IAAC,GACpC,gBAAC1C,EAAA,EAAI,CAAC,IAAK,CAAE,KAAM,OAAQ,SAAU,UAAW,GAC9C,gBAACyC,EAAA,IAAc,EACf,gBAACE,EAAA,EAAQ,IAAC,CACZ,CACF,CAEJ,E,sGCjGA,SAASC,GAAezJ,EAAU,CAChC,GAAI,CAACA,EACH,MAAO,GAET,IAAI0J,EAAO,KAAK,MAAM1J,EAAW,EAAE,EAC/B0J,EAAO,KACTA,EAAO,IAAI,OAAOA,CAAI,KAExB,IAAIC,EAAO,KAAK,MAAM3J,EAAW,EAAE,EACnC,OAAI2J,EAAO,KACTA,EAAO,IAAI,OAAOA,CAAI,KAGjB,GAAGD,KAAQC,GACpB,CAEO,MAAMC,EAAe,OAC1B,CAAC,CAAE,KAAAC,EAAM,SAAAC,EAAU,SAAA9J,EAAU,SAAA+J,EAAU,QAAAC,CAAQ,IAE3C,gBAACC,EAAA,QACC,IAAK,CACH,cAAe,SACf,WAAY,aACZ,EAAG,MACH,EAAG,KACH,UAAW,CACT,OAAQ,UACR,GAAI,SACN,EACA,kBAAmB,CACjB,GAAI,SACN,CACF,EACA,QAAAD,CAAA,EAEA,gBAACnD,EAAA,EAAI,CACH,MAAM,SACN,QAAQ,UACR,IAAK,CAAE,MAAO,OAAQ,UAAW,CAAE,GAEnC,gBAACqD,EAAA,EAAI,CACH,QAAQ,KACR,IAAK,CAAE,MAAOH,EAAW,gBAAkB,cAAe,GAEzDF,CACH,EACA,gBAACK,EAAA,EAAI,CAAC,QAAQ,MAAMT,GAAezJ,CAAQ,CAAE,CAC/C,EACC8J,GAAU,aACT,gBAACI,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,GAAI,IAAK,GAChCJ,GAAU,WACb,CAEJ,CAGN,E,ooBC1CA,MAAMK,GAAyB,CAAC,CAAE,KAAApO,EAAM,QAAA2E,CAAQ,IAE5C,gBAAC,WAAQ,KACP,gBAACwJ,EAAA,EAAI,CACH,GAAG,QACH,QAAS,GAAGnO,kBACZ,QAAQ,KACR,IAAK,CAAE,OAAQ,UAAW,GAAI,IAAK,GACpC,QAED,EACA,gBAAC,SACC,KAAK,OACL,GAAI,GAAGA,kBACP,OAAQA,IAAS,WAAwB,UAAY,UACrD,SAAUoE,GAAK,CACb,MAAMiK,EAAOjK,EAAE,OAAO,MAAM,GACtB5B,EAAK6L,EAAK,aAChB1J,EAAQ,QAAQ,CACd,CACE,KAAA3E,EACA,GAAAwC,EACA,KAAM6L,EAAK,KACX,IAAK,IAAI,gBAAgBA,CAAI,CAC/B,CACF,CAAC,EACD1J,EAAQ,KAAKnC,CAAE,CACjB,EACA,MAAO,CAAE,QAAS,MAAO,EAC3B,CACF,EAIS8L,GAAW,CAAC,CAAE,KAAAtO,CAAK,IAAM,CACpC,MAAMC,EAAkBD,IAAS,WAC3B,CAAE,OAAAG,EAAQ,KAAME,EAAU,QAAAsE,CAAQ,G,EAAI5E,GAAA,GAAYC,CAAI,EACtD,CAACuO,EAAMC,CAAO,G,EAAI,YAAS,EAAK,EAChC,CAACC,EAAUC,CAAW,G,EAAI,YAAS,EAAK,EAE9C,MAAI,E,EADuB,MAAY,IAAwB,EACvC,QAAUrO,EAAS,SAAW,EAC7C,KAIP,gBAAC,WAAQ,KACP,gBAAC6N,EAAA,QAAc,KAAAK,EAAY,aAAcC,CAAA,EACvC,gBAACN,EAAA,WACC,QAAO,GACP,cACElO,IAAS,WAAwB,iBAAmB,kBAGtD,gBAAC8D,EAAA,EAAU,CAAC,OAAQ,CAAC3D,CAAA,EACnB,gBAAC0D,EAAA,EAAO,CACN,MAAO5D,EAAkB,iBAAmB,kBAE5C,gBAAC0L,EAAA,EAAG,KACD1L,EAAkB,gBAAC0O,EAAA,EAAe,IAAC,EAAK,gBAACC,EAAA,EAAe,IAAC,CAC5D,CACF,CACF,CACF,EACA,gBAACV,EAAA,WACC,WAAY,EACZ,MAAM,SACN,IAAK,CACH,UAAW,QACX,MAAO,MACP,EAAG,KACH,GAAI,eACJ,OAAQ,mBACV,GAEA,gBAACpD,EAAA,EAAI,CACH,MAAM,SACN,IAAK,CACH,EAAG,QACH,aAAc,yBACd,GAAI,SACN,GAEA,gBAACqD,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,KAAM,OAAQ,GACrClO,EAAkB,eAAiB,gBACtC,EACA,gBAACmO,GAAA,CAAuB,KAAApO,EAAY,QAAA2E,CAAA,CAAkB,EACtD,gBAACb,EAAA,EAAU,CACT,IAAK,CAAE,GAAI,KAAM,EACjB,QAAS,IAAY,2BACf3D,IACF,MAAMwE,EAAQ,KAAK,GAErB6J,EAAQ,EAAK,EACbE,EAAY,EAAK,CACnB,CAAC,CAAD,EAEA,gBAACG,EAAA,EAAS,CAAC,MAAO,GAAI,OAAQ,GAAI,CACpC,CACF,EACC,CAACJ,GACA,gBAAC9C,EAAA,EAAG,CAAC,IAAK,CAAE,UAAW,MAAO,UAAW,MAAO,GAC7CtL,EAAS,IAAIyO,GAEV,gBAACjB,EAAY,OACX,IAAKiB,EAAa,IACdA,CAAY,EAFjB,CAGC,QAAe1K,GAAK,2BAClBA,EAAE,eAAe,EACjB,MAAMO,EAAQ,KAAKmK,EAAa,EAAE,EAE7B7O,GACHuO,EAAQ,EAAK,CAEjB,CAAC,CAAD,EACF,CAEH,CACH,EAEDvO,GACC,gBAAC,KAAqB,CACpB,SAAU,IAAMyO,EAAYxJ,GAAS,CAACA,CAAK,EAC7C,CAEJ,CACF,CACF,CAEJ,E,idCLA,SAxHuB,CAAC,CAAE,KAAAqJ,EAAM,aAAAQ,CAAa,IAAM,CACjD,MAAMC,G,EAAc,MAAY,IAAiB,EAC3CC,G,EAAe,O,EAAY,MAAc,iBAAqB,CAAC,EAC/D,CAACC,EAAYC,CAAa,G,EAAI,YAAS,IAA8B,EAErE,CAACC,EAAkBC,CAAiB,G,EAAI,MAC5C,qBACF,EACM,CAAE,qBAAAC,EAAsB,cAAAC,EAAe,aAAAC,CAAa,G,EACxDC,GAAA,GAAsB,EAClBnP,G,EAAa,MAAc,EACjC,MAAI,CAAC0O,GAAa,kBAAoBQ,EAC7B,KAELF,EAEA,gBAACI,EAAA,QAAY,KAAAnB,EAAY,aAAAQ,CAAA,EACvB,gBAACW,EAAA,cACC,gBAACA,EAAA,WACC,IAAK,CACH,MAAO,iBACP,EAAG,MACH,GAAI,SACN,GAEA,gBAACA,EAAA,aACC,gBAAC5E,EAAA,EAAI,CAAC,IAAK,EAAG,IAAK,CAAE,EAAG,QAAS,GAC/B,gBAAC6E,GAAA,EAAiB,IAAC,EACnB,gBAACxB,EAAA,EAAI,CAAC,IAAK,CAAE,EAAG,SAAU,EAAG,QAAQ,MAAK,eAE1C,CACF,CACF,EACA,gBAACA,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,EAAG,cAAe,GAAI,IAAK,GAAG,0EAGxD,EACA,gBAACrD,EAAA,EAAI,CAAC,QAAQ,MAAM,IAAK,CAAE,GAAI,KAAM,GACnC,gBAAC4E,EAAA,SAAa,QAAO,IACnB,gBAACE,GAAA,EAAM,CACL,SAAQ,GACR,IAAK,CAAE,YAAa,kBAAmB,GAAI,IAAK,GACjD,WAED,CACF,EACA,gBAACA,GAAA,EAAM,CACL,cAAY,gCACZ,QAAQ,SACR,KAAI,GACJ,QAAS,IAAY,2BACnB,GAAI,CACF,MAAMtP,EAAW,qBAAqB,CACxC,OAASuP,GAAP,CACAC,GAAA,WAAsB,CACpB,MAAOD,GAAM,QACb,QAAS,OACX,CAAC,CACH,CACAd,EAAa,EAAK,CACpB,CAAC,CAAD,EACD,eAED,CACF,CACF,CACF,CACF,EAIF,gBAACW,EAAA,QAAY,KAAAnB,EAAY,aAAAQ,CAAA,EACvB,gBAACW,EAAA,WAAe,IAAK,CAAE,MAAO,iBAAkB,EAAG,KAAM,GACvD,gBAACA,EAAA,aACC,gBAACvB,EAAA,EAAI,CAAC,QAAQ,MAAK,iBAAe,CACpC,EACA,gBAAC4B,GAAA,EAAe,CACd,OAAO,8BACP,IAAK,CAAE,cAAe,SAAU,WAAY,OAAQ,EACpD,mBAAoBZ,CAAA,CACtB,EACA,gBAACS,GAAA,EAAM,CACL,cAAY,iCACZ,QAAQ,UACR,KAAI,GACJ,IAAK,CAAE,GAAI,MAAO,EAClB,KAAK,SACL,SAAUR,GAAoBG,EAC9B,QAAS,IAAY,2BACnB,GAAI,CACFF,EAAkB,EAAI,EACtB,MAAM/O,EAAW,qBAAqB,CACpC,WAAY2O,I,EAAgB,OAAqB,EACjD,Y,EAAY,MAAcC,CAAU,EACpC,OAAQ,EACV,CAAC,CACH,OAASW,GAAP,CACIA,GAAM,QAAQ,SAAS,wBAAwB,EACjDC,GAAA,WAAsB,CACpB,MAAO,4BACP,QAAS,OACX,CAAC,EAEDA,GAAA,WAAsB,CACpB,MAAOD,GAAM,QACb,QAAS,OACX,CAAC,EAEHR,EAAkB,EAAK,CACzB,CACAN,EAAa,EAAK,CACpB,CAAC,CAAD,EACD,OAED,CACF,CACF,CAEJ,E,2DCnHO,MAAMiB,GAAgB,CAAC,CAAE,aAAAjB,CAAa,IAAM,CAvBnD,QAwBE,MAAMkB,EAAmBC,GAAmB,EACtCC,G,EAAe,WACnB,IAAM,CACJ,CAAE,GAAI,aAAc,MAAO,kBAAmB,EAC9C,GAAGF,CACL,EACA,CAACA,CAAgB,CACnB,EACM,CAACG,EAAcC,CAAe,G,EAAI,YAAS,YAAY,EACvD,CAACpK,EAAkBqK,CAAmB,G,EAAI,MAC9C,qBACF,EACM,CAAC/B,EAAMC,CAAO,G,EAAI,YAAS,EAAK,EAChChG,G,EAAM,UAAO,EACb+H,I,EAAcC,GAAA,GAAqB,EAEzC,O,EAAA,aAAU,IAAM,CAEZJ,IAAiB,cACjB,CAACH,EAAiB,KAAKtK,GAASA,EAAM,KAAOyK,CAAY,GAEzDC,EAAgB,YAAY,CAEhC,EAAG,CAACJ,EAAkBG,CAAY,CAAC,EAGjC,gBAACV,EAAA,QAAY,YAAW,GAAC,aAAAX,CAAA,EACvB,gBAACW,EAAA,cACC,gBAACA,EAAA,cAAe,EAChB,gBAACA,EAAA,WACC,IAAK,CACH,MAAO,iBACT,GAGA,gBAACA,EAAA,SAAa,IAAK,CAAE,EAAG,MAAO,GAC7B,gBAAC5E,EAAA,EAAI,CAAC,QAAQ,WACZ,gBAACA,EAAA,EAAI,CAAC,MAAM,SAAS,IAAK,CAAE,GAAI,IAAK,GACnC,gBAACqD,EAAA,EAAI,CAAC,QAAQ,KAAK,OAAM,IAAC,iBAE1B,CACF,EACA,gBAACuB,EAAA,gBAAoB,cAAY,0BAA0B,CAC7D,CACF,EACA,gBAAC,KAAiB,CAAC,IAAK,CAAE,GAAI,QAAS,EAAG,EAE1C,gBAAC5E,EAAA,EAAI,CAAC,QAAQ,QAAQ,IAAK,EAAG,IAAK,CAAE,EAAG,OAAQ,GAC9C,gBAAC2F,GAAA,EAAM,CACL,QAASxK,EACT,gBAAiBqK,CAAA,CACnB,EACA,gBAACnC,EAAA,EAAI,CAAC,QAAQ,QAAQ,IAAK,CAAE,WAAY,WAAY,GAAG,qBAExD,CACF,EAEA,gBAACrD,EAAA,EAAI,CACH,UAAU,SACV,IAAK,CACH,GAAI,MACJ,SAAU,WACV,SAAU,CACZ,GAEA,gBAAC4F,GAAA,EAAK,CAAC,QAAQ,SAAQ,WAAS,EAChC,gBAACxC,EAAA,QACC,cAAY,0BACZ,KAAAK,EACA,aAAcC,CAAA,EAEd,gBAAC,KAAqB,CACpB,QACE,EAAA2B,EAAa,KAAK,CAAC,CAAE,GAAA3N,CAAG,IAAMA,IAAO4N,CAAY,IAAjD,cAAoD,QACpD,eAEF,IAAK,CAAE,GAAI,IAAK,EAChB,SAAU,CAAE,GAAI,CAAE,EAClB,KAAA7B,EACA,IAAA/F,CAAA,CACF,EACA,gBAAC0F,EAAA,cACC,gBAACA,EAAA,WACC,MAAM,QACN,WAAY,EACZ,IAAK,CAAE,GAAG,EAAA1F,EAAI,UAAJ,cAAa,YAAa,OAAQ,GAAK,GAEhD2H,EAAa,IAAIQ,GAChB,gBAACzC,EAAA,QACC,IAAKyC,EAAO,GACZ,QAAS,IAAM,CACbN,EAAgBM,EAAO,EAAE,CAC3B,EACA,IAAK,CACH,GAAI,KACJ,GACEA,EAAO,KAAOP,EAAeG,GAAc,OAC7C,EACEI,EAAO,KAAOP,EACV,SACA,cACR,GAECO,EAAO,KACV,CACD,CACH,CACF,CACF,CACF,EAECP,IAAiB,aAChB,gBAACQ,GAAA,IAAe,EAEhB,gBAACC,GAAA,CAAW,QAAST,CAAA,CAAc,CAEvC,CACF,CACF,CAEJ,EAEMF,GAAqB,IAAM,CAC/B,MAAMY,G,EAAY,MAAY,IAAe,EACvCC,G,EAAW,MAAY,IAAc,EAY3C,O,EAXyB,WACvB,IACE,OAAO,OAAOD,CAAS,EAAE,IAAInL,GAAS,CAvJ5C,MAwJQ,MAAM6D,GAAW,EAAAuH,EAASpL,EAAM,UAAf,cAAwB,KACzC,MAAO,CACL,GAAIA,EAAM,GACV,MAAO,GAAG6D,KAAY7D,EAAM,UAAUA,EAAM,MAC9C,CACF,CAAC,EACH,CAACmL,EAAWC,CAAQ,CACtB,CAEF,EAEMH,GAAiB,IAAM,CAnK7B,gBAoKE,MAAMI,G,EAAQ,MAAiB,mBAA6B,EAE5D,OAAKA,EAKH,gBAAClG,EAAA,EAAI,CAAC,IAAK,CAAE,SAAU,OAAQ,IAAK,KAAM,GACxC,gBAACmG,GAAA,CAAS,MAAM,eAAe,OAAO,EAAAD,EAAM,YAAN,cAAiB,YAAa,EACpE,gBAACC,GAAA,CAAS,MAAM,SAAS,OAAO,EAAAD,EAAM,YAAN,cAAiB,OAAQ,EACzD,gBAACC,GAAA,CACC,MAAM,kBACN,MAAOC,IAAY,EAAAF,EAAM,UAAN,cAAe,QAAS,KAAK,EAClD,EACA,gBAACC,GAAA,CACC,MAAM,oBACN,MAAOC,IAAY,EAAAF,EAAM,YAAN,cAAiB,QAAS,KAAK,EACpD,EACA,gBAACC,GAAA,CACC,MAAM,mBACN,MAAOC,IAAY,EAAAF,EAAM,UAAN,cAAe,SAAS,EAC7C,EACA,gBAACC,GAAA,CACC,MAAM,uBACN,MAAOC,IAAY,EAAAF,EAAM,YAAN,cAAiB,aAAa,EACnD,CACF,EAvBO,IAyBX,EAEMH,GAAa,CAAC,CAAE,QAAAM,CAAQ,IAAM,CAClC,MAAMH,G,EAAQ,MAAiB,oBAA8BG,CAAO,CAAC,EACrE,GAAI,CAACH,EACH,OAAO,KAET,MAAMI,EAAUJ,EAAM,KAAK,SAAS,SAAS,EAE7C,OACE,gBAAClG,EAAA,EAAI,CAAC,IAAK,CAAE,SAAU,OAAQ,IAAK,KAAM,GACxC,gBAACmG,GAAA,CAAS,MAAM,OAAO,MAAOD,EAAM,KAAO,IAAMA,EAAM,KAAM,EAC7D,gBAACC,GAAA,CAAS,MAAM,UAAU,MAAOC,GAAYF,EAAM,QAAS,KAAK,EAAG,EACpE,gBAACC,GAAA,CAAS,MAAM,eAAe,MAAOD,EAAM,aAAe,IAAK,EAChE,gBAACC,GAAA,CAAS,MAAM,SAAS,MAAOD,EAAM,QAAU,IAAK,EACrD,gBAACC,GAAA,CACC,MAAOG,EAAU,iBAAmB,aACpC,MAAOF,GAAYE,EAAUJ,EAAM,cAAgBA,EAAM,SAAS,EACpE,EACCA,EAAM,OAAS,SACd,gCACE,gBAACC,GAAA,CAAS,MAAM,YAAY,MAAOD,EAAM,gBAAiB,EACzD,CAACI,GACA,gBAACH,GAAA,CACC,MAAM,4BACN,MAAOD,EAAM,yBAA2B,IAC1C,CAEJ,CAEJ,CAEJ,EAEMC,GAAW,CAAC,CAAE,MAAA/K,EAAO,MAAAhB,CAAM,IAC/B,gBAACyG,EAAA,EAAG,CAAC,IAAK,CAAE,GAAI,gBAAiB,EAAG,iBAAkB,EAAG,KAAM,EAAG,IAAK,GACrE,gBAACwC,EAAA,EAAI,CACH,QAAQ,WACR,IAAK,CACH,WAAY,YACZ,MAAO,cACP,cAAe,WACjB,GAECjI,EAAO,GACV,EACA,gBAACiI,EAAA,EAAI,CACH,QAAQ,OACR,IAAK,CAAE,WAAY,YAAa,MAAO,cAAe,GAErDjJ,CACH,CACF,EAGIgM,GAAc,CAACG,EAAOC,EAAO,IAAKC,EAAW,IAAM,CACvD,GAAIF,IAAU,EAAG,MAAO,KAAOC,EAE/B,MAAM5Q,EAAI,KACJ8Q,EAAKD,EAAW,EAAI,EAAIA,EACxBE,EAAQ,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAAE,IACzDC,GAAQA,EAAOJ,CACjB,EAEMxJ,EAAI,KAAK,MAAM,KAAK,IAAIuJ,CAAK,EAAI,KAAK,IAAI3Q,CAAC,CAAC,EAElD,OAAO,YAAY2Q,EAAQ,KAAK,IAAI3Q,EAAGoH,CAAC,GAAG,QAAQ0J,CAAE,CAAC,EAAI,IAAMC,EAAM3J,EACxE,E,+oBCtPO,MAAM6J,GAAkB,CAAC,CAAE,aAAA5C,CAAa,IAAM,CACnD,KAAM,CAAC6C,EAAmBC,CAAoB,G,EAAIC,GAAA,IAChD,aACF,EACMxR,G,EAAa,MAAc,EAC3ByR,G,EAAgB,MAAY,IAAmB,EAC/C,CAACC,EAAaC,CAAc,G,EAAI,YAASF,CAAa,EAEtDG,EAAa,IAAY,2BAC7B,MAAMpE,EAAOkE,EAAY,KAAK,EAC9B,GAAI,GAAClE,GAAQA,IAASiE,GAGtB,GAAI,CACF,MAAMzR,EAAW,WAAWwN,CAAI,EAChC+D,EAAqB,SACfD,GAAqB,CAAC,CAAC,EADR,CAEnB,KAAA9D,CACF,CAAC,EACH,OAAS+B,EAAP,CACA,QAAQ,MAAM,wBAAyBA,CAAK,EAC5CC,GAAA,WAAsB,CAAE,MAAOD,EAAM,OAAQ,CAAC,CAChD,QAAE,CACAd,EAAa,EAAK,CACpB,CACF,CAAC,EAED,OACE,gBAACW,EAAA,QAAY,YAAW,GAAC,aAAAX,CAAA,EACvB,gBAACW,EAAA,cACC,gBAACA,EAAA,cAAe,EAChB,gBAACA,EAAA,WAAe,IAAK,CAAE,MAAO,iBAAkB,EAAG,KAAM,GACvD,gBAACA,EAAA,SAAa,IAAK,CAAE,EAAG,MAAO,GAC7B,gBAACvB,EAAA,EAAI,CAAC,QAAQ,MAAK,cAAY,CACjC,EACA,gBAAC,QACC,SAAgB/J,GAAK,2BACnBA,EAAE,eAAe,EACjB,MAAM8N,EAAW,CACnB,CAAC,CAAD,EAEA,gBAACpH,EAAA,EAAI,CAAC,QAAQ,SAAS,MAAM,SAAS,IAAK,CAAE,GAAI,KAAM,EAAG,MAAO,GAC/D,gBAACqH,GAAA,EAAK,CACJ,IAAK,CAAE,MAAO,MAAO,EACrB,MAAOH,EACP,SAAU5N,GAAK,CACb6N,EAAe7N,EAAE,OAAO,KAAK,CAC/B,EACA,aAAa,OACb,SAAQ,GACR,cAAY,oBACd,CACF,EAEA,gBAAC0G,EAAA,EAAI,CACH,QAAQ,UACR,MAAM,SACN,IAAK,CACH,MAAO,OACP,IAAK,MACL,GAAI,KACN,GAEA,gBAACa,EAAA,EAAG,CAAC,IAAK,CAAE,EAAG,KAAM,GACnB,gBAAC+D,EAAA,SAAa,IAAK,CAAE,EAAG,MAAO,GAC7B,gBAACE,GAAA,EAAM,CACL,QAAQ,WACR,IAAK,CAAE,EAAG,MAAO,EACjB,SAAQ,GACR,KAAK,SACL,SAAU,CAACmC,CAAA,EACZ,QAED,CACF,CACF,EACA,gBAACpG,EAAA,EAAG,CAAC,IAAK,CAAE,EAAG,KAAM,GACnB,gBAACiE,GAAA,EAAM,CACL,QAAQ,UACR,IAAK,CAAE,MAAO,MAAO,EACrB,KAAK,SACL,SACE,CAACoC,EAAY,KAAK,GAAKA,EAAY,KAAK,IAAMD,EAEhD,cAAY,oBACb,QAED,CACF,CACF,CACF,CACF,CACF,CACF,CAEJ,E,oOC5FO,MAAMK,GAAiB,CAAC,CAAE,QAAAnE,CAAQ,IAAM,CAC7C,MAAMoE,G,EAAQ,MAAiB,EACzBrD,G,EAAc,MAAY,IAAiB,EAC3C/C,G,EAAc,MAAY,IAAiB,EAC3CU,G,EAAgB,MAAY,IAAuB,EACnDrM,G,EAAa,MAAc,EAC3BgS,G,EAAkBC,GAAA,GAAS,cAAe,EAC1CC,EAAmB5G,EAAa,kBAAkB,EAClD6G,G,EAA2B,WAC/B,K,EAAM,OAAkBD,EAAkBH,CAAK,EAC/C,CAACA,EAAOG,CAAgB,CAC1B,EAEA,OAAKxD,EAAY,WAGVsD,EACL,gBAACpE,EAAA,QAAc,QAAAD,CAAA,EACb,gBAACyE,GAAA,EAAU,IAAC,EACZ,gBAACvE,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,GAAI,IAAK,GAAG,gBAEtC,CACF,EAEA,gBAACD,EAAA,eACC,gBAACA,EAAA,eAAqB,cAAY,sBAChC,gBAACwE,GAAA,EAAU,IAAC,EACZ,gBAACvE,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,KAAM,QAAS,GAAI,IAAK,GAAG,gBAErD,EACA,gBAACwE,GAAA,EAAc,IAAC,CAClB,EACA,gBAACzE,EAAA,kBACC,WAAY,EACZ,YAAa,GACb,IAAK,CAAE,MAAO,CAAE,EAAG,KAAM,CAAE,GAE1BuE,EAAyB,IAAI,CAACG,EAAM9K,IACnC,gBAACoG,EAAA,QACC,IAAK0E,EACL,IAAK,CAAE,eAAgB,eAAgB,EACvC,QAAS,IAAY,2BACnB,GAAI,CACF,MAAMtS,EAAW,WAAW2L,EAAa2G,EAAM,EAAI,CACrD,OAAS/C,EAAP,CACAC,GAAA,WAAsB,CAAE,MAAOD,EAAM,OAAQ,CAAC,CAChD,CACF,CAAC,EACD,cAAa,kBAAoB+C,CAAA,EAEjC,gBAACzE,EAAA,EAAI,CAAC,QAAQ,MAAMyE,CAAK,EACxBjG,IAAkBiG,GAAQ,gBAACC,GAAA,EAAS,CAAC,MAAO,GAAI,OAAQ,GAAI,CAC/D,CACD,CACH,CACF,EAzCO,IA2CX,E,0BC9DO,MAAMC,GAAW,CAAC,CAAE,eAAAC,CAAe,IACnC,OAAO,WAKV,gBAAC7E,EAAA,QACC,QAAS,IAAM,CACb6E,EAAe,EAAI,CACrB,EACA,cAAY,iBAEZ,gBAACC,GAAA,EAAQ,IAAC,EACV,gBAAC7E,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,GAAI,IAAK,GAAG,WAEtC,CACF,EAdO,KAkBJ,SAAS8E,GAAc,CAAE,aAAAlE,CAAa,EAAG,CAC9C,KAAM,CAAC5D,EAAaC,CAAc,G,EAAI,MACpC,gBACF,EACM,CAAC8H,EAAKC,CAAM,G,EAAI,YAAShI,GAAa,KAAO,EAAE,EAE/CiI,EAAqB,CAAC,CAACjI,GAAa,IACpCkI,EAAcD,GAAsBF,GAAOA,IAAQ/H,EAAY,IAErE,OACE,gBAACuE,EAAA,QAAY,YAAW,GAAC,aAAAX,CAAA,EACvB,gBAACuE,GAAA,GAAa,CAAC,MAAM,YAAY,KAAMN,GAAA,GACrC,gBAAC,MAAW,CACV,MAAM,MACN,MAAOE,EACP,SAAUC,EACV,YAAY,4CACZ,KAAK,MACP,EACA,gBAAC,MAAS,KACR,gBAAChF,EAAA,EAAI,KAAC,uKAIN,CACF,EACA,gBAAC,MAAS,CAAC,QAAQ,OAChBiF,EACC,gCACE,gBAACxD,GAAA,EAAM,CACL,QAAQ,UACR,KAAK,SACL,SAAU,CAACyD,EACX,QAAS,IAAM,CACbjI,EAAe,CAAE,IAAA8H,EAAK,YAAa/H,EAAY,WAAY,CAAC,EAC5D4D,EAAa,EAAK,CACpB,EACA,cAAY,gBACZ,IAAK,CAAE,GAAI,IAAK,GACjB,cAED,EACA,gBAACa,GAAA,EAAM,CACL,QAAQ,SACR,KAAK,SACL,QAAS,IAAM,CACbxE,EAAe,CAAE,IAAK,EAAG,CAAC,EAC1B2D,EAAa,EAAK,CACpB,EACA,cAAY,iBACb,YAED,CACF,EAEA,gCACE,gBAACa,GAAA,EAAM,CACL,QAAQ,UACR,KAAK,SACL,SAAU,CAACsD,EAAI,KAAK,EACpB,QAAS,IAAM,CACb9H,EAAe,CAAE,IAAA8H,CAAI,CAAC,EACtBnE,EAAa,EAAK,CACpB,EACA,cAAY,gBACZ,IAAK,CAAE,GAAI,IAAK,GACjB,YAED,EACA,gBAACa,GAAA,EAAM,CACL,QAAQ,UACR,KAAK,SACL,SAAU,CAACsD,EAAI,KAAK,EACpB,QAAS,IAAM,CACb9H,EAAe,CAAE,IAAA8H,EAAK,YAAa,EAAK,CAAC,EACzCnE,EAAa,EAAK,CACpB,EACA,cAAY,iBACb,iBAED,CACF,CAEJ,CACF,CACF,CAEJ,C,+OClHO,MAAMwE,GAAgB,IAAM,CACjC,KAAM,CAACC,EAAqBC,CAAsB,G,EAAI,YACpD,iBACF,EAEMC,G,EAAS,eAAY,IAAY,2BACrC,GAAI,CAAC,eAAsB,CACzB5D,GAAA,WAAsB,CAAE,MAAO,kCAAmC,CAAC,EACnE,MACF,CACA,GAAI,CACE0D,EACF,MAAM,UAAgB,EAEtB,MAAM,aAAmB,CAE7B,OAASG,EAAP,CACA7D,GAAA,WAAsB,CAAE,MAAO6D,EAAI,OAAQ,CAAC,CAC9C,CACF,CAAC,EAAE,CAACH,CAAmB,CAAC,EAExB,O,EAAA,aAAU,IAAM,CACd,MAAMI,EAAW,IAAM,CACrBH,EAAuB,iBAAuB,CAChD,EACA,OAAI,gBACF,QAAc,SAAUG,CAAQ,EAE3B,IAAM,CACP,gBACF,SAAe,SAAUA,CAAQ,CAErC,CACF,EAAG,CAAC,CAAC,EAEE,CACL,QAAS,eACT,aAAcJ,EACd,iBAAkBE,CACpB,CACF,ECvCaG,GAAiB,IAAM,CAClC,KAAM,CAAE,QAAAC,EAAS,aAAAxN,EAAc,iBAAAyN,CAAiB,EAAIR,GAAc,EAElE,OAAKO,EAKH,gBAAC5F,EAAA,QACC,QAAS,IAAM,CACb6F,EAAiB,CACnB,EACA,cAAY,mBAEZ,gBAACC,GAAA,EAAU,IAAC,EACZ,gBAAC7F,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,GAAI,IAAK,GAChC7H,EAAe,QAAU,MAAM,YAClC,CACF,EAdO,IAgBX,E,yNCPA,MAAM2N,GAAqB,CACzB,CAAE,MAAO,oBAAqB,MAAO,EAAG,EACxC,CAAE,MAAO,UAAW,MAAO,SAAU,EACrC,CAAE,MAAO,SAAU,MAAO,QAAS,EACnC,CAAE,MAAO,gBAAiB,MAAO,eAAgB,EACjD,CAAE,MAAO,gBAAiB,MAAO,eAAgB,CACnD,EACMC,GAAmB,CACvB,CAAE,MAAO,kBAAmB,MAAO,EAAG,EACtC,CAAE,MAAO,QAAS,MAAO,OAAQ,EACjC,CAAE,MAAO,QAAS,MAAO,OAAQ,CACnC,EACaC,GAAe,CAAC,CAAE,aAAApF,CAAa,IAAM,CAChD,MAAMsD,G,EAAQ,MAAiB,EACzB/R,G,EAAa,MAAc,EAC3B,CAAC8T,EAASC,CAAU,G,EAAI,YAAS,EAAK,EACtC,CAACC,EAAWC,CAAY,G,EAAI,YAAS,EACrC,CAACC,EAAcC,CAAO,G,EAAI,YAAS,EACnC,CAACC,EAAgBC,CAAS,G,EAAI,YAAS,EAEvCC,G,EAAU,eAAY,IAAY,2BACtC,MAAMtU,EAAW,uBAAuB,CACtC,QAAA8T,EACA,KAAME,EACN,OAAQI,EACR,MAAOF,EAAe,CAACA,CAAY,EAAI,MACzC,CAAC,EACDzF,EAAa,EAAK,CACpB,CAAC,EAAE,CACDyF,EACAJ,EACAE,EACAI,EACApU,EACAyO,CACF,CAAC,EAED,OACE,gBAACW,EAAA,QAAY,YAAW,GAAC,aAAAX,CAAA,EACvB,gBAACuE,GAAA,GAAa,CAAC,MAAM,4BAA4B,KAAMuB,GAAA,GACrD,gBAAC,MAAY,CACX,MAAM,OACN,QAAS,CACP,CAAE,MAAO,YAAa,MAAO,EAAG,EAChC,GAAGxC,EAAM,IAAIO,KAAS,CAAE,MAAOA,GAAM,MAAOA,EAAK,EAAE,CACrD,EACA,SAAU4B,EACV,SAAS,QACT,WAAW,QACX,SAAUC,CAAA,CACZ,EACA,gBAAC,MAAY,CACX,MAAM,aACN,QAASP,GACT,SAAUI,EACV,SAAUC,EACV,SAAS,QACT,WAAW,QACb,EACA,gBAAC,MAAY,CACX,MAAM,eACN,QAASN,GACT,SAAUS,EACV,SAAUC,EACV,SAAS,QACT,WAAW,QACb,EACA,gBAAC,MAAS,KACR,gBAACxG,EAAA,EAAI,CAAC,QAAQ,MAAK,cAAY,EAC/B,gBAAC2G,GAAA,QAAgB,MAAOV,EAAS,cAAeC,CAAA,EAC9C,gBAACvJ,EAAA,EAAI,CAAC,MAAM,SAAS,IAAK,CAAE,GAAI,IAAK,GACnC,gBAACgK,GAAA,QACC,MAAO,GACP,GAAG,oBACH,IAAK,CAAE,GAAI,IAAK,GAEhB,gBAACA,GAAA,gBAAqB,CACxB,EACA,gBAACpE,GAAA,EAAK,CAAC,QAAQ,qBAAoB,MAAI,CACzC,EACA,gBAAC5F,EAAA,EAAI,CAAC,MAAM,SAAS,IAAK,CAAE,OAAQ,SAAU,GAC5C,gBAACgK,GAAA,QACC,MAAO,GACP,GAAG,mBACH,IAAK,CAAE,GAAI,IAAK,GAEhB,gBAACA,GAAA,gBAAqB,CACxB,EACA,gBAACpE,GAAA,EAAK,CAAC,QAAQ,oBAAmB,gBAAc,CAClD,CACF,CACF,EACA,gBAAC,MAAS,CAAC,QAAQ,OACjB,gBAACd,GAAA,EAAM,CAAC,QAAQ,UAAU,QAASgF,CAAA,EAAS,OAE5C,CACF,CACF,CACF,CAEJ,E,eC1EA,MAAMG,GAAS,YAAsB,EAAE,KAAK,YAAY,EAClDC,GAAUD,KAAW,SACrBE,GAAaF,KAAW,WAAaA,KAAW,MAEzCG,GAAe,IAAM,CAChC,MAAMlG,G,EAAc,MAAY,IAAiB,EAC3CmG,G,EAAqB,MAAY,IAAwB,EACzDlJ,G,EAAc,MAAY,IAAiB,EAC3CU,G,EAAgB,MAAY,IAAuB,EACnDrM,G,EAAa,MAAc,EAC3B8U,G,EAAgB,O,EAAY,MAAc,aAAiB,CAAC,EAC5D,CAAC7G,EAAMC,CAAO,G,EAAI,YAAS,EAAK,EAChC,CAAC6G,EAAqBC,CAAsB,G,EAAI,YAAS,EAAK,EAC9D,CAACC,EAAaC,CAAc,G,EAAI,YAAS,EAAK,EAC9C,CAACC,GAAa1C,CAAc,G,EAAI,YAAS,EAAK,EAC9C,CAAC2C,GAAoBC,EAAqB,G,EAAI,YAAS,EAAK,EAC5D,CAACC,GAAmBC,EAAoB,G,EAAI,YAAS,EAAK,EAC1D,CAACC,GAAoBC,EAAqB,G,EAAI,YAAS,EAAK,EAC5D,CAACC,GAAoBC,EAAqB,G,EAAI,YAAS,EAAK,EAC5DC,I,EAAW3D,GAAA,GAAS,cAAkB,EACtC,CAAE,qBAAAjD,EAAqB,G,EAAIG,GAAA,GAAsB,EACvD,OACE,gBAAC,WAAQ,KACP,gBAACvB,EAAA,QAAc,KAAAK,EAAY,aAAcC,CAAA,EACvC,gBAACN,EAAA,WAAiB,QAAO,GAAC,cAAY,qBACpC,gBAACpK,EAAA,EAAU,KACT,gBAACD,EAAA,EAAO,CAAC,MAAM,gBACb,gBAAC8H,EAAA,EAAG,KACF,gBAACwK,GAAA,EAAgB,IAAC,CACpB,CACF,CACF,CACF,EAEA,gBAACjI,EAAA,WACC,WAAY,EACZ,MAAM,SACN,IAAK,CAAE,UAAW,MAAO,MAAO,CAAE,EAAG,KAAM,CAAE,GAE5CgI,IAAYlH,GAAa,iBACxB,gCACE,gBAACd,EAAA,QACC,QAAS,IAAM+H,GAAsB/Q,IAAS,CAACA,EAAK,GAEpD,gBAACkR,GAAA,EAAU,IAAC,EACZ,gBAACjI,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,GAAI,IAAK,GAChCmB,GAAuB,OAAS,QAAQ,YAC3C,CACF,EACA,gBAACpB,EAAA,oBAAuB,CAC1B,EACE,KACJ,gBAACA,EAAA,QACC,QAAS,IAAMoH,EAAuBpQ,IAAS,CAACA,EAAK,EACrD,cAAY,mBAEZ,gBAACmR,GAAA,EAAU,IAAC,EACZ,gBAAClI,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,GAAI,IAAK,GAAG,aAEtC,CACF,EACA,gBAACiE,GAAc,CAAC,QAAS,IAAM2D,GAAsB,EAAI,EAAG,EAC5D,gBAAClC,GAAc,IAAC,EACfsB,EAAmB,QAClB,gBAACrC,GAAQ,CAAC,eAAAC,CAAA,CAAgC,EAE3C/D,EAAY,MACX,gBAACd,EAAA,QACC,QAAS,IAAMsH,EAAe,EAAI,EAClC,cAAY,gBAEZ,gBAACX,GAAA,EAAU,IAAC,EACZ,gBAAC1G,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,GAAI,IAAK,GAAG,UAEtC,CACF,EAEF,gBAACD,EAAA,oBAAuB,EACxB,gBAACA,EAAA,QACC,QAAS,IAAMyH,GAAsB,EAAI,EACzC,cAAY,uBAEZ,gBAACW,GAAA,EAAY,IAAC,EACd,gBAACnI,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,GAAI,IAAK,GAAG,UAEtC,CACF,EACCtF,GAAA,wBACE8D,IAAkB,aACjB,gBAACuB,EAAA,QACC,QAAS,IACP5N,EAAW,WAAW,cAAmB,CAAC8U,CAAa,EAEzD,cAAY,aAEZ,gBAACmB,GAAA,QACC,IAAK,CAAE,OAAQ,IAAK,EACpB,QAASnB,EACT,gBAAiB,IACf9U,EAAW,WAAW,cAAmB,CAAC8U,CAAa,GAGzD,gBAACmB,GAAA,iBACC,gBAAC1D,GAAA,EAAS,CAAC,MAAO,GAAI,OAAQ,GAAI,CACpC,CACF,EACA,gBAAC/H,EAAA,EAAI,CAAC,QAAQ,UAAU,IAAK,CAAE,MAAO,MAAO,GAC3C,gBAACqD,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,GAAI,IAAK,GAAG,gBAEtC,EACE8G,GAIE,KAHF,gBAAC9G,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,GAAI,IAAK,GAChC,GAAG6G,GAAU,SAAM,YACtB,CAEJ,CACF,EAEA,gBAAC9G,EAAA,QACC,QAAS,IAAM2H,GAAqB,EAAI,EACxC,cAAY,uBAEZ,gBAACW,GAAA,EAAQ,IAAC,EACV,gBAACrI,EAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,GAAI,IAAK,GAAG,iBAEtC,CACF,EAEN,CACF,EACCoH,GAAe,gBAACpB,GAAY,CAAC,aAAcqB,CAAA,CAAgB,EAC3DH,GACC,gBAAC1D,GAAe,CAAC,aAAc2D,CAAA,CAAwB,EAExDI,IACC,gBAACe,GAAA,EAAa,CAAC,KAAI,GAAC,aAAcd,EAAA,CAAuB,EAE1D9M,GAAA,uBAAoC+M,IACnC,gBAAC5F,GAAa,CACZ,KAAM4F,GACN,aAAcC,EAAA,CAChB,EAEDC,IACC,gBAACY,GAAA,EAAe,CACd,OAAQzK,EACR,aAAc8J,EAAA,CAChB,EAEDC,IACC,gBAAC,GAAc,CACb,KAAMA,GACN,aAAcC,EAAA,CAChB,EAEDR,IAAe,gBAACxC,GAAa,CAAC,aAAcF,CAAA,CAAgB,CAC/D,CAEJ,E,0BCnMO,SAAS4D,GAA0BC,EAAeC,EAAQ,CAC/D,IAAIC,EAAgBF,EAAc,OAChCG,GAAgBA,EAAa,YAAc,IAC7C,EAAE,OAEF,MAAMC,EAAMH,EAAO,WAAW,IAAI,EAClCG,EAAI,UAAY,UAChB,MAAMC,EAAcJ,EAAO,MACrBK,EAAeL,EAAO,OAE5B,GAAIC,IAAkB,EAAG,CAEvBE,EAAI,SAAS,EAAG,EAAGC,EAAaC,CAAY,EAC5C,MACF,SAESJ,IAAkB,GAAKA,IAAkB,EAAG,CAEnDE,EAAI,UAAUJ,EAAc,GAAI,EAAG,EAAGK,EAAaC,CAAY,EAC/D,MACF,CAGA,MAAMC,EAAUL,GAAiB,EAAI,EAAI,EACnCM,EAAU,OAAO,KAAK,KAAKN,EAAgBK,CAAO,CAAC,EACnDE,EAAaH,EAAeC,EAC5BG,EAAYL,EAAcG,EAEhCG,GAAcJ,EAASC,EAASC,EAAYC,EAAWV,EAAeI,CAAG,CAC3E,CAIO,SAASQ,GAAoBX,EAAQ,CAC1C,MAAMG,EAAMH,EAAO,WAAW,IAAI,EAClCG,EAAI,UAAY,UAChB,MAAMC,EAAcJ,EAAO,MACrBK,EAAeL,EAAO,OAC5BG,EAAI,SAAS,EAAG,EAAGC,EAAaC,CAAY,CAC9C,CAMA,SAASK,GACPJ,EACAC,EACAC,EACAC,EACAV,EACAI,EACA,CACA,IAAIS,EAAkB,EACtB,QAASC,EAAM,EAAGA,EAAMP,EAASO,IAAO,CACtC,MAAMC,EAASD,EAAML,EACrB,QAASO,EAAM,EAAGA,EAAMR,EAASQ,IAAO,CACtC,MAAMC,EAASD,EAAMN,EACfQ,EAAQlB,EAAca,GACxB,CAACK,GAASA,EAAM,YAAc,KAChCd,EAAI,SAASa,EAAQF,EAAQL,EAAWD,CAAU,EAElDL,EAAI,UAAUc,EAAOD,EAAQF,EAAQL,EAAWD,CAAU,EAE5DI,GACF,CACF,CACF,C,+WCxEA,MAAMM,GAA6B,EAC7BC,GAAc,GACdC,GAAuB,IACvBC,GAAwB,IACxBC,GAAmB,wBAEnBC,GAAY,CAChB,SAAU,WACV,QAAS,UACT,SAAU,WACV,QAAS,SACX,EAWA,MAAMC,EAAW,CACf,aAAc,CAmEd,eAAO,IAAY,yBA5FrB,MA6FQ,KAAK,QAAUD,GAAU,UAG7B,KAAK,MAAQA,GAAU,UACvB,OAAK,WAAL,QAAe,oBAAoBD,GAAkB,KAAK,IAAI,EAC1D,KAAK,YACP,MAA0B,KAAK,UAAU,EAEvC,KAAK,KAAK,GACZ,KAAK,QAAQ,EAGf,MAAM,KAAK,yBAAyB,KAAK,aAAc,CAAC,CAAC,EACzD,KAAK,cAAc,EAAK,EACxB,KAAK,MAAM,EACX,KAAK,MAAQC,GAAU,QACzB,CAAC,CAAD,EAnFE,KAAK,MAAM,CACb,CAKA,OAAQ,CACN,QAAQ,MAAM,qBAAqB,EACnC,KAAK,OAAS,KACd,KAAK,SAAW,KAChB,KAAK,WAAa,KAClB,KAAK,WAAa,KAClB,KAAK,cAAgB,CAAC,EACtB,KAAK,aAAe,CAAC,EACrB,KAAK,cAAgB,IAAM,CAAC,EAC5B,KAAK,MAAQA,GAAU,OACzB,CAKA,aAAc,CACZ,MAAO,CAAC,CAAC,SAAS,uBACpB,CAKA,MAAO,CACL,MAAO,CAAC,CAAC,SAAS,uBACpB,CAQM,MAAM9X,EAAYgY,EAAiB,iCACvC,GAAI,CAAC,KAAK,YAAY,EACpB,MAAM,IAAI,MAAM,sCAAsC,EAGxD,GADA,QAAQ,MAAM,8BAA+B,KAAK,KAAK,EACnD,KAAK,QAAUF,GAAU,QAC3B,MAAM,KAAK,KAAK,UACP,KAAK,QAAUA,GAAU,SAClC,OAEF,KAAK,MAAQA,GAAU,SACvB,GAAI,CACF,MAAM,KAAK,KAAK9X,EAAYgY,CAAe,EAE3C,KAAK,SAAS,iBAAiBH,GAAkB,KAAK,IAAI,EAC1D,KAAK,WAAW,EACX,KAAK,KAAK,IACb,MAAM,KAAK,WAAW,GAExB,QAAQ,MAAM,aAAa,EAC3B,KAAK,MAAQC,GAAU,QACvB,KAAK,cAAc,EAAI,CACzB,OAASzE,EAAP,CACA,QAAQ,MAAM,uBAAwBA,CAAG,EACzC,KAAK,MAAQyE,GAAU,OACzB,CACF,CAAC,CAAD,CAyBM,qBAAqBlQ,EAAO4I,EAAW,iCAC3C,GAAI,CAAC,KAAK,OACR,OAEF,MAAMyH,EAA2B,KAAK,iBAAiBrQ,EAAO4I,CAAS,EACjE0H,EAAuB,KAAK,aAClC,KAAK,aAAe,KAAK,qBACvBD,EACAC,CACF,EACA,GAAI,CACF,MAAM,KAAK,yBACTA,EACA,KAAK,aACL1H,CACF,CACF,OAASjB,EAAP,CACA,QAAQ,MAAM,sCAAuCA,CAAK,CAC5D,CACF,CAAC,CAAD,CAOM,KAAKvP,EAAYgY,EAAiB,iCACtC,MAAM,KAAK,kBAAkB,EAC7B,KAAK,WAAahY,EAClB,KAAK,cAAgBgY,CACvB,CAAC,CAAD,CAEM,mBAAoB,iCACxB,GAAI,CAAC,KAAK,OAAQ,CAChB,KAAM,CAAE,OAAAzB,EAAQ,SAAA4B,CAAS,EAAI,KAAK,gCAAgC,EAClE,KAAK,OAAS5B,EACd,KAAK,SAAW4B,EAChB,KAAK,cAAgB,KAAK,wBAAwB,EAClD,MAAMC,EAAmB,KAAK,SAAS,KAAK,EAC5ClB,GAAoB,KAAK,MAAM,EAC/B,MAAMkB,CACR,CACF,CAAC,CAAD,CAEA,iCAAkC,CAChC,MAAM7B,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,MAAQoB,GACfpB,EAAO,OAASqB,GAChB,MAAMO,EAAW,SAAS,cAAc,OAAO,EAC/C,OAAAA,EAAS,MAAQ,GACjBA,EAAS,UAAY5B,EAAO,cAAc,EACnC,CAAE,OAAAA,EAAQ,SAAA4B,CAAS,CAC5B,CAEA,yBAA0B,CACxB,IAAI7B,EAAgB,CAAC,EACrB,QAAS9O,EAAI,EAAGA,EAAIiQ,GAA4BjQ,IAAK,CACnD,MAAMiP,EAAe,SAAS,cAAc,OAAO,EACnDA,EAAa,SAAW,GACxBA,EAAa,YAAc,GAC3BH,EAAc,KAAKG,CAAY,CACjC,CACA,OAAOH,CACT,CAMA,YAAa,CACX,MAAM+B,EAAQ,IAAOX,GACrB,KAAK,WAAa,MAAwB,IAAM,CAE5C,KAAK,QAAUI,GAAU,UACzB,KAAK,QAAUA,GAAU,UAIvB,KAAK,QAAUA,GAAU,SAC3BzB,GAA0B,KAAK,cAAe,KAAK,MAAM,EAE3D,KAAK,WAAW,EAClB,EAAGgC,CAAK,CACV,CAEM,YAAa,iCACjB,GAAI,CACE,KAAK,KAAK,GACZ,KAAK,QAAQ,EAEf,MAAM,KAAK,SAAS,wBAAwB,CAC9C,OAAS9I,EAAP,CACA,cAAQ,MAAM,sBAAuBA,EAAO,QAAS,KAAK,KAAK,EACzDA,CACR,CACF,CAAC,CAAD,CAEA,SAAU,CACR,SAAS,qBAAqB,CAChC,CAOA,iBAAiB3H,EAAO4I,EAAW,CA7NrC,MA8NI,MAAM8H,EAAe,CAAC,EACtB,UAAWhT,KAAQsC,EAAO,CACxB,GAAI0Q,EAAa,SAAWb,GAC1B,MACSnS,EAAK,cAAc,EAAAkL,EAAUlL,EAAK,cAAf,cAA4B,UACxDgT,EAAa,KAAKhT,EAAK,UAAU,CAErC,CACA,OAAOgT,CACT,CAcA,qBAAqBC,EAAWC,EAAW,CACzC,MAAMC,EAAkB,CAAC,EACnBC,EAAY,CAAC,EAEnBH,EAAU,QAAQlT,GAAS,CACzB,MAAMsT,EAAcH,EAAU,QAAQnT,CAAK,EACvCsT,IAAgB,IAAMA,EAAcJ,EAAU,OAEhDE,EAAgBE,GAAetT,EAE/BqT,EAAU,KAAKrT,CAAK,CAExB,CAAC,EAED,QAASmC,EAAI,EAAGA,EAAI+Q,EAAU,OAAQ/Q,IAC/BiR,EAAgBjR,KACnBiR,EAAgBjR,GAAKkR,EAAU,MAAM,GAGzC,OAAOD,CACT,CAUM,yBAAyBD,EAAWD,EAAW/H,EAAY,KAAM,iCACrE,MAAMoI,EAAY,KAAK,IAAIJ,EAAU,OAAQD,EAAU,MAAM,EAC7D,QAAS/Q,EAAI,EAAGA,EAAIoR,EAAWpR,IACzBgR,EAAUhR,KAAO+Q,EAAU/Q,KAEpBgR,EAAUhR,MAGf,CAACgJ,GAAaA,EAAUgI,EAAUhR,OACpC,MAAM,KAAK,WAAW,YACpBgR,EAAUhR,GACV,KAAK,cAAcA,EACrB,GAEE,KAAK,cAAcA,KAErB,KAAK,cAAcA,GAAG,UAAY,OAGlC+Q,EAAU/Q,KACZ,MAAM,KAAK,WAAW,YAAY+Q,EAAU/Q,GAAI,KAAK,cAAcA,EAAE,GAG3E,CAAC,CAAD,CACF,CAEO,MAAMqR,GAAmB,IAAId,G,+WCpSpC,MAAMe,EAAkB,CAAxB,cACE,gBAAQ,CAACzU,EAAS0U,IAAU,CAC1B,KAAK,QAAU1U,EACf,KAAK,MAAQ0U,EACb,KAAK,UAAU,EACf,KAAK,cAAc,CACrB,CAAC,EAED,oBAAY,IAAM,CAjBpB,YAkBI,MAAMC,EAAc,KAAK,MAAM,SAAS,IAAyB,EAC3DC,EAAc,KAAK,MAAM,SAAS,IAAyB,GACjE,eAAU,eAAV,cAAwB,sBAAxB,eAA8CD,CAAW,GACzD,eAAU,eAAV,cAAwB,kBAAxB,eAA0CC,CAAW,EAErD,KAAK,MAAM,UAAUD,GAAe,CAvBxC,IAAApY,EAAAsY,GAwBMA,GAAAtY,EAAA,UAAU,eAAV,YAAAA,EAAwB,sBAAxB,MAAAsY,EAAA,KAAAtY,EAA8CoY,CAAAA,CAChD,EAAG,IAAyB,EAE5B,KAAK,MAAM,UAAUC,GAAe,CA3BxC,IAAArY,EAAAsY,GA4BMA,GAAAtY,EAAA,UAAU,eAAV,YAAAA,EAAwB,kBAAxB,MAAAsY,EAAA,KAAAtY,EAA0CqY,CAAAA,CAC5C,EAAG,IAAyB,CAC9B,CAAC,EAED,oBAAY,IAAY,yBACtB,QAAQ,IAAI,2BAA2B,EACvC,MAAME,EAAU,KAAK,MAAM,SAAS,IAAyB,EAC7D,MAAM,KAAK,QAAQ,qBAAqB,CAACA,CAAO,CAClD,CAAC,CAAD,EAEA,oBAAY,IAAY,yBACtB,QAAQ,IAAI,2BAA2B,EACvC,MAAMA,EAAU,KAAK,MAAM,SAAS,IAAyB,EAC7D,MAAM,KAAK,QAAQ,qBAAqB,CAACA,CAAO,CAClD,CAAC,CAAD,EAEA,gBAAQ,IAAM,CACZ,QAAQ,IAAI,uBAAuB,EACnC,KAAK,QAAQ,MAAM,CACrB,CAAC,EAED,wBAAgB,IAAM,CACpB,GAAI,UAAU,aACZ,GAAI,CACF,UAAU,aAAa,iBACrB,mBACA,KAAK,SACP,EACA,UAAU,aAAa,iBAAiB,eAAgB,KAAK,SAAS,EACtE,UAAU,aAAa,iBAAiB,SAAU,KAAK,KAAK,CAC9D,OAAS9F,EAAP,CACA,QAAQ,MAAM,0CAA2CA,CAAG,CAC9D,CAEJ,CAAC,CAAD,CACF,CAEO,MAAM+F,GAAe,IAAIN,GC7C1BO,GAAe,IAAM,CACzB,MAAMhN,G,EAAgB,MAAY,IAAuB,EACnD,CAACiN,EAASC,CAAU,G,EAAI,YAASV,GAAiB,KAAK,CAAC,EACxD7Y,G,EAAa,MAAc,EAC3B+Y,G,EAAQ,MAAmB,EAE3BS,G,EAAc,eAAY,IAAM,CAChCF,EACFT,GAAA,KAAsB,EAAE,MAAMxF,GAC5B,QAAQ,MAAM,wBAAyBA,CAAG,CAC5C,GAEAwF,GAAA,MAAuB7Y,EAAYuZ,CAAU,EAAE,MAAMlG,GACnD,QAAQ,MAAM,wBAAyBA,CAAG,CAC5C,EACA+F,GAAA,MAAmBpZ,EAAY+Y,CAAK,EAExC,EAAG,CAAC/Y,EAAYsZ,EAASP,CAAK,CAAC,EAW/B,O,EARA,aAAU,IACD,IAAM,CACXF,GAAA,KAAsB,EAAE,MAAMxF,GAC5B,QAAQ,MAAM,mCAAoCA,CAAG,CACvD,CACF,EACC,CAAC,CAAC,EAGH,CAACwF,GAAiB,YAAY,GAC9BxM,IAAkB,KAEX,KAGP,gCACE,gBAAC9I,EAAA,EAAO,CACN,MAAO,GAAG+V,EAAU,aAAe,sCAEnC,gBAAC9V,EAAA,EAAU,CACT,OAAQ,CAAC8V,EACT,IAAI,MACJ,QAAS,IAAME,EAAY,EAC3B,cAAY,WAEZ,gBAACC,GAAA,EAAO,IAAC,CACX,CACF,EACCH,GAAW,gBAACI,GAAA,CAAa,WAAAH,CAAA,CAAwB,CACpD,CAEJ,EAMMG,GAAe,IAAM,CACzB,MAAMlJ,G,EAAY,MAAY,IAAe,EACvCmJ,G,EAAc,MAAY,IAAiB,EAEjD,O,EAAA,aAAU,IAAM,CACdd,GAAA,qBAAsCc,EAAanJ,CAAS,EAAE,MAAM6C,GAAO,CACzE,QAAQ,MAAM,wBAAyBA,CAAG,CAC5C,CAAC,CACH,EAAG,CAAC7C,EAAWmJ,CAAW,CAAC,EAEpB,IACT,EAEA,GAAeN,G,0BC9ER,MAAMO,GAAoB,CAAC,CAAE,IAAA1V,CAAI,IAAM,CAC5C,MAAM2Q,G,EAAqB,MAAY,IAAwB,EACzDtP,G,EAAcmG,EAAA,IAAc,gBAAuB,EACnD,CACJ,iBAAAhB,EACA,wBAAyB8M,EACzB,kBAAA7M,CACF,G,EAAIC,EAAA,GAAe,EACbiP,EAAqBnP,GAAoB,CAAC,CAAC8M,EACjD,MAAI,CAAC3C,EAAmB,QAAU,E,EAAC,OAAuB,EACjD,KAGP,iBAACtR,EAAA,EAAO,CAAC,MAAO,GAAIsW,EAA+B,OAAV,wBAAU,EACjD,iBAACrW,EAAA,EAAU,CACT,OAAQ,CAACqW,EACT,IAAA3V,EACA,SAAUqB,EACV,QAAS,IAAM,CACboF,EAAkB,CACpB,EACA,cAAY,oBAEZ,iBAACmP,GAAA,EAAe,IAAC,CACnB,CACF,CAEJ,EClCaC,GAAuB,CAAC,CAAE,QAAAC,CAAQ,IAAM,CACnD,MAAMha,G,EAAa,MAAc,EACjC,OACE,gBAACoP,EAAA,QAAY,YAAW,GAAC,aAAcxK,GAAS,CAACA,GAASoV,EAAQ,GAChE,gBAAChH,GAAA,GAAa,CAAC,MAAM,yBACnB,gBAAC,OAAI,IAAI,mBAAmB,IAAI,qCAAqC,EACrE,gBAAC,MAAS,CAAC,QAAQ,OACjB,gBAAC1D,GAAA,EAAM,CACL,QAAQ,UACR,QAAS,IAAM,CACbtP,EACG,sBAAsB,GAAM,CAC3B,UAAW,GACX,eAAgB,SAClB,CAAC,EACA,MAAM,QAAQ,KAAK,EACtBga,EAAQ,CACV,EACA,cAAY,8BACb,UAED,CACF,CACF,CACF,CAEJ,E,+CClBO,MAAMC,GAAa,IAAM,CAC9B,MAAMC,G,EAAsB,MAAY,IAA4B,EAC9DC,G,EAAa,OAAsB,SAAsB,EACzDC,G,EAAaC,GAAA,IAAkB,SAAsB,EAE3D,OACE,iBAAC9W,EAAA,EAAO,CAAC,IAAI,OAAO,MAAO,GAAG4W,EAAa,QAAU,eACnD,iBAAC3W,EAAA,EAAU,CACT,QAAS4W,EACT,OAAQ,CAACD,EACT,cAAY,YAEXD,IAAwB,EACvB,iBAACI,GAAA,EAAQ,IAAC,EAEV,iBAACC,GAAA,EAAc,CAAC,cAAY,kBAAkB,CAElD,CACF,CAEJ,E,8OCpBO,MAAMC,GAAmB,IAAM,CACpC,MAAMC,G,EAAY,UAAO,IAAI,EACvBza,G,EAAa,MAAc,EAC3B,CAAC0a,EAASC,CAAW,G,EAAI,YAAS,EAAK,EACvC,CAACC,EAAeC,CAAgB,G,EAAI,YAAS,EAAK,EAClDC,G,EAAkB,O,EACtB,MAAgC,kCAAkC,CACpE,EACM,CAAE,kBAAAC,CAAkB,G,EAAIC,GAAA,GAAW,EACnCC,EAAeH,GAAmB,CAACJ,EAEnCQ,G,EAAe,eAAY,IAAY,2BAC3C,GAAI,CAACT,EAAU,QAAS,CACtB,KAAM,CAAE,0BAAAU,CAA0B,EAAI,MAAM,qDAG5CV,EAAU,QAAU,IAAIU,EACtB,s+NAAY,sBACd,CACF,CACF,CAAC,EAAE,CAAC,CAAC,EAECC,G,EAAe,eAAY,IAAY,2BACvCX,EAAU,UACZ,MAAMza,EAAW,2BAA2Bya,EAAU,OAAO,EAC7DA,EAAU,QAAU,KAExB,CAAC,EAAE,CAACza,CAAU,CAAC,EAETqb,G,EAAgB,eACdhI,GAAO,2BACX,IAAI5S,GAAU,mDACV4S,EAAI,UACN5S,GAAU4S,EAAI,SAEhB7D,GAAA,WAAsB,CACpB,MAAO/O,EACT,CAAC,EAEDka,EAAY,EAAI,EAChB,MAAMS,EAAa,EACnBX,EAAU,QAAU,KACpB,QAAQ,MAAMpH,CAAG,CACnB,CAAC,EACD,CAAC+H,CAAY,CACf,EAEME,I,EAAY,eAAY,IAAY,2BACxC,GAAI,CACFX,EAAY,EAAK,EACjB,MAAMO,EAAa,EAEnB,MAAMK,EAAgBvb,EAAW,2BAC/Bya,EAAU,OACZ,EACA,GAAIc,EAAc,YAChB,MAAMvb,EAAW,sBAAsBya,EAAU,OAAO,MACnD,CACL,MAAMpH,GAAMkI,EAAc,OAC1B,MAAMF,EAAchI,EAAG,CACzB,CACF,OAASA,EAAP,CACA,MAAMgI,EAAchI,CAAG,CACzB,CACF,CAAC,EAAE,CAACrT,EAAYqb,EAAeH,CAAY,CAAC,EAgB5C,O,EAdA,aAAU,IAAM,CACD,2BACNT,EAAU,UACb,MAAMS,EAAa,GAGrB,MAAMK,EAAgBvb,EAAW,2BAC/Bya,EAAU,OACZ,EACAI,EAAiBU,EAAc,WAAW,EAC1CZ,EAAY,CAACY,EAAc,WAAW,CACxC,CAAC,CACH,EAAG,CAACR,EAAkB,WAAY/a,EAAYkb,CAAY,CAAC,EAEvDN,GAAiBrS,GAAA,SAAoB,EAErC,iBAAChF,EAAA,EAAO,CAAC,MAAO,QAAQ0X,EAAe,MAAQ,0BAC7C,iBAACzX,EAAA,EAAU,CACT,OAAQ,CAACyX,EACT,SAAUP,EACV,QAAS,IAAY,2BACfO,EACF,MAAMG,EAAa,EAEnB,MAAME,GAAU,CAEpB,CAAC,EACD,cAAY,yBAEZ,iBAACE,GAAA,EAAc,IAAC,CAClB,CACF,EAIG,IACT,E,eC1FA,MAAMC,GAAsB,OAAW,IACrC,qDACF,EAEMC,GAAmB,IAAM,CAC7B,KAAM,CACJ,iBAAAhR,EACA,wBAAyB8M,EACzB,wBAAyBmE,EACzB,kBAAAhR,CACF,G,EAAIC,EAAA,GAAe,EACbiK,G,EAAqB,MAAY,IAAwB,EACzD+G,EAAqBlR,GAAoB,CAAC8M,GAAS,CAAC,CAACmE,EACrD,CAACE,EAAWC,CAAY,G,EAAI,YAAS,EAAK,EAChD,MAAI,CAACjH,EAAmB,QAAU,E,EAAC,OAAuB,EACjD,KAGP,gBAAC,WAAQ,KACP,gBAACtR,EAAA,EAAO,CACN,MAAO,GAAIqY,EAA+B,OAAV,wBAChC,IAAI,cAEJ,gBAACpY,EAAA,EAAU,CACT,OAAQ,CAACoY,EACT,QAAS,IAAM,CACTlR,EACFC,EAAkB,EAElBmR,EAAa,EAAI,CAErB,EACA,cAAY,qBAEZ,gBAACC,EAAA,EAAS,IAAC,CACb,CACF,EACCF,GACC,gBAAC9B,GAAoB,CAAC,QAAS,IAAM+B,EAAa,EAAK,EAAG,CAE9D,CAEJ,EAEaE,GAAqB,IAE9B,gBAAC,cACC,gBAAC,cACC,gBAACN,GAAA,IAAiB,EAClB,gBAAC1N,GAAQ,CAAC,KAAM,UAAgB,CAAO,EACvC,gBAACA,GAAQ,CAAC,KAAM,UAAgB,CAAO,EACtCzF,GAAA,mBAAgC,gBAAC,KAAgB,IAAC,EAAK,KACxD,gBAAC0T,GAAA,EAAiB,IAAC,EACnB,gBAACzB,GAAgB,IAAC,EACjBjS,GAAA,uBAAoC,gBAACkT,GAAA,IAAoB,EAC1D,gBAACjR,EAAA,EAAI,CACH,MAAM,SACN,IAAK,CACH,QAAS,OACT,MAAO,CACL,QAAS,MACX,CACF,GAEA,gBAAC0R,GAAA,EAAW,CAAC,SAAQ,GAAC,CACxB,CACF,EACA,gBAAC,gBACC,gBAACC,GAAA,EAAgB,IAAC,EAClB,gBAACvC,GAAiB,IAAC,EACnB,gBAAC,GAAY,IAAC,EACd,gBAAChF,GAAY,IAAC,EACd,gBAACwH,GAAA,EAAS,IAAC,EACX,gBAAC5R,EAAA,EAAI,CACH,MAAM,SACN,IAAK,CAAE,QAAS,OAAQ,MAAO,CAAE,QAAS,MAAO,CAAE,GAEnD,gBAACyP,GAAU,IAAC,CACd,CACF,EACA,gBAAC,eACC,gBAACiC,GAAA,EAAW,IAAC,EACb,gBAACjC,GAAU,IAAC,CACd,CACF,E,eClGG,MAAMoC,GAAkB,IAE3B,gBAAC,UACC,IAAK,CACH,SAAU,SACV,MAAO,CACL,eAAgB,QAClB,CACF,GAEA,gBAAC,UACC,IAAK,CACH,MAAO,CACL,EAAG,QACH,EAAG,GACL,CACF,GAEA,gBAACF,GAAA,EAAgB,IAAC,CACpB,EACA,gBAAC,YACC,IAAK,CACH,MAAO,CACL,EAAG,OACL,CACF,GAEA,gBAACvC,GAAiB,CAAC,IAAK,CAAE,MAAO,CAAE,QAAS,MAAO,CAAE,EAAG,EACxD,gBAACvO,EAAA,EAAG,CAAC,IAAK,CAAE,MAAO,CAAE,QAAS,MAAO,CAAE,GACrC,gBAAC,GAAY,IAAC,CAChB,EACA,gBAACA,EAAA,EAAG,CACF,IAAK,CACH,QAAS,OACT,MAAO,CACL,QAAS,OACT,WAAY,SACZ,GAAI,IACN,CACF,GAEA,gBAACiR,GAAA,GAAa,IAAC,CACjB,EACA,gBAAC1H,GAAY,IAAC,EACd,gBAACvJ,EAAA,EAAG,CAAC,IAAK,CAAE,MAAO,CAAE,QAAS,MAAO,CAAE,GACrC,gBAAC+Q,GAAA,EAAS,IAAC,CACb,EACA,gBAAC5R,EAAA,EAAI,CACH,MAAM,SACN,IAAK,CAAE,QAAS,OAAQ,MAAO,CAAE,QAAS,MAAO,CAAE,GAEnD,gBAACyP,GAAU,IAAC,CACd,CACF,EACA,gBAAC,eACC,gBAACiC,GAAA,EAAW,IAAC,EACb,gBAACjC,GAAU,IAAC,CACd,CACF,EChES,GAAS,K,EACb,OAAe,EAAI,gBAACoC,GAAe,IAAC,EAAK,gBAACL,GAAkB,IAAC,E,cCG/D,MAAMO,GAAyB,IAAM,CAT5C,QAUE,MAAMvc,G,EAAa,MAAc,EAC3BwF,G,EAAa,MAAc,EAC3BgX,G,EAAoB,MAAY,IAAuB,EAE7D,MAAI,CAACA,GAAmB,MAAQhX,EACvB,KAIP,gBAAC,MAAa,CACZ,MAAM,sBACN,aAAcZ,GACZ,CAACA,GAAS5E,EAAW,iBAAiBwc,CAAiB,EAEzD,KAAM,IAAG,EAAAA,GAAmB,cAAnB,cAAgC,kDAAiD,EAAAA,GAAmB,OAAnB,cAAyB,QACnH,SAAU,IAAM,CACdxc,EAAW,iBAAiBwc,CAAiB,CAC/C,EACA,WAAW,SACb,CAEJ,E,eC8DA,SA1EmB,IAAM,CACvB,MAAMC,G,EAAWC,GAAA,GAAc,EACzB,CAAE,OAAAnc,EAAQ,KAAA+R,CAAK,G,EAAI,MAAU,EAC7B9M,G,EAAa,MAAc,EAC3BmX,G,EAAY,MAAY,IAAe,EACvCC,G,EAAYC,EAAA,GAAYF,CAAS,EACjCG,G,EAAoB,MAAY,IAAuB,EACvD9c,G,EAAa,MAAc,EAoCjC,O,EAlCA,aAAU,IAAM,CACd,GAAI,CAACO,EAAQ,CACXkc,EAAS,GAAG,EACZ,MACF,CAEE,CAACG,GACD,EACED,IAAc,iBACdA,IAAc,mBACdG,IAGQL,EAANnK,EAAe,YAAY/R,GAAU,MAAM+R,IACjC,YAAY/R,GAAU,IADiB,CAGzD,EAAG,CAACuc,EAAmBF,EAAWD,EAAWF,EAAUnK,EAAM/R,CAAM,CAAC,G,EAEpE,aAAU,IAAM,CAEViF,GACFxF,EAAW,mBAAmB,CAAC,MAAM,CAAC,CAE1C,EAAG,CAACwF,EAAYxF,CAAU,CAAC,G,EAE3B,aAAU,IACD,IAAM,CAEP8c,GACF9c,EAAW,MAAM,CAErB,EACC,CAACA,EAAY8c,CAAiB,CAAC,EAE7BA,EAKH,gBAACtS,EAAA,EAAI,CAAC,IAAK,CAAE,KAAM,MAAO,EAAG,UAAU,UACpC,CAAChF,GACA,gBAAC6F,EAAA,EAAG,CAAC,IAAK,CAAE,EAAG,MAAO,MAAO,CAAE,EAAG,KAAM,CAAE,EAAG,cAAY,UACvD,gBAAC0R,GAAA,EAAM,IAAC,CACV,EAEF,gBAAC1R,EAAA,EAAG,CACF,IAAK,CACH,EAAG,OACH,KAAM,QACN,UAAW,CACb,EACA,cAAY,gBAEZ,gBAACe,EAAkB,IAAC,CACtB,EACC,CAAC5G,GACA,gBAAC6F,EAAA,EAAG,CAAC,IAAK,CAAE,WAAY,EAAG,UAAW,KAAM,EAAG,cAAY,UACzD,gBAAC,GAAM,IAAC,CACV,EAEF,gBAACkR,GAAsB,IAAC,CAC1B,EA1BO,gBAACrP,EAAA,EAAgB,IAAC,CA4B7B,C,0KCvFa8P,EAAqB,OAAW,IAEzC,gBAAC3R,EAAA,EAAG,CACF,IAAK,CACH,SAAU,WACV,SAAU,SACV,EAAG,UACH,SAAU,MACV,EAAG,OACH,EAAG,KACH,EAAG,SACH,gBAAiB,OAAO,KACxB,eAAgB,QAChB,iBAAkB,WACpB,EACA,cAAY,oBAEZ,gBAACb,EAAA,EAAI,CACH,MAAM,SACN,UAAU,SACV,IAAK,CACH,SAAU,WACV,EAAG,OACH,IAAK,SACL,KAAM,EACN,UAAW,QACb,GAEA,gBAACqD,EAAA,EAAI,CAAC,MAAM,QAAQ,QAAQ,KAAK,IAAK,CAAE,MAAO,CAAE,SAAU,KAAM,CAAE,GAAG,UAEtE,EACA,gBAACA,EAAA,EAAI,CACH,MAAM,QACN,QAAQ,KACR,IAAK,CAAE,GAAI,KAAM,MAAO,CAAE,SAAU,KAAM,CAAE,GAC7C,iCAED,EACA,gBAACA,EAAA,EAAI,CACH,MAAM,QACN,QAAQ,KACR,IAAK,CAAE,GAAI,KAAM,MAAO,CAAE,SAAU,KAAM,CAAE,GAC7C,0CAED,CACF,CACF,CAEH,EClDYoP,G,EAAQ,MAAO,MAAO,CACjC,MAAO,OACP,OAAQ,OACR,EAAG,IACL,CAAC,E,cCCD,MAAMC,EAAuB,EAKvBC,EAAe,KAAK,MAAM,s+NAAY,yBAA2B,IAAI,EACrEC,EAAeD,GAAc,UAAY,CAAC,EAC1CE,EAAYF,GAAc,YAAc,GAExCG,GAAkBH,GAAc,WAAa,sBAGtCI,EAAiB,CAAC,CAAE,MAAA3V,EAAO,aAAAD,EAAa,IAAM,CACzD,MAAM6V,EAAe,cACfC,G,EAAgBxL,EAAA,GAASuL,CAAY,EAC3C,OACE,gBAAC,WAAQ,KACP,gBAACnS,EAAA,EAAG,CACF,IAAK,CACH,KAAM,QACN,OAAQ,OACR,GAAI,KACJ,MAAO,CAAE,KAAM,OAAQ,CACzB,GAECzD,GAASA,EAAM,OAAS,EACvB,gBAACkB,EAAA,EAAS,CACR,MAAAlB,EACA,aAAc6V,EAAgBP,EAAuBvV,EAAA,CACvD,EACEyV,EAAa,KAAKlb,GAAM,OAAO,SAAS,KAAK,SAASA,CAAE,CAAC,EAC3D,gBAACmJ,EAAA,EAAG,CACF,IAAK,CACH,QAAS,OACT,WAAY,SACZ,KAAM,OACN,EAAG,KACL,GAEA,gBAAC,KAAE,KAAMiS,GAAiB,OAAO,SAAS,IAAI,cAC5C,gBAACL,EAAK,CACJ,IAAK,CAAE,EAAG,KAAM,UAAW,KAAM,EACjC,IAAI,iBACJ,IAAKI,CAAA,CACP,CACF,CACF,EAEA,gBAACL,EAAkB,IAAC,CAExB,CACF,CAEJ,EAGaU,EAAmB,CAAC,CAAE,MAAA9V,CAAM,IAErC,gBAAC4C,EAAA,EAAI,CACH,UAAU,SACV,IAAK,CACH,KAAM,UACN,GAAI,KACJ,MAAO,CACL,KAAM,SACR,EACA,MAAO,CACL,KAAM,OACR,CACF,GAEA,gBAACA,EAAA,EAAI,CAAC,IAAK,CAAE,KAAM,OAAQ,EAAG,MAAM,OACjC5C,GAASA,EAAM,OAAS,GACvB,gBAACkB,EAAA,EAAS,CAAC,MAAAlB,EAAc,YAAa,EAAG,CAE7C,CACF,C,mCCnFJ,MAAM+V,EAAwB,WACxBC,EAAW,IAAI,IAAI,CACvB,CAAC,CAAC,GAAM,QAAQ,EAAE,SAAS,EAAG,aAAa,EAC3C,CAAC,CAAC,GAAM,SAAS,EAAE,SAAS,EAAG,QAAQD,IAAwB,EAC/D,CAAC,CAAC,GAAO,QAAQ,EAAE,SAAS,EAAG,GAAGA,YAAgC,EAClE,CAAC,CAAC,GAAO,SAAS,EAAE,SAAS,EAAGA,CAAqB,EACrD,CAAC,CAAC,GAAM,MAAS,EAAE,SAAS,EAAG,QAAQA,IAAwB,EAC/D,CAAC,CAAC,GAAO,MAAS,EAAE,SAAS,EAAG,GAAGA,GAAuB,CAC5D,CAAC,EAEYE,EAAoB,CAAC,CAAE,SAAA3U,EAAU,QAAAO,EAAS,MAAApE,CAAM,IAAM,CACjE,MAAMyY,EAAgB5U,IAAa,OACnC,GAAI,CAAC4U,GAAiB,CAACzY,EAErB,OAAOyY,EACHF,EACG,IAAI,CAACnU,EAAS,MAAS,EAAE,SAAS,CAAC,EACnC,QAAQkU,EAAuBzU,CAAQ,EAC1C,GAEN,MAAM6U,EAAiB1Y,EAAM,SAAW,EAExC,IAAIO,EAAQgY,EAAS,IAAI,CAACnU,EAASpE,EAAM,MAAM,EAAE,SAAS,CAAC,EAC3D,OAAIO,EACFA,EAAQA,EAAM,QAAQ+X,EAAuBzU,CAAQ,EAErDtD,EAAQ,GAAGsD,KAAY7D,EAAM,SAE/BO,EAAQ,GAAGA,IAAQP,EAAM,SAAW,aAAe,KAC5C,GAAGO,IAAQmY,EAAiB,mBAAqB,IAC1D,C,qPCfO,MAAMC,EAAc,OAAW,CAAC,CAAE,OAAA9Y,CAAO,IAAM,CACpD,MAAM+Y,G,EAAa,O,EAAY,MAAsC/Y,CAAM,CAAC,EACtErF,G,EAAS,MAAY,iBAAgC,EACrD0F,G,EAAcmG,GAAA,IAAc,gBAAuB,EACnD1L,G,EAAa,MAAc,EAC3BkI,I,EAAM,UAAO,IAAI,EACjB,CAACgW,EAAM9K,EAAM,G,EAAI+K,EAAA,GAAU,EAAK,EAChCnY,I,EAAeiN,EAAA,GAAc/K,GAAKgW,EAAM,CAC5C,QAAS,IAAM9K,GAAO,EAAK,CAC7B,CAAC,EACD,OACE,gBAAC5I,EAAA,EAAI,CACH,UAAU,SACV,QAAQ,SACR,IAAK,CAAE,EAAG,OAAQ,EAAG,MAAO,EAC5B,IAAAtC,EAAA,EAECrI,GACC,gBAAC2K,EAAA,EAAI,CACH,QAAQ,UACR,MAAM,SACN,IAAK,CACH,GAAI,UACJ,EAAG,cACH,oBAAqB,KACrB,qBAAsB,IACxB,GAEA,gBAACqD,GAAA,EAAI,CAAC,IAAK,CAAE,MAAO,cAAe,GAAIhO,EAAO,IAAK,EACnD,gBAAC2D,EAAA,EAAU,CACT,IAAK,CACH,MAAO,QACT,EACA,QAAS,IAAM,CACbxD,EAAW,cAAc,KAAK,CAChC,EACA,cAAY,2BAEZ,gBAACuO,EAAA,EAAS,IAAC,CACb,CACF,EAEF,gBAAC6P,EAAA,EAAK,CACJ,QAASH,GAAY,GACrB,OAAQ,CAAC1Y,EACT,IAAK,CACH,MAAO,CAAE,UAAW,UAAW,EAAG,MAAO,EACzC,EAAG,KACH,oBAAqB,EACrB,qBAAsB,CACxB,EACF,EACA,gBAAC,KAAqB,KACnB,aACC,gBAAC/B,EAAA,EAAU,CACT,QAAS,IAAM4P,GAAO,EACtB,IAAK,CACH,MAAO,SACP,OAAQ,cACR,UAAW,SACX,OAAQ,SACV,GAECpN,GAAe,gBAACqY,EAAA,EAAU,IAAC,EAAK,gBAAC3K,EAAA,EAAU,IAAC,CAC/C,CAEJ,CACF,CAEJ,CAAC,E,mPC/EM,MAAM4K,EAAqB,IAAM,CACtC,MAAMte,G,EAAa,MAAc,EAEjC,OACE,gBAACwK,EAAA,EAAI,CACH,UAAU,SACV,MAAM,SACN,QAAQ,SACR,IAAK,CACH,SAAU,WACV,SAAU,SACV,EAAG,UACH,SAAU,MACV,EAAG,OACH,EAAG,KACH,EAAG,SACH,MAAO,eACP,GAAI,kBACJ,UAAW,QACb,GAEA,gBAACsP,EAAA,EAAe,CAAC,MAAO,GAAI,OAAQ,GAAI,EACxC,gBAACjM,GAAA,EAAI,CAAC,QAAQ,KAAK,IAAK,CAAE,EAAG,MAAO,GAAG,6BAEvC,EACA,gBAACyB,EAAA,EAAM,CACL,QAAQ,SACR,QAAS,IAAY,0BACnB,MAAMtP,EAAW,sBAAsB,EAAK,CAC9C,CAAC,EACD,cAAY,yBAEZ,gBAACuO,EAAA,EAAS,CAAC,MAAO,GAAI,OAAQ,GAAI,EAAE,wBAEtC,CACF,CAEJ,E,kCCxBA,MAAMgQ,EAAkB,IAAM,CAlB9B,MAoBE,MAAMf,EAAe,cACfgB,G,EAAsBvM,EAAA,GAASuL,CAAY,EAC3C5V,G,EAAQ,MAAY,IAAW,EAC/BuB,G,EAAc,MAAY,IAAiB,EAC3CkD,I,EAAgB,MAAY,IAAuB,EACnDoS,G,EAAiB,MAAY,IAAuB,EACpDja,I,EAAsB,MAAY,IAA8B,EAChEka,KACJ,EAAAD,GAAgB,WAAhB,cAA0B,YAAY,KAAMpS,IAAe,YAAY,EACnEsS,GAAgBxV,IAAgBsV,GAAgB,GAChDG,GACJJ,GAAuBG,IAAiBD,GAEpCG,I,EAAiB,WAAQ,IAAM,CACnC,MAAMA,GAAiBjX,EAAM,OAAOtC,IAAQA,GAAK,KAAOmZ,GAAgB,EAAE,EAC1E,OAAIG,IAA4BH,GAC9BI,GAAe,QAAQJ,CAAc,EAEhCI,EACT,EAAG,CAACjX,EAAO6W,EAAgBG,EAAwB,CAAC,EAEpD,OACE,gBAACpU,EAAA,EAAI,CACH,IAAK,CACH,KAAM,MACR,EACA,UAAWgU,EAAsB,SAAW,OAE5C,gBAACM,EAAA,CACC,cAAAH,GACA,eAAAF,EACA,oBAAAja,EAAA,CACF,EACA,gBAACgG,EAAA,EAAI,CACH,UAAW,CAAE,WAAY,SAAU,MAAO,KAAM,EAChD,IAAK,CACH,SAAU,SACV,EAAG,QACH,KAAM,UACN,MAAO,CACL,KAAM,OACR,CACF,GAEA,gBAAC2C,EAAA,CACC,oBAAAqR,EACA,kBAAmBC,EACnB,wBAAyBG,GACzB,eAAAC,GACA,WAAYjX,EAAM,OACpB,CACF,CACF,CAEJ,EAIauF,EAAW,CAAC,CACvB,wBAAA4R,EACA,kBAAAC,EACA,eAAAH,EACA,WAAAI,EACA,oBAAAT,CACF,IAAM,CAEJ,MAAMU,I,EAAqB,eACzB5Z,GAAQ0Z,GAAqB1Z,EAAK,KAAO0Z,EAAkB,GAC3D,CAACA,CAAiB,CACpB,EACA,OACE,gBAAC,WAAQ,KACN,CAACD,GACA,gBAACI,EAAA,CAAkB,kBAAAH,CAAA,CAAsC,EAE3D,gBAACI,EAAA,CACC,oBAAAZ,EACA,eAAAK,EACA,mBAAAK,EAAA,CACF,CACF,CAEJ,EAEMJ,EAAuB,CAAC,CAC5B,UAAAvU,EACA,cAAAoU,EACA,eAAAF,EACA,oBAAAja,CACF,IAAM,CACJ,MAAM6a,G,EAAmB,O,EACvB,MAA0BZ,GAAgB,EAAE,CAC9C,EAEA,OAAIja,EAEA,gBAAC6G,EAAA,EAAG,CACF,IAAK,CACH,GAAI,KACJ,KAAM,QACN,MAAO,CACL,KAAM,QACN,QAAS,OACT,WAAY,QACd,CACF,GAEA,gBAAC2S,EAAW,CAAC,OAAQxZ,EAAoB,GAAI,CAC/C,EAKF,gBAAC6G,EAAA,EAAG,CACF,IAAK,CACH,KAAM,QACN,GAAI,KACJ,MAAO,CAAE,GAAI,KAAM,UAAW,KAAM,CACtC,GAECoT,IACEE,GACD,CAAC,CAAC,UAAW,SAAU,aAAa,EAAE,SACpCU,GAAkB,cACpB,EACE,gBAAChU,EAAA,EAAG,CAAC,IAAK,CAAE,UAAW,UAAW,EAAG,MAAO,GAC1C,gBAACiT,EAAkB,IAAC,CACtB,EAEA,gBAAC1V,EAAA,EAAe,CAAC,OAAQ6V,GAAgB,GAAI,EAEnD,CAEJ,EAEMW,EAAqB,CAAC,CAC1B,eAAAP,EACA,mBAAAK,EACA,iBAAAvZ,EACA,oBAAA6Y,CACF,IAEI,gBAAChU,EAAA,EAAI,CACH,IAAK,CACH,KAAM,OACR,GAECqU,GAAkBA,EAAe,OAAS,GACzC,gBAAC/V,EAAA,EAAS,CACR,MAAO+V,EACP,YAAaL,EAAsB,OAAY,EAC/C,YAAaA,EAAsB,EAAI,OACvC,0BAA2BU,EAC3B,iBAAAvZ,CAAA,CACF,CAEJ,EAIEwZ,EAAoB,CAAC,CAAE,kBAAAH,EAAmB,iBAAArZ,CAAiB,IACxDqZ,EACL,gBAAC3T,EAAA,EAAG,CACF,IAAK,CACH,KAAM,QACN,UAAW,MACX,GAAI,KACJ,MAAO,CACL,GAAI,KACJ,UAAW,QACX,GAAI,CACN,EACA,MAAO,CACL,OAAQ,OACR,UAAW,MACX,UAAW,QACb,CACF,GAEA,gBAACxC,EAAA,EAAS,CACR,iBAAAlD,EACA,MAAM,OACN,OAAO,OACP,OAAQqZ,EAAkB,GAC5B,CACF,EACE,KAGN,EAAeT,C","sources":["components/AppData/useAppConfig.js","components/hooks/usePlaylist.js","plugins/whiteboard/PusherCommunicationProvider.js","plugins/whiteboard/WhiteboardEvents.js","plugins/whiteboard/useMultiplayerState.js","plugins/whiteboard/Whiteboard.jsx","plugins/whiteboard/ToggleWhiteboard.jsx","components/Playlist/PlaylistControls.jsx","components/ScreenshareTile.jsx","components/TileMenu.jsx","components/Pagination.jsx","components/VideoList.jsx","components/VideoTile.jsx","layouts/EmbedView.jsx","components/AppData/useAppLayout.js","layouts/mainGridView.jsx","layouts/mainView.jsx","components/Playlist/PlaylistItem.jsx","components/Playlist/Playlist.jsx","components/Settings/StartRecording.jsx","components/StatsForNerds.jsx","components/MoreSettings/ChangeNameModal.jsx","components/MoreSettings/ChangeSelfRole.jsx","components/MoreSettings/EmbedUrl.jsx","components/hooks/useFullscreen.js","components/MoreSettings/FullScreenItem.jsx","components/MoreSettings/MuteAllModal.jsx","components/MoreSettings/MoreSettings.jsx","components/PIP/pipUtils.js","components/PIP/PIPManager.js","components/PIP/SetupMediaSession.js","components/PIP/PIPComponent.jsx","components/ScreenShare.jsx","components/ScreenshareHintModal.jsx","components/Footer/ChatToggle.jsx","plugins/NoiseSuppression.js","components/Footer/ConferencingFooter.jsx","components/Footer/StreamingFooter.jsx","components/Footer.jsx","components/RoleChangeRequestModal.jsx","components/conference.jsx","components/FirstPersonDisplay.jsx","components/Image.jsx","components/gridView.jsx","components/peerTileUtils.jsx","components/Playlist/VideoPlayer.jsx","components/ScreenshareDisplay.jsx","layouts/screenShareView.jsx"],"sourcesContent":["import { selectAppDataByPath, useHMSStore } from \"@100mslive/react-sdk\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useAppConfig = (...path) => {\n  const appConfig = useHMSStore(\n    selectAppDataByPath(APP_DATA.appConfig, ...path)\n  );\n  return appConfig;\n};\n","import {\n  HMSPlaylistType,\n  selectAudioPlaylist,\n  selectVideoPlaylist,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\n\nexport const usePlaylist = type => {\n  const isAudioPlaylist = type === HMSPlaylistType.audio;\n  const selector = isAudioPlaylist ? selectAudioPlaylist : selectVideoPlaylist;\n  const active = useHMSStore(selector.selectedItem);\n  const selection = useHMSStore(selector.selection);\n  const playlist = useHMSStore(selector.list);\n  const hmsActions = useHMSActions();\n  const playlistAction = isAudioPlaylist\n    ? hmsActions.audioPlaylist\n    : hmsActions.videoPlaylist;\n\n  return {\n    active,\n    hasNext: selection.hasNext,\n    hasPrevious: selection.hasPrevious,\n    actions: playlistAction,\n    list: playlist,\n  };\n};\n","// @ts-check\nimport Pusher from \"pusher-js\";\n\nconst stringifyWithNull = obj =>\n  JSON.stringify(obj, (k, v) => (v === undefined ? null : v));\n\n/**\n * On whiteboard close, owner sends current state to remote peers.\n * Remote peers tear down too quickly(unsubscribing listeners) and are unable to store the last state.\n *\n * Hack: To overcome this, attach 2 listeners:\n * one for storing the message(won't be unsubscribed),\n * one for calling the actual whiteboard callback(will be unsubscribed on whiteboard close)\n *\n * This way the last state is always received and stored\n */\n\n/**\n * Base class which can be extended to use various realtime communication services.\n * Methods to broadcast and subscribe to events.\n *\n * Stores the last message received/broadcasted to resend when required(when board is ready)\n */\n\nclass PusherCommunicationProvider {\n  constructor() {\n    /** @private */\n    this.initialized = false;\n    /** @private */\n    this.lastMessage = {};\n  }\n\n  init = (roomId = \"\") => {\n    if (this.initialized) {\n      return;\n    }\n\n    /** @private */\n    this.pusher = new Pusher(process.env.REACT_APP_PUSHER_APP_KEY, {\n      cluster: \"ap2\",\n      authEndpoint: process.env.REACT_APP_PUSHER_AUTHENDPOINT,\n    });\n\n    // Pusher.default.logToConsole = true;\n\n    /** @private */\n    this.channel = this.pusher.subscribe(`private-${roomId}`);\n\n    /**\n     * When events(peer-join) are sent too early before subscribing to a channel,\n     * resend last event after subscription has succeeded.\n     */\n    this.channel.bind(\"pusher:subscription_succeeded\", this.resendLastEvents);\n\n    console.log(\"Whiteboard initialized communication through Pusher\");\n    this.initialized = true;\n  };\n\n  /**\n   * @param {string} eventName\n   * @param {any} message\n   */\n  storeEvent = (eventName, message) => {\n    this.lastMessage[eventName] = { eventName, ...message };\n  };\n\n  /**\n   * @param {string} eventName\n   * @returns {any}\n   */\n  getStoredEvent = eventName => {\n    return this.lastMessage[eventName];\n  };\n\n  /**\n   * @param {string} eventName\n   * @param {Object} arg\n   */\n  broadcastEvent = (eventName, arg = {}) => {\n    this.storeEvent(eventName, arg);\n\n    this.channel?.trigger(\n      `client-${eventName}`,\n      stringifyWithNull({ eventName, ...arg })\n    );\n  };\n\n  /**\n   *\n   * @param {string} eventName\n   * @param {Function} cb\n   */\n  subscribe = (eventName, cb) => {\n    this.channel?.bind(`client-${eventName}`, message =>\n      this.storeEvent(eventName, message)\n    );\n    this.channel?.bind(`client-${eventName}`, cb);\n    return () => {\n      this.channel?.unbind(`client-${eventName}`, cb);\n    };\n  };\n\n  /** @private */\n  resendLastEvents = () => {\n    for (const eventName in this.lastMessage) {\n      if (this.lastMessage[eventName]) {\n        this.channel?.trigger(\n          `client-${eventName}`,\n          this.lastMessage[eventName]\n        );\n      }\n    }\n  };\n}\n\n/**\n * @type {PusherCommunicationProvider}\n */\nexport const provider = new PusherCommunicationProvider();\n","export const WhiteboardEvents = {\n  // To broadcast new changes made in whiteboard\n  STATE_CHANGE: \"state-change\",\n  // To broadcast the current whole state of the board by the owner\n  CURRENT_STATE: \"current-state\",\n  // For newly joined peers to request current state from owner\n  REQUEST_STATE: \"request-state\",\n};\n","// @ts-check\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { selectDidIJoinWithin, useHMSStore } from \"@100mslive/react-sdk\";\nimport { provider as room } from \"./PusherCommunicationProvider\";\nimport { WhiteboardEvents as Events } from \"./WhiteboardEvents\";\nimport { useWhiteboardMetadata } from \"./useWhiteboardMetadata\";\n\nconst useWhiteboardState = () => {\n  const { amIWhiteboardOwner } = useWhiteboardMetadata();\n  const shouldRequestState = useHMSStore(selectDidIJoinWithin(850));\n\n  return { shouldRequestState, amIWhiteboardOwner };\n};\n\n/**\n * Ref: https://github.com/tldraw/tldraw/blob/main/apps/www/hooks/useMultiplayerState.ts\n */\nexport function useMultiplayerState(roomId) {\n  const [app, setApp] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n  const { amIWhiteboardOwner, shouldRequestState } = useWhiteboardState();\n\n  /**\n   * Stores current state(shapes, bindings, [assets]) of the whiteboard\n   */\n  const rLiveShapes = useRef(new Map());\n  const rLiveBindings = useRef(new Map());\n\n  const getCurrentState = useCallback(() => {\n    return {\n      shapes: rLiveShapes.current\n        ? Object.fromEntries(rLiveShapes.current)\n        : {},\n      bindings: rLiveBindings.current\n        ? Object.fromEntries(rLiveBindings.current)\n        : {},\n    };\n  }, []);\n\n  const sendCurrentState = useCallback(() => {\n    if (amIWhiteboardOwner && isReady) {\n      room.broadcastEvent(Events.CURRENT_STATE, getCurrentState());\n    }\n  }, [amIWhiteboardOwner, isReady, getCurrentState]);\n\n  const updateLocalState = useCallback(({ shapes, bindings, merge = true }) => {\n    if (!(shapes && bindings)) return;\n\n    if (merge) {\n      const lShapes = rLiveShapes.current;\n      const lBindings = rLiveBindings.current;\n\n      if (!(lShapes && lBindings)) return;\n      Object.entries(shapes).forEach(([id, shape]) => {\n        if (!shape) {\n          lShapes.delete(id);\n        } else {\n          lShapes.set(shape.id, shape);\n        }\n      });\n\n      Object.entries(bindings).forEach(([id, binding]) => {\n        if (!binding) {\n          lBindings.delete(id);\n        } else {\n          lBindings.set(binding.id, binding);\n        }\n      });\n    } else {\n      rLiveShapes.current = new Map(Object.entries(shapes));\n      rLiveBindings.current = new Map(Object.entries(bindings));\n    }\n  }, []);\n\n  const applyStateToBoard = useCallback(\n    state => {\n      app === null || app === void 0\n        ? void 0\n        : app.replacePageContent(\n            state.shapes,\n            state.bindings,\n            {} // Object.fromEntries(lAssets.entries())\n          );\n    },\n    [app]\n  );\n\n  const handleChanges = useCallback(\n    state => {\n      if (!state) {\n        return;\n      }\n\n      const { shapes, bindings, eventName } = state;\n      updateLocalState({\n        shapes,\n        bindings,\n        merge: eventName === Events.STATE_CHANGE,\n      });\n      applyStateToBoard(getCurrentState());\n    },\n    [applyStateToBoard, getCurrentState, updateLocalState]\n  );\n\n  const setupInitialState = useCallback(() => {\n    if (!isReady) {\n      return;\n    }\n\n    if (amIWhiteboardOwner) {\n      // On board open, update the document with initial/stored content\n      handleChanges(room.getStoredEvent(Events.CURRENT_STATE));\n      // Send current state to other peers in the room currently\n      sendCurrentState();\n    } else if (shouldRequestState) {\n      /**\n       * Newly joined peers request the owner for current state\n       * and update their boards when they receive it\n       */\n      room.broadcastEvent(Events.REQUEST_STATE);\n    }\n  }, [\n    isReady,\n    amIWhiteboardOwner,\n    shouldRequestState,\n    handleChanges,\n    sendCurrentState,\n  ]);\n\n  // Callbacks --------------\n  // Put the state into the window, for debugging.\n  const onMount = useCallback(\n    app => {\n      app.loadRoom(roomId);\n      app.pause(); // Turn off the app's own undo / redo stack\n      // window.app = app;\n      setApp(app);\n    },\n    [roomId]\n  );\n\n  // Update the live shapes when the app's shapes change.\n  const onChangePage = useCallback(\n    (_app, shapes, bindings, _assets) => {\n      updateLocalState({ shapes, bindings });\n      room.broadcastEvent(Events.STATE_CHANGE, { shapes, bindings });\n\n      /**\n       * Tldraw thinks that the next update passed to replacePageContent after onChangePage is the own update triggered by onChangePage\n       * and the replacePageContent doesn't have any effect if it is a valid update from remote.\n       *\n       * To overcome this replacePageContent locally onChangePage(not costly - returns from first line).\n       *\n       * Refer: https://github.com/tldraw/tldraw/blob/main/packages/tldraw/src/state/TldrawApp.ts#L684\n       */\n      applyStateToBoard(getCurrentState());\n    },\n    [updateLocalState, applyStateToBoard, getCurrentState]\n  );\n\n  // Handle presence updates when the user's pointer / selection changes\n  // const onChangePresence = useCallback((app, user) => {\n  //   updateMyPresence({ id: app.room?.userId, user });\n  // }, [][updateMyPresence]);\n\n  // Subscriptions and initial setup\n  useEffect(() => {\n    if (!app) return;\n    const unsubs = [];\n\n    let stillAlive = true;\n\n    // Setup the document's storage and subscriptions\n    function setupDocument() {\n      // Subscribe to changes\n      if (stillAlive) {\n        unsubs.push(room.subscribe(Events.STATE_CHANGE, handleChanges));\n        unsubs.push(room.subscribe(Events.CURRENT_STATE, handleChanges));\n\n        // On request state(peer join), send whole current state to update the new peer's whiteboard\n        unsubs.push(room.subscribe(Events.REQUEST_STATE, sendCurrentState));\n\n        setIsReady(true);\n      }\n    }\n\n    room.init(roomId);\n    setupDocument();\n    setupInitialState();\n\n    return () => {\n      stillAlive = false;\n      unsubs.forEach(unsub => unsub());\n    };\n  }, [app, roomId, setupInitialState, sendCurrentState, handleChanges]);\n\n  useEffect(() => {\n    // Store last state on closing whitboard so that when the board is reopened the state could be fetched and reapplied\n    const handleUnmount = () => {\n      if (isReady && !shouldRequestState) {\n        console.log(\"Whiteboard unmount storing\", getCurrentState());\n        room.storeEvent(Events.CURRENT_STATE, getCurrentState());\n      }\n    };\n\n    return handleUnmount;\n  }, [isReady, shouldRequestState, getCurrentState]);\n\n  return { onMount, onChangePage };\n}\n","import React from \"react\";\nimport { Tldraw } from \"@tldraw/tldraw\";\nimport { useMultiplayerState } from \"./useMultiplayerState\";\n\nexport const Whiteboard = React.memo(({ roomId }) => {\n  const events = useMultiplayerState(roomId);\n\n  return (\n    <Tldraw\n      autofocus\n      disableAssets={true}\n      showSponsorLink={false}\n      showPages={false}\n      showMenu={false}\n      {...events}\n    />\n  );\n});\n","import { PencilDrawIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport IconButton from \"../../IconButton\";\nimport { useWhiteboardMetadata } from \"./useWhiteboardMetadata\";\n\nexport const ToggleWhiteboard = () => {\n  const {\n    whiteboardEnabled,\n    whiteboardOwner: whiteboardActive,\n    amIWhiteboardOwner,\n    toggleWhiteboard,\n  } = useWhiteboardMetadata();\n\n  if (!whiteboardEnabled) {\n    return null;\n  }\n\n  return (\n    <Tooltip\n      title={`${\n        whiteboardActive\n          ? amIWhiteboardOwner\n            ? `Stop whiteboard`\n            : `Can't stop whiteboard`\n          : \"Start whiteboard\"\n      }`}\n      key=\"whiteboard\"\n    >\n      <IconButton\n        onClick={toggleWhiteboard}\n        active={!whiteboardActive}\n        disabled={whiteboardActive && !amIWhiteboardOwner}\n        data-testid=\"white_board_btn\"\n      >\n        <PencilDrawIcon />\n      </IconButton>\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport {\n  HMSPlaylistType,\n  selectAudioPlaylist,\n  selectAudioTrackVolume,\n  selectPeerSharingVideoPlaylist,\n  selectVideoPlaylist,\n  selectVideoPlaylistAudioTrackByPeerID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  NextIcon,\n  PauseIcon,\n  PlayIcon,\n  PlaylistIcon,\n  PrevIcon,\n  SpeakerIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex, IconButton, Slider, Text } from \"@100mslive/react-ui\";\nimport { usePlaylist } from \"../hooks/usePlaylist\";\n\nconst Progress = ({ type, duration }) => {\n  const selectPlaylist =\n    type === HMSPlaylistType.audio ? selectAudioPlaylist : selectVideoPlaylist;\n  const progress = useHMSStore(selectPlaylist.progress);\n  const hmsActions = useHMSActions();\n  const playlistAction =\n    type === HMSPlaylistType.audio\n      ? hmsActions.audioPlaylist\n      : hmsActions.videoPlaylist;\n\n  if (!duration) {\n    return null;\n  }\n\n  return (\n    <Slider\n      step={1}\n      value={[progress]}\n      onValueChange={e => {\n        playlistAction.seekTo(e[0] * 0.01 * duration);\n      }}\n    />\n  );\n};\n\nexport const PlaylistActive = ({ type, onToggle }) => {\n  const isAudioPlaylist = type === HMSPlaylistType.audio;\n  const selector = isAudioPlaylist ? selectAudioPlaylist : selectVideoPlaylist;\n  const active = useHMSStore(selector.selectedItem);\n  if (!active) {\n    return null;\n  }\n  return (\n    <Box css={{ mt: \"$8\" }}>\n      <Flex justify=\"between\" css={{ w: \"100%\" }}>\n        <Box>\n          <Text variant=\"md\">{active.name}</Text>\n          {active.metadata?.description && (\n            <Text variant=\"xs\">{active.metadata?.description}</Text>\n          )}\n        </Box>\n        <IconButton\n          onClick={onToggle}\n          css={{ alignSelf: \"center\" }}\n          data-testid=\"playlist_collapse_btn\"\n        >\n          <PlaylistIcon />\n        </IconButton>\n      </Flex>\n    </Box>\n  );\n};\n\nconst Controls = ({ type, css = {} }) => {\n  const { active, hasNext, hasPrevious, actions } = usePlaylist(type);\n  if (!active) {\n    return null;\n  }\n  return (\n    <Flex justify=\"center\" css={css}>\n      <IconButton\n        disabled={!hasPrevious}\n        onClick={() => {\n          actions.playPrevious();\n        }}\n        data-testid=\"playlist_prev_btn\"\n      >\n        <PrevIcon />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          active.playing ? actions.pause() : actions.play(active.id);\n        }}\n        data-testid=\"playlist_play_pause_btn\"\n      >\n        {active.playing ? (\n          <PauseIcon width={32} height={32} />\n        ) : (\n          <PlayIcon width={32} height={32} />\n        )}\n      </IconButton>\n      <IconButton\n        disabled={!hasNext}\n        onClick={() => {\n          actions.playNext();\n        }}\n        data-testid=\"playlist_next_btn\"\n      >\n        <NextIcon />\n      </IconButton>\n    </Flex>\n  );\n};\n\nconst VolumeControl = () => {\n  const hmsActions = useHMSActions();\n  const volume = useHMSStore(selectVideoPlaylist.volume);\n  const active = useHMSStore(selectVideoPlaylist.selectedItem);\n  const peerSharingPlaylist = useHMSStore(selectPeerSharingVideoPlaylist);\n  const audioTrack = useHMSStore(\n    selectVideoPlaylistAudioTrackByPeerID(peerSharingPlaylist?.id)\n  );\n  const audioTrackVolume = useHMSStore(selectAudioTrackVolume(audioTrack?.id));\n  const sliderVolume = active ? volume : audioTrackVolume;\n\n  return (\n    <Flex align=\"center\" css={{ color: \"$white\" }}>\n      <SpeakerIcon />\n      <Slider\n        css={{ mx: \"$4\", w: \"$20\" }}\n        min={0}\n        max={100}\n        step={1}\n        value={[Math.floor(sliderVolume)]}\n        onValueChange={e => {\n          const value = e[0];\n          if (active) {\n            hmsActions.videoPlaylist.setVolume(value);\n          } else if (audioTrack) {\n            hmsActions.setVolume(value, audioTrack.id);\n          }\n        }}\n        thumbStyles={{ w: \"$6\", h: \"$6\" }}\n      />\n    </Flex>\n  );\n};\n\nexport const AudioPlaylistControls = ({ onToggle }) => {\n  const { active } = usePlaylist(HMSPlaylistType.audio);\n  if (!active) {\n    return null;\n  }\n  return (\n    <Box\n      css={{\n        p: \"$8\",\n        borderTop: \"1px solid $borderLight\",\n        bg: \"$menuBg\",\n      }}\n    >\n      <Controls type={HMSPlaylistType.audio} />\n      <Progress type={HMSPlaylistType.audio} duration={active.duration} />\n      <PlaylistActive type={HMSPlaylistType.audio} onToggle={onToggle} />\n    </Box>\n  );\n};\n\nexport const VideoPlaylistControls = ({ children }) => {\n  const { active } = usePlaylist(HMSPlaylistType.video);\n\n  return (\n    <Box\n      css={{\n        p: \"$8\",\n        mt: \"-$24\",\n        w: \"100%\",\n        zIndex: 1,\n        \"@lg\": {\n          mt: 0,\n          p: \"$6\",\n        },\n      }}\n    >\n      {active && (\n        <Progress type={HMSPlaylistType.video} duration={active.duration} />\n      )}\n      <Flex align=\"center\" justify=\"between\">\n        <VolumeControl />\n        {active && <Controls css={{ flex: \"1 1 0\" }} />}\n        {children}\n      </Flex>\n    </Box>\n  );\n};\n","import React, { useRef, useState } from \"react\";\nimport { useFullscreen } from \"react-use\";\nimport screenfull from \"screenfull\";\nimport {\n  selectPeerByID,\n  selectScreenShareAudioByPeerID,\n  selectScreenShareByPeerID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ExpandIcon, ShrinkIcon } from \"@100mslive/react-icons\";\nimport { StyledVideoTile, Video, VideoTileStats } from \"@100mslive/react-ui\";\nimport { getVideoTileLabel } from \"./peerTileUtils\";\nimport TileMenu from \"./TileMenu\";\nimport { useIsHeadless, useUISettings } from \"./AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nconst labelStyles = {\n  position: \"unset\",\n  width: \"100%\",\n  textAlign: \"center\",\n  transform: \"none\",\n  mt: \"$2\",\n  flexShrink: 0,\n};\n\nconst Tile = ({ peerId, width = \"100%\", height = \"100%\" }) => {\n  const track = useHMSStore(selectScreenShareByPeerID(peerId));\n  const peer = useHMSStore(selectPeerByID(peerId));\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const isHeadless = useIsHeadless();\n  const [isMouseHovered, setIsMouseHovered] = useState(false);\n  const showStatsOnTiles = useUISettings(UI_SETTINGS.showStatsOnTiles);\n  const label = getVideoTileLabel({\n    peerName: peer.name,\n    isLocal: false,\n    track,\n  });\n  const fullscreenRef = useRef(null);\n  // fullscreen is for desired state\n  const [fullscreen, setFullscreen] = useState(false);\n  // isFullscreen is for true state\n  const isFullscreen = useFullscreen(fullscreenRef, fullscreen, {\n    onClose: () => setFullscreen(false),\n  });\n  const isFullScreenSupported = screenfull.isEnabled;\n  const audioTrack = useHMSStore(selectScreenShareAudioByPeerID(peer?.id));\n  return (\n    <StyledVideoTile.Root\n      css={{ width, height }}\n      data-testid=\"screenshare_tile\"\n    >\n      {peer ? (\n        <StyledVideoTile.Container\n          transparentBg\n          ref={fullscreenRef}\n          css={{ flexDirection: \"column\" }}\n          onMouseEnter={() => setIsMouseHovered(true)}\n          onMouseLeave={() => {\n            setIsMouseHovered(false);\n          }}\n        >\n          {showStatsOnTiles ? (\n            <VideoTileStats\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n            />\n          ) : null}\n          {isFullScreenSupported && !isHeadless ? (\n            <StyledVideoTile.FullScreenButton\n              onClick={() => setFullscreen(!fullscreen)}\n            >\n              {isFullscreen ? <ShrinkIcon /> : <ExpandIcon />}\n            </StyledVideoTile.FullScreenButton>\n          ) : null}\n          {track ? (\n            <Video\n              screenShare={true}\n              mirror={peer.isLocal && track?.source === \"regular\"}\n              attach={!isAudioOnly}\n              trackId={track.id}\n              threshold={0.05}\n            />\n          ) : null}\n          <StyledVideoTile.Info css={labelStyles}>{label}</StyledVideoTile.Info>\n          {isMouseHovered && !isHeadless && !peer?.isLocal ? (\n            <TileMenu\n              isScreenshare\n              peerID={peer?.id}\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n            />\n          ) : null}\n        </StyledVideoTile.Container>\n      ) : null}\n    </StyledVideoTile.Root>\n  );\n};\n\nconst ScreenshareTile = React.memo(Tile);\n\nexport default ScreenshareTile;\n","import React from \"react\";\nimport {\n  selectPermissions,\n  useCustomEvent,\n  useHMSActions,\n  useHMSStore,\n  useRemoteAVToggle,\n} from \"@100mslive/react-sdk\";\nimport {\n  HorizontalMenuIcon,\n  MicOffIcon,\n  MicOnIcon,\n  RemoveUserIcon,\n  ShareScreenIcon,\n  SpeakerIcon,\n  VideoOffIcon,\n  VideoOnIcon,\n} from \"@100mslive/react-icons\";\nimport { Flex, Slider, StyledMenuTile } from \"@100mslive/react-ui\";\nimport { REMOTE_STOP_SCREENSHARE_TYPE } from \"../common/constants\";\n\n/**\n * Taking peerID as peer won't necesarilly have tracks\n */\nconst TileMenu = ({\n  audioTrackID,\n  videoTrackID,\n  peerID,\n  isScreenshare = false,\n}) => {\n  const actions = useHMSActions();\n  const { removeOthers } = useHMSStore(selectPermissions);\n  const {\n    isAudioEnabled,\n    isVideoEnabled,\n    setVolume,\n    toggleAudio,\n    toggleVideo,\n    volume,\n  } = useRemoteAVToggle(audioTrackID, videoTrackID);\n  const { sendEvent } = useCustomEvent({\n    type: REMOTE_STOP_SCREENSHARE_TYPE,\n  });\n  if (!(removeOthers || toggleAudio || toggleVideo || setVolume)) {\n    return null;\n  }\n  return (\n    <StyledMenuTile.Root>\n      <StyledMenuTile.Trigger data-testid=\"participant_menu_btn\">\n        <HorizontalMenuIcon />\n      </StyledMenuTile.Trigger>\n      <StyledMenuTile.Content side=\"top\" align=\"end\" sideOffset={8}>\n        {toggleVideo ? (\n          <StyledMenuTile.ItemButton\n            onClick={toggleVideo}\n            data-testid={\n              isVideoEnabled\n                ? \"mute_video_participant_btn\"\n                : \"unmute_video_participant_btn\"\n            }\n          >\n            {isVideoEnabled ? <VideoOnIcon /> : <VideoOffIcon />}\n            <span>{`${isVideoEnabled ? \"Mute\" : \"Request Unmute\"}`}</span>\n          </StyledMenuTile.ItemButton>\n        ) : null}\n        {toggleAudio ? (\n          <StyledMenuTile.ItemButton\n            onClick={toggleAudio}\n            data-testid={\n              isVideoEnabled\n                ? \"mute_audio_participant_btn\"\n                : \"unmute_audio_participant_btn\"\n            }\n          >\n            {isAudioEnabled ? <MicOnIcon /> : <MicOffIcon />}\n            <span>{`${isAudioEnabled ? \"Mute\" : \"Request Unmute\"}`}</span>\n          </StyledMenuTile.ItemButton>\n        ) : null}\n        {audioTrackID ? (\n          <StyledMenuTile.VolumeItem data-testid=\"participant_volume_slider\">\n            <Flex align=\"center\" gap={1}>\n              <SpeakerIcon /> <span>Volume ({volume})</span>\n            </Flex>\n            <Slider\n              css={{ my: \"0.5rem\" }}\n              step={5}\n              value={[volume]}\n              onValueChange={e => setVolume(e[0])}\n            />\n          </StyledMenuTile.VolumeItem>\n        ) : null}\n\n        {removeOthers ? (\n          <StyledMenuTile.RemoveItem\n            onClick={async () => {\n              try {\n                await actions.removePeer(peerID, \"\");\n              } catch (error) {\n                // TODO: Toast here\n              }\n            }}\n            data-testid=\"remove_participant_btn\"\n          >\n            <RemoveUserIcon />\n            <span>Remove Participant</span>\n          </StyledMenuTile.RemoveItem>\n        ) : null}\n\n        {removeOthers && isScreenshare ? (\n          <StyledMenuTile.RemoveItem onClick={() => sendEvent({})}>\n            <ShareScreenIcon />\n            <span>Stop Screenshare</span>\n          </StyledMenuTile.RemoveItem>\n        ) : null}\n      </StyledMenuTile.Content>\n    </StyledMenuTile.Root>\n  );\n};\n\nexport default TileMenu;\n","import React from \"react\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@100mslive/react-icons\";\nimport { StyledPagination } from \"@100mslive/react-ui\";\n\nexport const Pagination = ({ page, setPage, numPages }) => {\n  const disableLeft = page === 0;\n  const disableRight = page === numPages - 1;\n  const nextPage = () => {\n    setPage(Math.min(page + 1, numPages - 1));\n  };\n  const prevPage = () => {\n    setPage(Math.max(page - 1, 0));\n  };\n  return (\n    <StyledPagination.Root>\n      <StyledPagination.Chevron disabled={disableLeft} onClick={prevPage}>\n        <ChevronLeftIcon\n          width={16}\n          height={16}\n          style={{ cursor: disableLeft ? \"not-allowed\" : \"pointer\" }}\n        />\n      </StyledPagination.Chevron>\n      <StyledPagination.Dots>\n        {[...Array(numPages)].map((_, i) => (\n          <StyledPagination.Dot\n            key={i}\n            active={page === i}\n            onClick={() => setPage(i)}\n          />\n        ))}\n      </StyledPagination.Dots>\n      <StyledPagination.Chevron disabled={disableRight} onClick={nextPage}>\n        <ChevronRightIcon\n          width={16}\n          height={16}\n          style={{ cursor: disableRight ? \"not-allowed\" : \"pointer\" }}\n        />\n      </StyledPagination.Chevron>\n    </StyledPagination.Root>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Freeze } from \"react-freeze\";\nimport { useVideoList } from \"@100mslive/react-sdk\";\nimport { getLeft, StyledVideoList, useTheme } from \"@100mslive/react-ui\";\nimport { Pagination } from \"./Pagination\";\nimport ScreenshareTile from \"./ScreenshareTile\";\nimport VideoTile from \"./VideoTile\";\nimport { useAppConfig } from \"./AppData/useAppConfig\";\nimport { useIsHeadless } from \"./AppData/useUISettings\";\nimport { FeatureFlags } from \"../services/FeatureFlags\";\n\nconst List = ({\n  maxTileCount,\n  peers,\n  maxColCount,\n  maxRowCount,\n  includeScreenShareForPeer,\n}) => {\n  const { aspectRatio } = useTheme();\n  const tileOffset = useAppConfig(\"headlessConfig\", \"tileOffset\");\n  const isHeadless = useIsHeadless();\n  const { ref, pagesWithTiles } = useVideoList({\n    peers,\n    maxTileCount,\n    maxColCount,\n    maxRowCount,\n    includeScreenShareForPeer,\n    aspectRatio,\n    offsetY: getOffset({ isHeadless, tileOffset }),\n  });\n  const [page, setPage] = useState(0);\n  useEffect(() => {\n    // currentPageIndex should not exceed pages length\n    if (page >= pagesWithTiles.length) {\n      setPage(0);\n    }\n  }, [pagesWithTiles.length, page]);\n  const useFreeze = FeatureFlags.freezeVideoList();\n  return (\n    <StyledVideoList.Root ref={ref}>\n      <StyledVideoList.Container>\n        {pagesWithTiles && pagesWithTiles.length > 0\n          ? pagesWithTiles.map((tiles, pageNo) => (\n              <Freeze freeze={useFreeze && page !== pageNo} key={pageNo}>\n                <StyledVideoList.View\n                  css={{\n                    left: getLeft(pageNo, page),\n                    transition: \"left 0.3s ease-in-out\",\n                  }}\n                >\n                  {tiles.map((tile, i) =>\n                    tile.track?.source === \"screen\" ? (\n                      <ScreenshareTile\n                        key={tile.track.id}\n                        width={tile.width}\n                        height={tile.height}\n                        peerId={tile.peer.id}\n                      />\n                    ) : (\n                      <VideoTile\n                        key={tile.track?.id || tile.peer.id}\n                        width={tile.width}\n                        height={tile.height}\n                        peerId={tile.peer?.id}\n                        trackId={tile.track?.id}\n                      />\n                    )\n                  )}\n                </StyledVideoList.View>\n              </Freeze>\n            ))\n          : null}\n      </StyledVideoList.Container>\n      {!isHeadless && pagesWithTiles.length > 1 ? (\n        <Pagination\n          page={page}\n          setPage={setPage}\n          numPages={pagesWithTiles.length}\n        />\n      ) : null}\n    </StyledVideoList.Root>\n  );\n};\n\nconst VideoList = React.memo(List);\n\nconst getOffset = ({ offset, isHeadless }) => {\n  if (!isHeadless || typeof offset !== \"number\") {\n    return 32;\n  }\n  return offset;\n};\n\nexport default VideoList;\n","import React, { Fragment, useCallback, useState } from \"react\";\nimport {\n  selectAudioTrackByPeerID,\n  selectIsPeerAudioEnabled,\n  selectLocalPeerID,\n  selectPeerMetadata,\n  selectPeerNameByID,\n  selectVideoTrackByID,\n  selectVideoTrackByPeerID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  BrbIcon,\n  HandRaiseFilledIcon,\n  MicOffIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Avatar,\n  StyledVideoTile,\n  useBorderAudioLevel,\n  Video,\n  VideoTileStats,\n} from \"@100mslive/react-ui\";\nimport TileConnection from \"./Connection/TileConnection\";\nimport { getVideoTileLabel } from \"./peerTileUtils\";\nimport TileMenu from \"./TileMenu\";\nimport { useAppConfig } from \"./AppData/useAppConfig\";\nimport { useIsHeadless, useUISettings } from \"./AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nconst Tile = ({ peerId, trackId, width, height }) => {\n  const trackSelector = trackId\n    ? selectVideoTrackByID(trackId)\n    : selectVideoTrackByPeerID(peerId);\n  const track = useHMSStore(trackSelector);\n  const peerName = useHMSStore(selectPeerNameByID(peerId));\n  const audioTrack = useHMSStore(selectAudioTrackByPeerID(peerId));\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const mirrorLocalVideo = useUISettings(UI_SETTINGS.mirrorLocalVideo);\n  const showStatsOnTiles = useUISettings(UI_SETTINGS.showStatsOnTiles);\n  const isHeadless = useIsHeadless();\n  const isAudioMuted = !useHMSStore(selectIsPeerAudioEnabled(peerId));\n  const isVideoMuted = !track?.enabled;\n  const [isMouseHovered, setIsMouseHovered] = useState(false);\n  const borderAudioRef = useBorderAudioLevel(audioTrack?.id);\n  const isVideoDegraded = track?.degraded;\n  const isLocal = localPeerID === peerId;\n  const label = getVideoTileLabel({\n    peerName,\n    track,\n    isLocal,\n  });\n  const onHoverHandler = useCallback(event => {\n    setIsMouseHovered(event.type === \"mouseenter\");\n  }, []);\n  const headlessConfig = useAppConfig(\"headlessConfig\");\n  const hideLabel = isHeadless && headlessConfig?.hideTileName;\n  return (\n    <StyledVideoTile.Root\n      css={{\n        width,\n        height,\n        padding: getPadding({ isHeadless, offset: headlessConfig?.tileOffset }),\n      }}\n      data-testid={`participant_tile_${peerName}`}\n    >\n      {peerName !== undefined ? (\n        <StyledVideoTile.Container\n          onMouseEnter={onHoverHandler}\n          onMouseLeave={onHoverHandler}\n          ref={\n            isHeadless && headlessConfig?.hideAudioLevel\n              ? undefined\n              : borderAudioRef\n          }\n        >\n          <TileConnection\n            hideLabel={hideLabel}\n            name={label}\n            isTile\n            peerId={peerId}\n            width={width}\n          />\n          {showStatsOnTiles ? (\n            <VideoTileStats\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n              peerID={peerId}\n            />\n          ) : null}\n\n          {track ? (\n            <Video\n              trackId={track?.id}\n              attach={isLocal ? undefined : !isAudioOnly}\n              mirror={\n                mirrorLocalVideo &&\n                peerId === localPeerID &&\n                track?.source === \"regular\" &&\n                track?.facingMode !== \"environment\"\n              }\n              degraded={isVideoDegraded}\n              data-testid=\"participant_video_tile\"\n            />\n          ) : null}\n          <StyledVideoTile.AvatarContainer>\n            {isVideoMuted || isVideoDegraded || (!isLocal && isAudioOnly) ? (\n              <Avatar\n                name={peerName || \"\"}\n                data-testid=\"participant_avatar_icon\"\n              />\n            ) : null}\n          </StyledVideoTile.AvatarContainer>\n\n          {showAudioMuted({\n            hideTileAudioMute: headlessConfig?.hideTileAudioMute,\n            isHeadless,\n            isAudioMuted,\n          }) ? (\n            <StyledVideoTile.AudioIndicator data-testid=\"participant_audio_mute_icon\">\n              <MicOffIcon />\n            </StyledVideoTile.AudioIndicator>\n          ) : null}\n          {isMouseHovered && !isHeadless && !isLocal ? (\n            <TileMenu\n              peerID={peerId}\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n            />\n          ) : null}\n          <PeerMetadata peerId={peerId} />\n        </StyledVideoTile.Container>\n      ) : null}\n    </StyledVideoTile.Root>\n  );\n};\n\nconst metaStyles = { top: \"$4\", left: \"$4\" };\n\nconst PeerMetadata = ({ peerId }) => {\n  const metaData = useHMSStore(selectPeerMetadata(peerId));\n  const isHandRaised = metaData?.isHandRaised || false;\n  const isBRB = metaData?.isBRBOn || false;\n\n  return (\n    <Fragment>\n      {isHandRaised ? (\n        <StyledVideoTile.AttributeBox\n          css={metaStyles}\n          data-testid=\"raiseHand_icon_onTile\"\n        >\n          <HandRaiseFilledIcon width={40} height={40} />\n        </StyledVideoTile.AttributeBox>\n      ) : null}\n      {isBRB ? (\n        <StyledVideoTile.AttributeBox\n          css={metaStyles}\n          data-testid=\"brb_icon_onTile\"\n        >\n          <BrbIcon width={40} height={40} />\n        </StyledVideoTile.AttributeBox>\n      ) : null}\n    </Fragment>\n  );\n};\n\nconst VideoTile = React.memo(Tile);\n\nconst showAudioMuted = ({ hideTileAudioMute, isHeadless, isAudioMuted }) => {\n  if (!isHeadless) {\n    return isAudioMuted;\n  }\n  return isAudioMuted && !hideTileAudioMute;\n};\n\nconst getPadding = ({ isHeadless, offset }) => {\n  if (!isHeadless || typeof offset !== \"number\") {\n    return undefined;\n  }\n  return offset === 0 ? 0 : undefined;\n};\n\nexport default VideoTile;\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  selectPeers,\n  throwErrorHandler,\n  useHMSStore,\n  useScreenShare,\n} from \"@100mslive/react-sdk\";\nimport { Box, Flex } from \"@100mslive/react-ui\";\nimport { GridSidePaneView } from \"../components/gridView\";\nimport { useSetAppDataByKey } from \"../components/AppData/useUISettings\";\nimport { APP_DATA } from \"../common/constants\";\n\nexport const EmbedView = ({ showStats }) => {\n  const peers = useHMSStore(selectPeers);\n\n  return (\n    <Flex css={{ size: \"100%\", \"@lg\": { flexDirection: \"column\" } }}>\n      <EmbedComponent />\n      <GridSidePaneView peers={peers} showStatsOnTiles={showStats} />\n    </Flex>\n  );\n};\n\nconst EmbedComponent = () => {\n  const { amIScreenSharing, toggleScreenShare } =\n    useScreenShare(throwErrorHandler);\n  const [embedConfig, setEmbedConfig] = useSetAppDataByKey(\n    APP_DATA.embedConfig\n  );\n  const [wasScreenShared, setWasScreenShared] = useState(false);\n  // to handle - https://github.com/facebook/react/issues/24502\n  const screenShareAttemptInProgress = useRef(false);\n  const src = embedConfig.url;\n  const iframeRef = useRef();\n\n  const resetEmbedConfig = useCallback(() => {\n    if (src) {\n      setEmbedConfig({ url: \"\" });\n    }\n  }, [src, setEmbedConfig]);\n\n  useEffect(() => {\n    if (\n      embedConfig.shareScreen &&\n      !amIScreenSharing &&\n      !wasScreenShared &&\n      !screenShareAttemptInProgress.current\n    ) {\n      screenShareAttemptInProgress.current = true;\n      // start screenshare on load for others in the room to see\n      toggleScreenShare({\n        forceCurrentTab: true,\n        cropElement: iframeRef.current,\n      })\n        .then(() => {\n          setWasScreenShared(true);\n        })\n        .catch(resetEmbedConfig)\n        .finally(() => {\n          screenShareAttemptInProgress.current = false;\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    // reset embed when screenshare is closed from anywhere\n    if (wasScreenShared && !amIScreenSharing) {\n      resetEmbedConfig();\n    }\n    return () => {\n      // close screenshare when this component is being unmounted\n      if (wasScreenShared && amIScreenSharing) {\n        toggleScreenShare(); // stop\n      }\n    };\n  }, [wasScreenShared, amIScreenSharing, resetEmbedConfig, toggleScreenShare]);\n\n  return (\n    <Box\n      ref={iframeRef}\n      css={{\n        mx: \"$8\",\n        flex: \"3 1 0\",\n        \"@lg\": {\n          flex: \"2 1 0\",\n          display: \"flex\",\n          alignItems: \"center\",\n        },\n      }}\n    >\n      <iframe\n        src={src}\n        title={src}\n        style={{ width: \"100%\", height: \"100%\", border: 0 }}\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture fullscreen\"\n        referrerPolicy=\"no-referrer\"\n      />\n    </Box>\n  );\n};\n\nexport default EmbedView;\n","import { selectAppDataByPath, useHMSStore } from \"@100mslive/react-sdk\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useAppLayout = path => {\n  return useHMSStore(selectAppDataByPath(APP_DATA.appLayout, path));\n};\n","import React from \"react\";\nimport {\n  selectLocalPeerID,\n  selectPeers,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Flex } from \"@100mslive/react-ui\";\nimport { GridCenterView, GridSidePaneView } from \"../components/gridView\";\nimport { useAppLayout } from \"../components/AppData/useAppLayout\";\nimport { useUISettings } from \"../components/AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const MainGridView = () => {\n  const centerRoles = useAppLayout(\"center\") || [];\n  const sidepaneRoles = useAppLayout(\"sidepane\") || [];\n  const maxTileCount = useUISettings(UI_SETTINGS.maxTileCount);\n  const peers = useHMSStore(selectPeers);\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const centerPeers = peers.filter(peer => centerRoles.includes(peer.roleName));\n  const sidebarPeers = peers.filter(peer =>\n    sidepaneRoles.includes(peer.roleName)\n  );\n\n  /**\n   * If there are peers from many publishing roles, then it's possible to divide\n   * them into two parts, those who show in center and those who show in sidepane.\n   * In case there is only one person in the room, then too sidepane will be shown\n   * and center would be taken up by a banner image.\n   * There is an issue currently, where the banner is still shown if there are\n   * multiple viewers in the room but no publisher. Depending on the use case\n   * this can be useful(for webinar) or look odd(for showing you're the only one).\n   * Note that both center peers and sidebar peers have only publishing peers in them.\n   */\n  let showSidePane = centerPeers.length > 0 && sidebarPeers.length > 0;\n  if (centerPeers.length === 0) {\n    // we'll show the sidepane for banner in this case too if 1). it's only me\n    // in the room. or 2). noone is publishing in the room\n    const itsOnlyMeInTheRoom =\n      peers.length === 1 && peers[0].id === localPeerId;\n    const nooneIsPublishing = sidebarPeers.length === 0;\n    showSidePane = itsOnlyMeInTheRoom || nooneIsPublishing;\n  }\n\n  return (\n    <Flex\n      css={{\n        size: \"100%\",\n      }}\n      direction={{\n        \"@initial\": \"row\",\n        \"@md\": \"column\",\n      }}\n    >\n      <GridCenterView\n        peers={showSidePane ? centerPeers : peers}\n        maxTileCount={maxTileCount}\n        allowRemoteMute={false}\n        hideSidePane={!showSidePane}\n        totalPeers={peers.length}\n      />\n      {showSidePane && (\n        <GridSidePaneView peers={sidebarPeers} totalPeers={peers.length} />\n      )}\n    </Flex>\n  );\n};\n","import React, { Suspense, useEffect } from \"react\";\nimport {\n  selectIsConnectedToRoom,\n  selectLocalPeerRoleName,\n  selectPeerScreenSharing,\n  selectPeerSharingAudio,\n  selectPeerSharingVideoPlaylist,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Flex } from \"@100mslive/react-ui\";\nimport FullPageProgress from \"../components/FullPageProgress\";\nimport EmbedView from \"./EmbedView\";\nimport { MainGridView } from \"./mainGridView\";\nimport ScreenShareView from \"./screenShareView\";\nimport SidePane from \"./SidePane\";\nimport { useWhiteboardMetadata } from \"../plugins/whiteboard\";\nimport { useAppConfig } from \"../components/AppData/useAppConfig\";\nimport {\n  useHLSViewerRole,\n  useIsHeadless,\n  useUISettings,\n  useUrlToEmbed,\n} from \"../components/AppData/useUISettings\";\nimport { useRefreshSessionMetadata } from \"../components/hooks/useRefreshSessionMetadata\";\nimport { useBeamAutoLeave } from \"../common/hooks\";\nimport { UI_MODE_ACTIVE_SPEAKER } from \"../common/constants\";\n\nconst WhiteboardView = React.lazy(() => import(\"./WhiteboardView\"));\nconst HLSView = React.lazy(() => import(\"./HLSView\"));\nconst ActiveSpeakerView = React.lazy(() => import(\"./ActiveSpeakerView\"));\n\nexport const ConferenceMainView = () => {\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const peerSharing = useHMSStore(selectPeerScreenSharing);\n  const peerSharingAudio = useHMSStore(selectPeerSharingAudio);\n  const peerSharingPlaylist = useHMSStore(selectPeerSharingVideoPlaylist);\n  const { whiteboardOwner: whiteboardShared } = useWhiteboardMetadata();\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  useBeamAutoLeave();\n  useRefreshSessionMetadata();\n  const hmsActions = useHMSActions();\n  const isHeadless = useIsHeadless();\n  const headlessUIMode = useAppConfig(\"headlessConfig\", \"uiMode\");\n  const { uiViewMode, isAudioOnly } = useUISettings();\n  const hlsViewerRole = useHLSViewerRole();\n  const urlToIframe = useUrlToEmbed();\n  useEffect(() => {\n    if (!isConnected) {\n      return;\n    }\n    const audioPlaylist = JSON.parse(\n      process.env.REACT_APP_AUDIO_PLAYLIST || \"[]\"\n    );\n    const videoPlaylist = JSON.parse(\n      process.env.REACT_APP_VIDEO_PLAYLIST || \"[]\"\n    );\n    if (videoPlaylist.length > 0) {\n      hmsActions.videoPlaylist.setList(videoPlaylist);\n    }\n    if (audioPlaylist.length > 0) {\n      hmsActions.audioPlaylist.setList(audioPlaylist);\n    }\n  }, [isConnected, hmsActions]);\n\n  if (!localPeerRole) {\n    // we don't know the role yet to decide how to render UI\n    return null;\n  }\n\n  let ViewComponent;\n  if (localPeerRole === hlsViewerRole) {\n    ViewComponent = HLSView;\n  } else if (urlToIframe) {\n    ViewComponent = EmbedView;\n  } else if (whiteboardShared) {\n    ViewComponent = WhiteboardView;\n  } else if (\n    ((peerSharing && peerSharing.id !== peerSharingAudio?.id) ||\n      peerSharingPlaylist) &&\n    !isAudioOnly\n  ) {\n    ViewComponent = ScreenShareView;\n  } else if (\n    uiViewMode === UI_MODE_ACTIVE_SPEAKER ||\n    (isHeadless && headlessUIMode === UI_MODE_ACTIVE_SPEAKER)\n  ) {\n    ViewComponent = ActiveSpeakerView;\n  } else {\n    ViewComponent = MainGridView;\n  }\n\n  return (\n    <Suspense fallback={<FullPageProgress />}>\n      <Flex css={{ size: \"100%\", position: \"relative\" }}>\n        <ViewComponent />\n        <SidePane />\n      </Flex>\n    </Suspense>\n  );\n};\n","import React from \"react\";\nimport { Dropdown, Flex, Text } from \"@100mslive/react-ui\";\n\nfunction formatDuration(duration) {\n  if (!duration) {\n    return \"\";\n  }\n  let mins = Math.floor(duration / 60);\n  if (mins < 10) {\n    mins = `0${String(mins)}`;\n  }\n  let secs = Math.floor(duration % 60);\n  if (secs < 10) {\n    secs = `0${String(secs)}`;\n  }\n\n  return `${mins}:${secs}`;\n}\n\nexport const PlaylistItem = React.memo(\n  ({ name, metadata, duration, selected, onClick }) => {\n    return (\n      <Dropdown.Item\n        css={{\n          flexDirection: \"column\",\n          alignItems: \"flex-start\",\n          h: \"$18\",\n          p: \"$8\",\n          \"&:hover\": {\n            cursor: \"pointer\",\n            bg: \"$menuBg\",\n          },\n          \"&:focus-visible\": {\n            bg: \"$menuBg\",\n          },\n        }}\n        onClick={onClick}\n      >\n        <Flex\n          align=\"center\"\n          justify=\"between\"\n          css={{ width: \"100%\", minHeight: 0 }}\n        >\n          <Text\n            variant=\"md\"\n            css={{ color: selected ? \"$brandDefault\" : \"$textPrimary\" }}\n          >\n            {name}\n          </Text>\n          <Text variant=\"xs\">{formatDuration(duration)}</Text>\n        </Flex>\n        {metadata?.description && (\n          <Text variant=\"xs\" css={{ mt: \"$4\" }}>\n            {metadata?.description}\n          </Text>\n        )}\n      </Dropdown.Item>\n    );\n  }\n);\n","import React, { Fragment, useState } from \"react\";\nimport {\n  HMSPlaylistType,\n  selectIsAllowedToPublish,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  AudioPlayerIcon,\n  CrossIcon,\n  VideoPlayerIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Dropdown, Flex, Text, Tooltip } from \"@100mslive/react-ui\";\nimport IconButton from \"../../IconButton\";\nimport { AudioPlaylistControls } from \"./PlaylistControls\";\nimport { PlaylistItem } from \"./PlaylistItem\";\nimport { usePlaylist } from \"../hooks/usePlaylist\";\n\nconst BrowseAndPlayFromLocal = ({ type, actions }) => {\n  return (\n    <Fragment>\n      <Text\n        as=\"label\"\n        htmlFor={`${type}PlaylistBrowse`}\n        variant=\"sm\"\n        css={{ cursor: \"pointer\", mr: \"$2\" }}\n      >\n        Browse\n      </Text>\n      <input\n        type=\"file\"\n        id={`${type}PlaylistBrowse`}\n        accept={type === HMSPlaylistType.audio ? \"audio/*\" : \"video/*\"}\n        onChange={e => {\n          const file = e.target.files[0];\n          const id = file.lastModified;\n          actions.setList([\n            {\n              type,\n              id,\n              name: file.name,\n              url: URL.createObjectURL(file),\n            },\n          ]);\n          actions.play(id);\n        }}\n        style={{ display: \"none\" }}\n      />\n    </Fragment>\n  );\n};\n\nexport const Playlist = ({ type }) => {\n  const isAudioPlaylist = type === HMSPlaylistType.audio;\n  const { active, list: playlist, actions } = usePlaylist(type);\n  const [open, setOpen] = useState(false);\n  const [collapse, setCollapse] = useState(false);\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  if (!isAllowedToPublish.screen || playlist.length === 0) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <Dropdown.Root open={open} onOpenChange={setOpen}>\n        <Dropdown.Trigger\n          asChild\n          data-testid={\n            type === HMSPlaylistType.audio ? \"audio_playlist\" : \"video_playlist\"\n          }\n        >\n          <IconButton active={!active}>\n            <Tooltip\n              title={isAudioPlaylist ? \"Audio Playlist\" : \"Video Playlist\"}\n            >\n              <Box>\n                {isAudioPlaylist ? <AudioPlayerIcon /> : <VideoPlayerIcon />}\n              </Box>\n            </Tooltip>\n          </IconButton>\n        </Dropdown.Trigger>\n        <Dropdown.Content\n          sideOffset={5}\n          align=\"center\"\n          css={{\n            maxHeight: \"unset\",\n            width: \"$60\",\n            p: \"$0\",\n            bg: \"$bgSecondary\",\n            border: \"1px solid $menuBg\",\n          }}\n        >\n          <Flex\n            align=\"center\"\n            css={{\n              p: \"$4 $8\",\n              borderBottom: \"1px solid $borderLight\",\n              bg: \"$menuBg\",\n            }}\n          >\n            <Text variant=\"md\" css={{ flex: \"1 1 0\" }}>\n              {isAudioPlaylist ? \"Audio Player\" : \"Video Playlist\"}\n            </Text>\n            <BrowseAndPlayFromLocal type={type} actions={actions} />\n            <IconButton\n              css={{ mr: \"-$4\" }}\n              onClick={async () => {\n                if (active) {\n                  await actions.stop();\n                }\n                setOpen(false);\n                setCollapse(false);\n              }}\n            >\n              <CrossIcon width={24} height={24} />\n            </IconButton>\n          </Flex>\n          {!collapse && (\n            <Box css={{ maxHeight: \"$96\", overflowY: \"auto\" }}>\n              {playlist.map(playlistItem => {\n                return (\n                  <PlaylistItem\n                    key={playlistItem.id}\n                    {...playlistItem}\n                    onClick={async e => {\n                      e.preventDefault();\n                      await actions.play(playlistItem.id);\n                      // Close the dropdown list for videoplaylist\n                      if (!isAudioPlaylist) {\n                        setOpen(false);\n                      }\n                    }}\n                  />\n                );\n              })}\n            </Box>\n          )}\n          {isAudioPlaylist && (\n            <AudioPlaylistControls\n              onToggle={() => setCollapse(value => !value)}\n            />\n          )}\n        </Dropdown.Content>\n      </Dropdown.Root>\n    </Fragment>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  selectAppData,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { AlertTriangleIcon } from \"@100mslive/react-icons\";\nimport { Button, Dialog, Flex, Text } from \"@100mslive/react-ui\";\nimport { ResolutionInput } from \"../Streaming/ResolutionInput\";\nimport { getResolution } from \"../Streaming/RTMPStreaming\";\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\nimport { getDefaultMeetingUrl } from \"../../common/utils\";\nimport {\n  APP_DATA,\n  RTMP_RECORD_DEFAULT_RESOLUTION,\n} from \"../../common/constants\";\n\nconst StartRecording = ({ open, onOpenChange }) => {\n  const permissions = useHMSStore(selectPermissions);\n  const recordingUrl = useHMSStore(selectAppData(APP_DATA.recordingUrl));\n  const [resolution, setResolution] = useState(RTMP_RECORD_DEFAULT_RESOLUTION);\n\n  const [recordingStarted, setRecordingState] = useSetAppDataByKey(\n    APP_DATA.recordingStarted\n  );\n  const { isBrowserRecordingOn, isStreamingOn, isHLSRunning } =\n    useRecordingStreaming();\n  const hmsActions = useHMSActions();\n  if (!permissions?.browserRecording || isHLSRunning) {\n    return null;\n  }\n  if (isBrowserRecordingOn) {\n    return (\n      <Dialog.Root open={open} onOpenChange={onOpenChange}>\n        <Dialog.Portal>\n          <Dialog.Content\n            css={{\n              width: \"min(400px,80%)\",\n              p: \"$10\",\n              bg: \"#201617\",\n            }}\n          >\n            <Dialog.Title>\n              <Flex gap={2} css={{ c: \"$error\" }}>\n                <AlertTriangleIcon />\n                <Text css={{ c: \"inherit\" }} variant=\"h6\">\n                  End Recording\n                </Text>\n              </Flex>\n            </Dialog.Title>\n            <Text variant=\"sm\" css={{ c: \"$textMedEmp\", my: \"$8\" }}>\n              Are you sure you want to end recording? You can’t undo this\n              action.\n            </Text>\n            <Flex justify=\"end\" css={{ mt: \"$12\" }}>\n              <Dialog.Close asChild>\n                <Button\n                  outlined\n                  css={{ borderColor: \"$secondaryLight\", mr: \"$4\" }}\n                >\n                  Don't end\n                </Button>\n              </Dialog.Close>\n              <Button\n                data-testid=\"stop_recording_confirm_mobile\"\n                variant=\"danger\"\n                icon\n                onClick={async () => {\n                  try {\n                    await hmsActions.stopRTMPAndRecording();\n                  } catch (error) {\n                    ToastManager.addToast({\n                      title: error.message,\n                      variant: \"error\",\n                    });\n                  }\n                  onOpenChange(false);\n                }}\n              >\n                End recording\n              </Button>\n            </Flex>\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n    );\n  }\n  return (\n    <Dialog.Root open={open} onOpenChange={onOpenChange}>\n      <Dialog.Content css={{ width: \"min(400px,80%)\", p: \"$10\" }}>\n        <Dialog.Title>\n          <Text variant=\"h6\">Start Recording</Text>\n        </Dialog.Title>\n        <ResolutionInput\n          testId=\"recording_resolution_mobile\"\n          css={{ flexDirection: \"column\", alignItems: \"start\" }}\n          onResolutionChange={setResolution}\n        />\n        <Button\n          data-testid=\"start_recording_confirm_mobile\"\n          variant=\"primary\"\n          icon\n          css={{ ml: \"auto\" }}\n          type=\"submit\"\n          disabled={recordingStarted || isStreamingOn}\n          onClick={async () => {\n            try {\n              setRecordingState(true);\n              await hmsActions.startRTMPOrRecording({\n                meetingURL: recordingUrl || getDefaultMeetingUrl(),\n                resolution: getResolution(resolution),\n                record: true,\n              });\n            } catch (error) {\n              if (error.message.includes(\"stream already running\")) {\n                ToastManager.addToast({\n                  title: \"Recording already running\",\n                  variant: \"error\",\n                });\n              } else {\n                ToastManager.addToast({\n                  title: error.message,\n                  variant: \"error\",\n                });\n              }\n              setRecordingState(false);\n            }\n            onOpenChange(false);\n          }}\n        >\n          Start\n        </Button>\n      </Dialog.Content>\n    </Dialog.Root>\n  );\n};\n\nexport default StartRecording;\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  selectHMSStats,\n  selectPeersMap,\n  selectTracksMap,\n  useHMSStatsStore,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  Box,\n  Dialog,\n  Dropdown,\n  Flex,\n  HorizontalDivider,\n  Label,\n  Switch,\n  Text,\n} from \"@100mslive/react-ui\";\nimport { DialogDropdownTrigger } from \"../primitives/DropdownTrigger\";\nimport { useSetUiSettings } from \"./AppData/useUISettings\";\nimport { useDropdownSelection } from \"./hooks/useDropdownSelection\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const StatsForNerds = ({ onOpenChange }) => {\n  const tracksWithLabels = useTracksWithLabel();\n  const statsOptions = useMemo(\n    () => [\n      { id: \"local-peer\", label: \"Local Peer Stats\" },\n      ...tracksWithLabels,\n    ],\n    [tracksWithLabels]\n  );\n  const [selectedStat, setSelectedStat] = useState(\"local-peer\");\n  const [showStatsOnTiles, setShowStatsOnTiles] = useSetUiSettings(\n    UI_SETTINGS.showStatsOnTiles\n  );\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  const selectionBg = useDropdownSelection();\n\n  useEffect(() => {\n    if (\n      selectedStat !== \"local-peer\" &&\n      !tracksWithLabels.find(track => track.id === selectedStat)\n    ) {\n      setSelectedStat(\"local-peer\");\n    }\n  }, [tracksWithLabels, selectedStat]);\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{\n            width: \"min(500px, 95%)\",\n          }}\n        >\n          {/* Title */}\n          <Dialog.Title css={{ p: \"$4 0\" }}>\n            <Flex justify=\"between\">\n              <Flex align=\"center\" css={{ mb: \"$1\" }}>\n                <Text variant=\"h6\" inline>\n                  Stats For Nerds\n                </Text>\n              </Flex>\n              <Dialog.DefaultClose data-testid=\"stats_dialog_close_icon\" />\n            </Flex>\n          </Dialog.Title>\n          <HorizontalDivider css={{ mt: \"0.8rem\" }} />\n          {/* Switch */}\n          <Flex justify=\"start\" gap={4} css={{ m: \"$10 0\" }}>\n            <Switch\n              checked={showStatsOnTiles}\n              onCheckedChange={setShowStatsOnTiles}\n            />\n            <Text variant=\"body2\" css={{ fontWeight: \"$semiBold\" }}>\n              Show Stats on Tiles\n            </Text>\n          </Flex>\n          {/* Select */}\n          <Flex\n            direction=\"column\"\n            css={{\n              mb: \"$12\",\n              position: \"relative\",\n              minWidth: 0,\n            }}\n          >\n            <Label variant=\"body2\">Stats For</Label>\n            <Dropdown.Root\n              data-testid=\"dialog_select_Stats For\"\n              open={open}\n              onOpenChange={setOpen}\n            >\n              <DialogDropdownTrigger\n                title={\n                  statsOptions.find(({ id }) => id === selectedStat)?.label ||\n                  \"Select Stats\"\n                }\n                css={{ mt: \"$4\" }}\n                titleCSS={{ mx: 0 }}\n                open={open}\n                ref={ref}\n              />\n              <Dropdown.Portal>\n                <Dropdown.Content\n                  align=\"start\"\n                  sideOffset={8}\n                  css={{ w: ref.current?.clientWidth, zIndex: 1000 }}\n                >\n                  {statsOptions.map(option => (\n                    <Dropdown.Item\n                      key={option.id}\n                      onClick={() => {\n                        setSelectedStat(option.id);\n                      }}\n                      css={{\n                        px: \"$9\",\n                        bg:\n                          option.id === selectedStat ? selectionBg : undefined,\n                        c:\n                          option.id === selectedStat\n                            ? \"$white\"\n                            : \"$textPrimary\",\n                      }}\n                    >\n                      {option.label}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Content>\n              </Dropdown.Portal>\n            </Dropdown.Root>\n          </Flex>\n          {/* Stats */}\n          {selectedStat === \"local-peer\" ? (\n            <LocalPeerStats />\n          ) : (\n            <TrackStats trackID={selectedStat} />\n          )}\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n\nconst useTracksWithLabel = () => {\n  const tracksMap = useHMSStore(selectTracksMap);\n  const peersMap = useHMSStore(selectPeersMap);\n  const tracksWithLabels = useMemo(\n    () =>\n      Object.values(tracksMap).map(track => {\n        const peerName = peersMap[track.peerId]?.name;\n        return {\n          id: track.id,\n          label: `${peerName} ${track.source} ${track.type}`,\n        };\n      }),\n    [tracksMap, peersMap]\n  );\n  return tracksWithLabels;\n};\n\nconst LocalPeerStats = () => {\n  const stats = useHMSStatsStore(selectHMSStats.localPeerStats);\n\n  if (!stats) {\n    return null;\n  }\n\n  return (\n    <Flex css={{ flexWrap: \"wrap\", gap: \"$10\" }}>\n      <StatsRow label=\"Packets Lost\" value={stats.subscribe?.packetsLost} />\n      <StatsRow label=\"Jitter\" value={stats.subscribe?.jitter} />\n      <StatsRow\n        label=\"Publish Bitrate\"\n        value={formatBytes(stats.publish?.bitrate, \"b/s\")}\n      />\n      <StatsRow\n        label=\"Subscribe Bitrate\"\n        value={formatBytes(stats.subscribe?.bitrate, \"b/s\")}\n      />\n      <StatsRow\n        label=\"Total Bytes Sent\"\n        value={formatBytes(stats.publish?.bytesSent)}\n      />\n      <StatsRow\n        label=\"Total Bytes Received\"\n        value={formatBytes(stats.subscribe?.bytesReceived)}\n      />\n    </Flex>\n  );\n};\n\nconst TrackStats = ({ trackID }) => {\n  const stats = useHMSStatsStore(selectHMSStats.trackStatsByID(trackID));\n  if (!stats) {\n    return null;\n  }\n  const inbound = stats.type.includes(\"inbound\");\n\n  return (\n    <Flex css={{ flexWrap: \"wrap\", gap: \"$10\" }}>\n      <StatsRow label=\"Type\" value={stats.type + \" \" + stats.kind} />\n      <StatsRow label=\"Bitrate\" value={formatBytes(stats.bitrate, \"b/s\")} />\n      <StatsRow label=\"Packets Lost\" value={stats.packetsLost || \"-\"} />\n      <StatsRow label=\"Jitter\" value={stats.jitter || \"-\"} />\n      <StatsRow\n        label={inbound ? \"Bytes Received\" : \"Bytes Sent\"}\n        value={formatBytes(inbound ? stats.bytesReceived : stats.bytesSent)}\n      />\n      {stats.kind === \"video\" && (\n        <>\n          <StatsRow label=\"Framerate\" value={stats.framesPerSecond} />\n          {!inbound && (\n            <StatsRow\n              label=\"Quality Limitation Reason\"\n              value={stats.qualityLimitationReason || \"-\"}\n            />\n          )}\n        </>\n      )}\n    </Flex>\n  );\n};\n\nconst StatsRow = ({ label, value }) => (\n  <Box css={{ bg: \"$surfaceLight\", w: \"calc(50% - $6)\", p: \"$8\", r: \"$3\" }}>\n    <Text\n      variant=\"overline\"\n      css={{\n        fontWeight: \"$semiBold\",\n        color: \"$textMedEmp\",\n        textTransform: \"uppercase\",\n      }}\n    >\n      {label}{\" \"}\n    </Text>\n    <Text\n      variant=\"sub1\"\n      css={{ fontWeight: \"$semiBold\", color: \"$textHighEmp\" }}\n    >\n      {value}\n    </Text>\n  </Box>\n);\n\nconst formatBytes = (bytes, unit = \"B\", decimals = 2) => {\n  if (bytes === 0) return \"0 \" + unit;\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = [\"\", \"K\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(\n    size => size + unit\n  );\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n};\n","import React, { useState } from \"react\";\nimport {\n  selectLocalPeerName,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Box, Button, Dialog, Flex, Input, Text } from \"@100mslive/react-ui\";\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport {\n  UserPreferencesKeys,\n  useUserPreferences,\n} from \"../hooks/useUserPreferences\";\n\nexport const ChangeNameModal = ({ onOpenChange }) => {\n  const [previewPreference, setPreviewPreference] = useUserPreferences(\n    UserPreferencesKeys.PREVIEW\n  );\n  const hmsActions = useHMSActions();\n  const localPeerName = useHMSStore(selectLocalPeerName);\n  const [currentName, setCurrentName] = useState(localPeerName);\n\n  const changeName = async () => {\n    const name = currentName.trim();\n    if (!name || name === localPeerName) {\n      return;\n    }\n    try {\n      await hmsActions.changeName(name);\n      setPreviewPreference({\n        ...(previewPreference || {}),\n        name,\n      });\n    } catch (error) {\n      console.error(\"failed to update name\", error);\n      ToastManager.addToast({ title: error.message });\n    } finally {\n      onOpenChange(false);\n    }\n  };\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content css={{ width: \"min(400px,80%)\", p: \"$10\" }}>\n          <Dialog.Title css={{ p: \"0 $4\" }}>\n            <Text variant=\"h6\"> Change Name</Text>\n          </Dialog.Title>\n          <form\n            onSubmit={async e => {\n              e.preventDefault();\n              await changeName();\n            }}\n          >\n            <Flex justify=\"center\" align=\"center\" css={{ my: \"$8\", w: \"100%\" }}>\n              <Input\n                css={{ width: \"100%\" }}\n                value={currentName}\n                onChange={e => {\n                  setCurrentName(e.target.value);\n                }}\n                autoComplete=\"name\"\n                required\n                data-testid=\"change_name_field\"\n              />\n            </Flex>\n\n            <Flex\n              justify=\"between\"\n              align=\"center\"\n              css={{\n                width: \"100%\",\n                gap: \"$md\",\n                mt: \"$10\",\n              }}\n            >\n              <Box css={{ w: \"50%\" }}>\n                <Dialog.Close css={{ w: \"100%\" }}>\n                  <Button\n                    variant=\"standard\"\n                    css={{ w: \"100%\" }}\n                    outlined\n                    type=\"submit\"\n                    disabled={!localPeerName}\n                  >\n                    Cancel\n                  </Button>\n                </Dialog.Close>\n              </Box>\n              <Box css={{ w: \"50%\" }}>\n                <Button\n                  variant=\"primary\"\n                  css={{ width: \"100%\" }}\n                  type=\"submit\"\n                  disabled={\n                    !currentName.trim() || currentName.trim() === localPeerName\n                  }\n                  data-testid=\"popup_change_btn\"\n                >\n                  Change\n                </Button>\n              </Box>\n            </Flex>\n          </form>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectLocalPeerID,\n  selectLocalPeerRoleName,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ArrowRightIcon, CheckIcon, PersonIcon } from \"@100mslive/react-icons\";\nimport { config, Dropdown, Text } from \"@100mslive/react-ui\";\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { useAppLayout } from \"../AppData/useAppLayout\";\nimport { useFilteredRoles } from \"../../common/hooks\";\nimport { arrayIntersection } from \"../../common/utils\";\n\nexport const ChangeSelfRole = ({ onClick }) => {\n  const roles = useFilteredRoles();\n  const permissions = useHMSStore(selectPermissions);\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const hmsActions = useHMSActions();\n  const hideTriggerItem = useMedia(config.media.sm);\n  const selfRoleChangeTo = useAppLayout(\"selfRoleChangeTo\");\n  const availableSelfChangeRoles = useMemo(\n    () => arrayIntersection(selfRoleChangeTo, roles),\n    [roles, selfRoleChangeTo]\n  );\n\n  if (!permissions.changeRole) {\n    return null;\n  }\n  return hideTriggerItem ? (\n    <Dropdown.Item onClick={onClick}>\n      <PersonIcon />\n      <Text variant=\"sm\" css={{ mx: \"$4\" }}>\n        Change My Role\n      </Text>\n    </Dropdown.Item>\n  ) : (\n    <Dropdown.SubMenu>\n      <Dropdown.TriggerItem data-testid=\"change_my_role_btn\">\n        <PersonIcon />\n        <Text variant=\"sm\" css={{ flex: \"1 1 0\", mx: \"$4\" }}>\n          Change My Role\n        </Text>\n        <ArrowRightIcon />\n      </Dropdown.TriggerItem>\n      <Dropdown.SubMenuContent\n        sideOffset={2}\n        alignOffset={-5}\n        css={{ \"@md\": { w: \"$64\" } }}\n      >\n        {availableSelfChangeRoles.map((role, i) => (\n          <Dropdown.Item\n            key={role}\n            css={{ justifyContent: \"space-between\" }}\n            onClick={async () => {\n              try {\n                await hmsActions.changeRole(localPeerId, role, true);\n              } catch (error) {\n                ToastManager.addToast({ title: error.message });\n              }\n            }}\n            data-testid={\"change_to_role_\" + role}\n          >\n            <Text variant=\"sm\">{role}</Text>\n            {localPeerRole === role && <CheckIcon width={16} height={16} />}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.SubMenuContent>\n    </Dropdown.SubMenu>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ViewIcon } from \"@100mslive/react-icons\";\nimport { Button, Dialog, Dropdown, Text } from \"@100mslive/react-ui\";\nimport {\n  DialogContent,\n  DialogInput,\n  DialogRow,\n} from \"../../primitives/DialogContent\";\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const EmbedUrl = ({ setShowOpenUrl }) => {\n  if (!window.CropTarget) {\n    return null;\n  }\n\n  return (\n    <Dropdown.Item\n      onClick={() => {\n        setShowOpenUrl(true);\n      }}\n      data-testid=\"embed_url_btn\"\n    >\n      <ViewIcon />\n      <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n        Embed URL\n      </Text>\n    </Dropdown.Item>\n  );\n};\n\nexport function EmbedUrlModal({ onOpenChange }) {\n  const [embedConfig, setEmbedConfig] = useSetAppDataByKey(\n    APP_DATA.embedConfig\n  );\n  const [url, setUrl] = useState(embedConfig?.url || \"\");\n\n  const isAnythingEmbedded = !!embedConfig?.url;\n  const isModifying = isAnythingEmbedded && url && url !== embedConfig.url;\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <DialogContent title=\"Embed URL\" Icon={ViewIcon}>\n        <DialogInput\n          title=\"URL\"\n          value={url}\n          onChange={setUrl}\n          placeholder=\"https://www.youtube.com/embed/dQw4w9WgXcQ\"\n          type=\"url\"\n        />\n        <DialogRow>\n          <Text>\n            Embed a url and share with everyone in the room. Ensure that you're\n            sharing the current tab when the prompt opens. Note that not all\n            websites support being embedded.\n          </Text>\n        </DialogRow>\n        <DialogRow justify=\"end\">\n          {isAnythingEmbedded ? (\n            <>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={!isModifying}\n                onClick={() => {\n                  setEmbedConfig({ url, shareScreen: embedConfig.shareScreen });\n                  onOpenChange(false);\n                }}\n                data-testid=\"embed_url_btn\"\n                css={{ mr: \"$4\" }}\n              >\n                Update Embed\n              </Button>\n              <Button\n                variant=\"danger\"\n                type=\"submit\"\n                onClick={() => {\n                  setEmbedConfig({ url: \"\" });\n                  onOpenChange(false);\n                }}\n                data-testid=\"embed_url_btn\"\n              >\n                Stop Embed\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={!url.trim()}\n                onClick={() => {\n                  setEmbedConfig({ url });\n                  onOpenChange(false);\n                }}\n                data-testid=\"embed_url_btn\"\n                css={{ mr: \"$4\" }}\n              >\n                Just Embed\n              </Button>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={!url.trim()}\n                onClick={() => {\n                  setEmbedConfig({ url, shareScreen: true });\n                  onOpenChange(false);\n                }}\n                data-testid=\"embed_url_btn\"\n              >\n                Embed and Share\n              </Button>\n            </>\n          )}\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport screenfull from \"screenfull\";\nimport { ToastManager } from \"../Toast/ToastManager\";\n\nexport const useFullscreen = () => {\n  const [isFullScreenEnabled, setIsFullScreenEnabled] = useState(\n    screenfull.isFullscreen\n  );\n\n  const toggle = useCallback(async () => {\n    if (!screenfull.isEnabled) {\n      ToastManager.addToast({ title: \"Fullscreen feature not supported\" });\n      return;\n    }\n    try {\n      if (isFullScreenEnabled) {\n        await screenfull.exit();\n      } else {\n        await screenfull.request();\n      }\n    } catch (err) {\n      ToastManager.addToast({ title: err.message });\n    }\n  }, [isFullScreenEnabled]);\n\n  useEffect(() => {\n    const onChange = () => {\n      setIsFullScreenEnabled(screenfull.isFullscreen);\n    };\n    if (screenfull.isEnabled) {\n      screenfull.on(\"change\", onChange);\n    }\n    return () => {\n      if (screenfull.isEnabled) {\n        screenfull.off(\"change\", onChange);\n      }\n    };\n  }, []);\n\n  return {\n    allowed: screenfull.isEnabled,\n    isFullscreen: isFullScreenEnabled,\n    toggleFullscreen: toggle,\n  };\n};\n","import React from \"react\";\nimport { ExpandIcon } from \"@100mslive/react-icons\";\nimport { Dropdown, Text } from \"@100mslive/react-ui\";\nimport { useFullscreen } from \"../hooks/useFullscreen\";\n\nexport const FullScreenItem = () => {\n  const { allowed, isFullscreen, toggleFullscreen } = useFullscreen();\n\n  if (!allowed) {\n    return null;\n  }\n\n  return (\n    <Dropdown.Item\n      onClick={() => {\n        toggleFullscreen();\n      }}\n      data-testid=\"full_screen_btn\"\n    >\n      <ExpandIcon />\n      <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n        {isFullscreen ? \"Exit \" : \"Go \"}Fullscreen\n      </Text>\n    </Dropdown.Item>\n  );\n};\n","import React, { useCallback, useState } from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { MicOffIcon } from \"@100mslive/react-icons\";\nimport {\n  Button,\n  Dialog,\n  Flex,\n  Label,\n  RadioGroup,\n  Text,\n} from \"@100mslive/react-ui\";\nimport {\n  DialogContent,\n  DialogRow,\n  DialogSelect,\n} from \"../../primitives/DialogContent\";\nimport { useFilteredRoles } from \"../../common/hooks\";\n\nconst trackSourceOptions = [\n  { label: \"All Track Sources\", value: \"\" },\n  { label: \"regular\", value: \"regular\" },\n  { label: \"screen\", value: \"screen\" },\n  { label: \"audioplaylist\", value: \"audioplaylist\" },\n  { label: \"videoplaylist\", value: \"videoplaylist\" },\n];\nconst trackTypeOptions = [\n  { label: \"All Track Types\", value: \"\" },\n  { label: \"audio\", value: \"audio\" },\n  { label: \"video\", value: \"video\" },\n];\nexport const MuteAllModal = ({ onOpenChange }) => {\n  const roles = useFilteredRoles();\n  const hmsActions = useHMSActions();\n  const [enabled, setEnabled] = useState(false);\n  const [trackType, setTrackType] = useState();\n  const [selectedRole, setRole] = useState();\n  const [selectedSource, setSource] = useState();\n\n  const muteAll = useCallback(async () => {\n    await hmsActions.setRemoteTracksEnabled({\n      enabled: enabled,\n      type: trackType,\n      source: selectedSource,\n      roles: selectedRole ? [selectedRole] : undefined,\n    });\n    onOpenChange(false);\n  }, [\n    selectedRole,\n    enabled,\n    trackType,\n    selectedSource,\n    hmsActions,\n    onOpenChange,\n  ]);\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <DialogContent title=\"Mute/Unmute Remote Tracks\" Icon={MicOffIcon}>\n        <DialogSelect\n          title=\"Role\"\n          options={[\n            { label: \"All Roles\", value: \"\" },\n            ...roles.map(role => ({ label: role, value: role })),\n          ]}\n          selected={selectedRole}\n          keyField=\"value\"\n          labelField=\"label\"\n          onChange={setRole}\n        />\n        <DialogSelect\n          title=\"Track type\"\n          options={trackTypeOptions}\n          selected={trackType}\n          onChange={setTrackType}\n          keyField=\"value\"\n          labelField=\"label\"\n        />\n        <DialogSelect\n          title=\"Track source\"\n          options={trackSourceOptions}\n          selected={selectedSource}\n          onChange={setSource}\n          keyField=\"value\"\n          labelField=\"label\"\n        />\n        <DialogRow>\n          <Text variant=\"md\">Track status</Text>\n          <RadioGroup.Root value={enabled} onValueChange={setEnabled}>\n            <Flex align=\"center\" css={{ mr: \"$8\" }}>\n              <RadioGroup.Item\n                value={false}\n                id=\"trackDisableRadio\"\n                css={{ mr: \"$4\" }}\n              >\n                <RadioGroup.Indicator />\n              </RadioGroup.Item>\n              <Label htmlFor=\"trackDisableRadio\">Mute</Label>\n            </Flex>\n            <Flex align=\"center\" css={{ cursor: \"pointer\" }}>\n              <RadioGroup.Item\n                value={true}\n                id=\"trackEnableRadio\"\n                css={{ mr: \"$4\" }}\n              >\n                <RadioGroup.Indicator />\n              </RadioGroup.Item>\n              <Label htmlFor=\"trackEnableRadio\">Request Unmute</Label>\n            </Flex>\n          </RadioGroup.Root>\n        </DialogRow>\n        <DialogRow justify=\"end\">\n          <Button variant=\"primary\" onClick={muteAll}>\n            Apply\n          </Button>\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  parsedUserAgent,\n  selectAppData,\n  selectIsAllowedToPublish,\n  selectLocalPeerID,\n  selectLocalPeerRoleName,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport {\n  CheckIcon,\n  InfoIcon,\n  MicOffIcon,\n  PencilIcon,\n  RecordIcon,\n  SettingsIcon,\n  VerticalMenuIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Box,\n  Checkbox,\n  config as cssConfig,\n  Dropdown,\n  Flex,\n  Text,\n  Tooltip,\n} from \"@100mslive/react-ui\";\nimport IconButton from \"../../IconButton\";\nimport { RoleChangeModal } from \"../RoleChangeModal\";\nimport SettingsModal from \"../Settings/SettingsModal\";\nimport StartRecording from \"../Settings/StartRecording\";\nimport { StatsForNerds } from \"../StatsForNerds\";\nimport { ChangeNameModal } from \"./ChangeNameModal\";\nimport { ChangeSelfRole } from \"./ChangeSelfRole\";\nimport { EmbedUrl, EmbedUrlModal } from \"./EmbedUrl\";\nimport { FullScreenItem } from \"./FullScreenItem\";\nimport { MuteAllModal } from \"./MuteAllModal\";\nimport { FeatureFlags } from \"../../services/FeatureFlags\";\nimport { APP_DATA } from \"../../common/constants\";\n\nconst OSName = parsedUserAgent.getOS().name.toLowerCase();\nconst isMacOS = OSName === \"mac os\";\nconst isMobileOS = OSName === \"android\" || OSName === \"ios\";\n\nexport const MoreSettings = () => {\n  const permissions = useHMSStore(selectPermissions);\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const hmsActions = useHMSActions();\n  const enablHlsStats = useHMSStore(selectAppData(APP_DATA.hlsStats));\n  const [open, setOpen] = useState(false);\n  const [showChangeNameModal, setShowChangeNameModal] = useState(false);\n  const [showMuteAll, setShowMuteAll] = useState(false);\n  const [showOpenUrl, setShowOpenUrl] = useState(false);\n  const [showDeviceSettings, setShowDeviceSettings] = useState(false);\n  const [showStatsForNerds, setShowStatsForNerds] = useState(false);\n  const [showSelfRoleChange, setShowSelfRoleChange] = useState(false);\n  const [showStartRecording, setShowStartRecording] = useState(false);\n  const isMobile = useMedia(cssConfig.media.md);\n  const { isBrowserRecordingOn } = useRecordingStreaming();\n  return (\n    <Fragment>\n      <Dropdown.Root open={open} onOpenChange={setOpen}>\n        <Dropdown.Trigger asChild data-testid=\"more_settings_btn\">\n          <IconButton>\n            <Tooltip title=\"More options\">\n              <Box>\n                <VerticalMenuIcon />\n              </Box>\n            </Tooltip>\n          </IconButton>\n        </Dropdown.Trigger>\n\n        <Dropdown.Content\n          sideOffset={5}\n          align=\"center\"\n          css={{ maxHeight: \"$96\", \"@md\": { w: \"$64\" } }}\n        >\n          {isMobile && permissions?.browserRecording ? (\n            <>\n              <Dropdown.Item\n                onClick={() => setShowStartRecording(value => !value)}\n              >\n                <RecordIcon />\n                <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                  {isBrowserRecordingOn ? \"Stop\" : \"Start\"} Recording\n                </Text>\n              </Dropdown.Item>\n              <Dropdown.ItemSeparator />\n            </>\n          ) : null}\n          <Dropdown.Item\n            onClick={() => setShowChangeNameModal(value => !value)}\n            data-testid=\"change_name_btn\"\n          >\n            <PencilIcon />\n            <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n              Change Name\n            </Text>\n          </Dropdown.Item>\n          <ChangeSelfRole onClick={() => setShowSelfRoleChange(true)} />\n          <FullScreenItem />\n          {isAllowedToPublish.screen && (\n            <EmbedUrl setShowOpenUrl={setShowOpenUrl} />\n          )}\n          {permissions.mute && (\n            <Dropdown.Item\n              onClick={() => setShowMuteAll(true)}\n              data-testid=\"mute_all_btn\"\n            >\n              <MicOffIcon />\n              <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                Mute All\n              </Text>\n            </Dropdown.Item>\n          )}\n          <Dropdown.ItemSeparator />\n          <Dropdown.Item\n            onClick={() => setShowDeviceSettings(true)}\n            data-testid=\"device_settings_btn\"\n          >\n            <SettingsIcon />\n            <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n              Settings\n            </Text>\n          </Dropdown.Item>\n          {FeatureFlags.enableStatsForNerds &&\n            (localPeerRole === \"hls-viewer\" ? (\n              <Dropdown.Item\n                onClick={() =>\n                  hmsActions.setAppData(APP_DATA.hlsStats, !enablHlsStats)\n                }\n                data-testid=\"hls_stats\"\n              >\n                <Checkbox.Root\n                  css={{ margin: \"$2\" }}\n                  checked={enablHlsStats}\n                  onCheckedChange={() =>\n                    hmsActions.setAppData(APP_DATA.hlsStats, !enablHlsStats)\n                  }\n                >\n                  <Checkbox.Indicator>\n                    <CheckIcon width={16} height={16} />\n                  </Checkbox.Indicator>\n                </Checkbox.Root>\n                <Flex justify=\"between\" css={{ width: \"100%\" }}>\n                  <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                    Show HLS Stats\n                  </Text>\n                  {!isMobileOS ? (\n                    <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                      {`${isMacOS ? \"⌘\" : \"ctrl\"} + ]`}\n                    </Text>\n                  ) : null}\n                </Flex>\n              </Dropdown.Item>\n            ) : (\n              <Dropdown.Item\n                onClick={() => setShowStatsForNerds(true)}\n                data-testid=\"stats_for_nreds_btn\"\n              >\n                <InfoIcon />\n                <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                  Stats for Nerds\n                </Text>\n              </Dropdown.Item>\n            ))}\n        </Dropdown.Content>\n      </Dropdown.Root>\n      {showMuteAll && <MuteAllModal onOpenChange={setShowMuteAll} />}\n      {showChangeNameModal && (\n        <ChangeNameModal onOpenChange={setShowChangeNameModal} />\n      )}\n      {showDeviceSettings && (\n        <SettingsModal open onOpenChange={setShowDeviceSettings} />\n      )}\n      {FeatureFlags.enableStatsForNerds && showStatsForNerds && (\n        <StatsForNerds\n          open={showStatsForNerds}\n          onOpenChange={setShowStatsForNerds}\n        />\n      )}\n      {showSelfRoleChange && (\n        <RoleChangeModal\n          peerId={localPeerId}\n          onOpenChange={setShowSelfRoleChange}\n        />\n      )}\n      {showStartRecording && (\n        <StartRecording\n          open={showStartRecording}\n          onOpenChange={setShowStartRecording}\n        />\n      )}\n      {showOpenUrl && <EmbedUrlModal onOpenChange={setShowOpenUrl} />}\n    </Fragment>\n  );\n};\n","/**\n * no tile - blank canvas, black image\n * 1 tile - takes full space on canvas\n * 2 tile - vertically equally split\n * 3 tile - two rows two columns - bottom right column is blank\n * 4 tiles - two rows two columns - all equal size\n */\nexport function drawVideoElementsOnCanvas(videoElements, canvas) {\n  let numberOfTiles = videoElements.filter(\n    videoElement => videoElement.srcObject !== null\n  ).length;\n\n  const ctx = canvas.getContext(\"2d\");\n  ctx.fillStyle = \"#000000\";\n  const canvasWidth = canvas.width;\n  const canvasHeight = canvas.height;\n\n  if (numberOfTiles === 0) {\n    // no tile to render, render black image\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n    return;\n  }\n  // TODO: Remove case of 2 tiles after aspect-ratio issue is resolved.\n  else if (numberOfTiles === 1 || numberOfTiles === 2) {\n    // draw the video element on full canvas\n    ctx.drawImage(videoElements[0], 0, 0, canvasWidth, canvasHeight);\n    return;\n  }\n\n  // if there are more than 2 videos to show, split into two rows\n  const numRows = numberOfTiles <= 2 ? 1 : 2;\n  const numCols = Number(Math.ceil(numberOfTiles / numRows));\n  const tileHeight = canvasHeight / numRows;\n  const tileWidth = canvasWidth / numCols;\n\n  fillGridTiles(numRows, numCols, tileHeight, tileWidth, videoElements, ctx);\n}\n\n// this is to send some data for stream and resolve video element's play for a\n// video element rendering this canvas' capture stream\nexport function dummyChangeInCanvas(canvas) {\n  const ctx = canvas.getContext(\"2d\");\n  ctx.fillStyle = \"#000000\";\n  const canvasWidth = canvas.width;\n  const canvasHeight = canvas.height;\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n}\n\n/**\n * Imagine the canvas as a grid with passed in number of rows and columns. Go\n * over the the tiles in the grid in order while drawing the videoElements upon them.\n */\nfunction fillGridTiles(\n  numRows,\n  numCols,\n  tileHeight,\n  tileWidth,\n  videoElements,\n  ctx\n) {\n  let videoElementPos = 0;\n  for (let row = 0; row < numRows; row++) {\n    const startY = row * tileHeight;\n    for (let col = 0; col < numCols; col++) {\n      const startX = col * tileWidth;\n      const video = videoElements[videoElementPos];\n      if (!video || video.srcObject === null) {\n        ctx.fillRect(startX, startY, tileWidth, tileHeight); // draw black tile\n      } else {\n        ctx.drawImage(video, startX, startY, tileWidth, tileHeight);\n      }\n      videoElementPos++;\n    }\n  }\n}\n","import * as workerTimers from \"worker-timers\";\nimport { drawVideoElementsOnCanvas, dummyChangeInCanvas } from \"./pipUtils\";\nconst MAX_NUMBER_OF_TILES_IN_PIP = 4;\nconst DEFAULT_FPS = 30;\nconst DEFAULT_CANVAS_WIDTH = 900;\nconst DEFAULT_CANVAS_HEIGHT = 600;\nconst LEAVE_EVENT_NAME = \"leavepictureinpicture\";\n\nconst PIPStates = {\n  starting: \"starting\",\n  started: \"started\",\n  stopping: \"stopping\",\n  stopped: \"stopped\",\n};\n\n/**\n * video elements are stitched together as a canvas which is converted to\n * another video element converted to PIP.\n * The task is split into two parts -\n * 1. a function which gets hit when the input changes and updates the tracks\n * to show\n * 2. an independent loop which updates the canvas periodically based on the current\n * tracks which should be shown.\n */\nclass PipManager {\n  constructor() {\n    this.reset();\n  }\n\n  /**\n   * @private\n   */\n  reset() {\n    console.debug(\"resetting PIP state\");\n    this.canvas = null; // where stitching will take place\n    this.pipVideo = null; // the element which will be sent in PIP\n    this.timeoutRef = null; // setTimeout reference so it can be cancelled\n    this.hmsActions = null; // for attaching detaching\n    this.videoElements = []; // for attaching tracks\n    this.tracksToShow = [];\n    this.onStateChange = () => {}; // for user of this class to listen to changes\n    this.state = PIPStates.stopped;\n  }\n\n  /**\n   * check if PIP is supported in this browser env\n   */\n  isSupported() {\n    return !!document.pictureInPictureEnabled;\n  }\n\n  /**\n   * check if pip is currently turned on\n   */\n  isOn() {\n    return !!document.pictureInPictureElement;\n  }\n\n  /**\n   * request browser to start pip and start the render loop updating the pip\n   * video element with peer tracks.\n   * @param hmsActions\n   * @param onStateChangeFn {function(bool):void} callback called to notify change in pip state\n   */\n  async start(hmsActions, onStateChangeFn) {\n    if (!this.isSupported()) {\n      throw new Error(\"pip is not supported on this browser\");\n    }\n    console.debug(\"starting PIP, current state\", this.state);\n    if (this.state === PIPStates.started) {\n      await this.stop(); // if anything is already running\n    } else if (this.state === PIPStates.starting) {\n      return; // ignore double clicks\n    }\n    this.state = PIPStates.starting;\n    try {\n      await this.init(hmsActions, onStateChangeFn);\n      // when user closes pip, call internal stop\n      this.pipVideo.addEventListener(LEAVE_EVENT_NAME, this.stop);\n      this.renderLoop();\n      if (!this.isOn()) {\n        await this.requestPIP();\n      }\n      console.debug(\"pip started\");\n      this.state = PIPStates.started;\n      this.onStateChange(true);\n    } catch (err) {\n      console.error(\"error in request pip\", err);\n      this.state = PIPStates.stopped;\n    }\n  }\n\n  stop = async () => {\n    if (this.state === PIPStates.stopped) {\n      return;\n    }\n    this.state = PIPStates.stopping;\n    this.pipVideo?.removeEventListener(LEAVE_EVENT_NAME, this.stop);\n    if (this.timeoutRef) {\n      workerTimers.clearTimeout(this.timeoutRef);\n    }\n    if (this.isOn()) {\n      this.exitPIP();\n    }\n    // detach all to avoid bandwidth consumption\n    await this.detachOldAttachNewTracks(this.tracksToShow, []);\n    this.onStateChange(false); // notify parent about this\n    this.reset(); // cleanup\n    this.state = PIPStates.stopped;\n  };\n\n  /**\n   * @param peers {Array} All Remote Peers present in call.\n   * @param tracksMap {Object} map of track id to track\n   * */\n  async updatePeersAndTracks(peers, tracksMap) {\n    if (!this.canvas) {\n      return;\n    }\n    const newTracksToShowUnordered = this.pickTracksToShow(peers, tracksMap);\n    const currentTracksShowing = this.tracksToShow;\n    this.tracksToShow = this.orderNewTracksToShow(\n      newTracksToShowUnordered,\n      currentTracksShowing\n    );\n    try {\n      await this.detachOldAttachNewTracks(\n        currentTracksShowing,\n        this.tracksToShow,\n        tracksMap\n      );\n    } catch (error) {\n      console.error(\"error in detaching/attaching tracks\", error);\n    }\n  }\n\n  // ------- Private function --------------\n\n  /**\n   * @private\n   */\n  async init(hmsActions, onStateChangeFn) {\n    await this.initMediaElements();\n    this.hmsActions = hmsActions;\n    this.onStateChange = onStateChangeFn;\n  }\n\n  async initMediaElements() {\n    if (!this.canvas) {\n      const { canvas, pipVideo } = this.initializeCanvasAndVideoElement();\n      this.canvas = canvas; // where stitching will take place\n      this.pipVideo = pipVideo; // the element which will be sent in PIP\n      this.videoElements = this.initializeVideoElements(); // for attaching tracks\n      const videoPlayPromise = this.pipVideo.play();\n      dummyChangeInCanvas(this.canvas);\n      await videoPlayPromise;\n    }\n  }\n\n  initializeCanvasAndVideoElement() {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = DEFAULT_CANVAS_WIDTH;\n    canvas.height = DEFAULT_CANVAS_HEIGHT;\n    const pipVideo = document.createElement(\"video\");\n    pipVideo.muted = true;\n    pipVideo.srcObject = canvas.captureStream();\n    return { canvas, pipVideo };\n  }\n\n  initializeVideoElements() {\n    let videoElements = [];\n    for (let i = 0; i < MAX_NUMBER_OF_TILES_IN_PIP; i++) {\n      const videoElement = document.createElement(\"video\");\n      videoElement.autoplay = true;\n      videoElement.playsinline = true;\n      videoElements.push(videoElement);\n    }\n    return videoElements;\n  }\n\n  /**\n   * render loop is responsible for rendering the video elements on canvas/pip.\n   * in each loop current video elements are stitched and painted on canvas\n   */\n  renderLoop() {\n    const delay = 1000 / DEFAULT_FPS;\n    this.timeoutRef = workerTimers.setTimeout(() => {\n      if (\n        this.state === PIPStates.stopping ||\n        this.state === PIPStates.stopped\n      ) {\n        return;\n      }\n      if (this.state === PIPStates.started) {\n        drawVideoElementsOnCanvas(this.videoElements, this.canvas);\n      }\n      this.renderLoop();\n    }, delay);\n  }\n\n  async requestPIP() {\n    try {\n      if (this.isOn()) {\n        this.exitPIP(); // is this really needed?\n      }\n      await this.pipVideo.requestPictureInPicture();\n    } catch (error) {\n      console.error(\"error in requestpip\", error, \"state\", this.state);\n      throw error;\n    }\n  }\n\n  exitPIP() {\n    document.exitPictureInPicture();\n  }\n\n  /**\n   * Logic - pick only enabled video tracks\n   * @param peers {Array<any>}\n   * @param tracksMap {Record<string, any>}\n   */\n  pickTracksToShow(peers, tracksMap) {\n    const tracksToShow = [];\n    for (const peer of peers) {\n      if (tracksToShow.length === MAX_NUMBER_OF_TILES_IN_PIP) {\n        break;\n      } else if (peer.videoTrack && tracksMap[peer.videoTrack]?.enabled) {\n        tracksToShow.push(peer.videoTrack);\n      }\n    }\n    return tracksToShow;\n  }\n\n  /**\n   * there has to be a smart reordering of new tracks based on currently showing\n   * ones to reduce unnecessary displacement. If someone was showing up both\n   * earlier and now, it's a better UX to keep their position same instead\n   * of letting it change.\n   * The returned array is a shuffled version of newTracks with position of\n   * tracks present in the old tracks intact.\n   * eg. old = [1,5,9,3], new = [3,8,2,9], result = [8,2,9,3]\n   * @param oldTracks {Array}\n   * @param newTracks {Array}\n   * @return {Array}\n   */\n  orderNewTracksToShow(newTracks, oldTracks) {\n    const betterNewTracks = [];\n    const leftOvers = [];\n    // put the common ones in right position\n    newTracks.forEach(track => {\n      const oldPosition = oldTracks.indexOf(track);\n      if (oldPosition !== -1 && oldPosition < newTracks.length) {\n        // if track is there currently and we can put it on the same position\n        betterNewTracks[oldPosition] = track;\n      } else {\n        leftOvers.push(track);\n      }\n    });\n    // put the left overs in remaining empty positions\n    for (let i = 0; i < newTracks.length; i++) {\n      if (!betterNewTracks[i]) {\n        betterNewTracks[i] = leftOvers.shift();\n      }\n    }\n    return betterNewTracks;\n  }\n\n  /**\n   * call detach for tracks which no longer need to be shown and attach for\n   * new ones which are to be shown now.\n   * Note: oldTracks and newTracks are not necessarily of same length\n   * @param oldTracks {Array<String>}\n   * @param newTracks {Array<String>}\n   * @param tracksMap {Record<String, any>}\n   */\n  async detachOldAttachNewTracks(oldTracks, newTracks, tracksMap = null) {\n    const numTracks = Math.max(oldTracks.length, newTracks.length);\n    for (let i = 0; i < numTracks; i++) {\n      if (oldTracks[i] === newTracks[i]) {\n        continue; // it would already have been attached previously\n      } else if (oldTracks[i]) {\n        // old track is there but not equal to new track, detach\n        // no need to call detach if we know for sure track is no longer in store\n        if (!tracksMap || tracksMap[oldTracks[i]]) {\n          await this.hmsActions.detachVideo(\n            oldTracks[i],\n            this.videoElements[i]\n          );\n        }\n        if (this.videoElements[i]) {\n          // even if old track got removed from the room, element needs to be cleaned up\n          this.videoElements[i].srcObject = null;\n        }\n      }\n      if (newTracks[i]) {\n        await this.hmsActions.attachVideo(newTracks[i], this.videoElements[i]);\n      }\n    }\n  }\n}\n\nexport const PictureInPicture = new PipManager();\n// PictureInPicture.initMediaElements().catch(console.error);  // for safari, init early\n","import {\n  selectIsLocalAudioEnabled,\n  selectIsLocalVideoEnabled,\n} from \"@100mslive/react-sdk\";\n\n/**\n * Media Session API allows for handling control actions on top of pip\n * https://web.dev/media-session/#video-conferencing-actions\n */\nclass SetupMediaSession {\n  setup = (actions, store) => {\n    this.actions = actions;\n    this.store = store;\n    this.initState();\n    this.setUpHandlers();\n  };\n\n  initState = () => {\n    const isMicActive = this.store.getState(selectIsLocalAudioEnabled);\n    const isCamActive = this.store.getState(selectIsLocalVideoEnabled);\n    navigator.mediaSession?.setMicrophoneActive?.(isMicActive);\n    navigator.mediaSession?.setCameraActive?.(isCamActive);\n\n    this.store.subscribe(isMicActive => {\n      navigator.mediaSession?.setMicrophoneActive?.(isMicActive);\n    }, selectIsLocalAudioEnabled);\n\n    this.store.subscribe(isCamActive => {\n      navigator.mediaSession?.setCameraActive?.(isCamActive);\n    }, selectIsLocalVideoEnabled);\n  };\n\n  toggleMic = async () => {\n    console.log(\"toggle mic clicked in pip\");\n    const current = this.store.getState(selectIsLocalAudioEnabled);\n    await this.actions.setLocalAudioEnabled(!current);\n  };\n\n  toggleCam = async () => {\n    console.log(\"toggle cam clicked in pip\");\n    const current = this.store.getState(selectIsLocalVideoEnabled);\n    await this.actions.setLocalVideoEnabled(!current);\n  };\n\n  leave = () => {\n    console.log(\"leave called from pip\");\n    this.actions.leave();\n  };\n\n  setUpHandlers = () => {\n    if (navigator.mediaSession) {\n      try {\n        navigator.mediaSession.setActionHandler(\n          \"togglemicrophone\",\n          this.toggleMic\n        );\n        navigator.mediaSession.setActionHandler(\"togglecamera\", this.toggleCam);\n        navigator.mediaSession.setActionHandler(\"hangup\", this.leave);\n      } catch (err) {\n        console.error(\"error in setting media session handlers\", err);\n      }\n    }\n  };\n}\n\nexport const MediaSession = new SetupMediaSession();\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  selectLocalPeerRoleName,\n  selectRemotePeers,\n  selectTracksMap,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { PipIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport IconButton from \"../../IconButton\";\nimport { PictureInPicture } from \"./PIPManager\";\nimport { MediaSession } from \"./SetupMediaSession\";\nimport { DEFAULT_HLS_VIEWER_ROLE } from \"../../common/constants\";\n\n/**\n * shows a button which when clicked shows some videos in PIP, clicking\n * again turns it off.\n */\nconst PIPComponent = () => {\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const [isPipOn, setIsPipOn] = useState(PictureInPicture.isOn());\n  const hmsActions = useHMSActions();\n  const store = useHMSVanillaStore();\n\n  const onPipToggle = useCallback(() => {\n    if (isPipOn) {\n      PictureInPicture.stop().catch(err =>\n        console.error(\"error in stopping pip\", err)\n      );\n    } else {\n      PictureInPicture.start(hmsActions, setIsPipOn).catch(err =>\n        console.error(\"error in starting pip\", err)\n      );\n      MediaSession.setup(hmsActions, store);\n    }\n  }, [hmsActions, isPipOn, store]);\n\n  // stop pip on unmount\n  useEffect(() => {\n    return () => {\n      PictureInPicture.stop().catch(err =>\n        console.error(\"error in stopping pip on unmount\", err)\n      );\n    };\n  }, []);\n\n  if (\n    !PictureInPicture.isSupported() ||\n    localPeerRole === DEFAULT_HLS_VIEWER_ROLE\n  ) {\n    return null;\n  }\n  return (\n    <>\n      <Tooltip\n        title={`${isPipOn ? \"Deactivate\" : \"Activate\"} picture in picture view`}\n      >\n        <IconButton\n          active={!isPipOn}\n          key=\"pip\"\n          onClick={() => onPipToggle()}\n          data-testid=\"pip_btn\"\n        >\n          <PipIcon />\n        </IconButton>\n      </Tooltip>\n      {isPipOn && <ActivatedPIP setIsPipOn={setIsPipOn} />}\n    </>\n  );\n};\n\n/**\n * this is a separate component so it can be conditionally rendered and\n * the subscriptions to store are done only if required.\n */\nconst ActivatedPIP = () => {\n  const tracksMap = useHMSStore(selectTracksMap);\n  const remotePeers = useHMSStore(selectRemotePeers);\n\n  useEffect(() => {\n    PictureInPicture.updatePeersAndTracks(remotePeers, tracksMap).catch(err => {\n      console.error(\"error in updating pip\", err);\n    });\n  }, [tracksMap, remotePeers]);\n\n  return null;\n};\n\nexport default PIPComponent;\n","import {\n  selectIsAllowedToPublish,\n  useHMSStore,\n  useScreenShare,\n} from \"@100mslive/react-sdk\";\nimport { ShareScreenIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport IconButton from \"../IconButton\";\nimport { useUISettings } from \"./AppData/useUISettings\";\nimport { isScreenshareSupported } from \"../common/utils\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const ScreenshareToggle = ({ css }) => {\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const {\n    amIScreenSharing,\n    screenShareVideoTrackId: video,\n    toggleScreenShare,\n  } = useScreenShare();\n  const isVideoScreenshare = amIScreenSharing && !!video;\n  if (!isAllowedToPublish.screen || !isScreenshareSupported()) {\n    return null;\n  }\n  return (\n    <Tooltip title={`${!isVideoScreenshare ? \"Start\" : \"Stop\"} screen sharing`}>\n      <IconButton\n        active={!isVideoScreenshare}\n        css={css}\n        disabled={isAudioOnly}\n        onClick={() => {\n          toggleScreenShare();\n        }}\n        data-testid=\"screen_share_btn\"\n      >\n        <ShareScreenIcon />\n      </IconButton>\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { Button, Dialog } from \"@100mslive/react-ui\";\nimport { DialogContent, DialogRow } from \"../primitives/DialogContent\";\n\nexport const ScreenShareHintModal = ({ onClose }) => {\n  const hmsActions = useHMSActions();\n  return (\n    <Dialog.Root defaultOpen onOpenChange={value => !value && onClose()}>\n      <DialogContent title=\"AudioOnly Screenshare\">\n        <img src=\"/share-audio.png\" alt=\"AudioOnly Screenshare instructions\" />\n        <DialogRow justify=\"end\">\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              hmsActions\n                .setScreenShareEnabled(true, {\n                  audioOnly: true,\n                  displaySurface: \"browser\",\n                })\n                .catch(console.error);\n              onClose();\n            }}\n            data-testid=\"audio_screenshare_continue\"\n          >\n            Continue\n          </Button>\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n};\n","import {\n  selectUnreadHMSMessagesCount,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ChatIcon, ChatUnreadIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport IconButton from \"../../IconButton\";\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const ChatToggle = () => {\n  const countUnreadMessages = useHMSStore(selectUnreadHMSMessagesCount);\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n\n  return (\n    <Tooltip key=\"chat\" title={`${isChatOpen ? \"Close\" : \"Open\"} chat`}>\n      <IconButton\n        onClick={toggleChat}\n        active={!isChatOpen}\n        data-testid=\"chat_btn\"\n      >\n        {countUnreadMessages === 0 ? (\n          <ChatIcon />\n        ) : (\n          <ChatUnreadIcon data-testid=\"chat_unread_btn\" />\n        )}\n      </IconButton>\n    </Tooltip>\n  );\n};\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  selectIsLocalAudioPluginPresent,\n  useDevices,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { AudioLevelIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport { ToastManager } from \"../components/Toast/ToastManager\";\nimport IconButton from \"../IconButton\";\nimport { FeatureFlags } from \"../services/FeatureFlags\";\n\nexport const NoiseSuppression = () => {\n  const pluginRef = useRef(null);\n  const hmsActions = useHMSActions();\n  const [disable, setDisabled] = useState(false);\n  const [isNSSupported, setIsNSSupported] = useState(false);\n  const isPluginPresent = useHMSStore(\n    selectIsLocalAudioPluginPresent(\"@100mslive/hms-noise-suppression\")\n  );\n  const { selectedDeviceIDs } = useDevices();\n  const pluginActive = isPluginPresent && !disable;\n\n  const createPlugin = useCallback(async () => {\n    if (!pluginRef.current) {\n      const { HMSNoiseSuppressionPlugin } = await import(\n        \"@100mslive/hms-noise-suppression\"\n      );\n      pluginRef.current = new HMSNoiseSuppressionPlugin(\n        process.env.NS_DURATION_TIME_IN_MS\n      );\n    }\n  }, []);\n\n  const removePlugin = useCallback(async () => {\n    if (pluginRef.current) {\n      await hmsActions.removePluginFromAudioTrack(pluginRef.current);\n      pluginRef.current = null;\n    }\n  }, [hmsActions]);\n\n  const handleFailure = useCallback(\n    async err => {\n      let message = \"adding Noise Suppression plugin failed, see docs\";\n      if (err.message) {\n        message = err.message;\n      }\n      ToastManager.addToast({\n        title: message,\n      });\n\n      setDisabled(true);\n      await removePlugin();\n      pluginRef.current = null;\n      console.error(err);\n    },\n    [removePlugin]\n  );\n\n  const addPlugin = useCallback(async () => {\n    try {\n      setDisabled(false);\n      await createPlugin();\n      //check support its recommended\n      const pluginSupport = hmsActions.validateAudioPluginSupport(\n        pluginRef.current\n      );\n      if (pluginSupport.isSupported) {\n        await hmsActions.addPluginToAudioTrack(pluginRef.current);\n      } else {\n        const err = pluginSupport.errMsg;\n        await handleFailure(err);\n      }\n    } catch (err) {\n      await handleFailure(err);\n    }\n  }, [hmsActions, handleFailure, createPlugin]);\n\n  useEffect(() => {\n    (async () => {\n      if (!pluginRef.current) {\n        await createPlugin();\n      }\n\n      const pluginSupport = hmsActions.validateAudioPluginSupport(\n        pluginRef.current\n      );\n      setIsNSSupported(pluginSupport.isSupported);\n      setDisabled(!pluginSupport.isSupported);\n    })();\n  }, [selectedDeviceIDs.audioInput, hmsActions, createPlugin]);\n\n  if (isNSSupported && FeatureFlags.showNS()) {\n    return (\n      <Tooltip title={`Turn ${pluginActive ? \"off\" : \"on\"} noise suppression`}>\n        <IconButton\n          active={!pluginActive}\n          disabled={disable}\n          onClick={async () => {\n            if (pluginActive) {\n              await removePlugin();\n            } else {\n              await addPlugin();\n            }\n          }}\n          data-testid=\"noise_suppression_btn\"\n        >\n          <AudioLevelIcon />\n        </IconButton>\n      </Tooltip>\n    );\n  }\n\n  return null;\n};\n","import React, { Fragment, useState } from \"react\";\nimport {\n  HMSPlaylistType,\n  selectIsAllowedToPublish,\n  useHMSStore,\n  useScreenShare,\n} from \"@100mslive/react-sdk\";\nimport { MusicIcon } from \"@100mslive/react-icons\";\nimport { Flex, Footer as AppFooter, Tooltip } from \"@100mslive/react-ui\";\nimport { Playlist } from \"../../components/Playlist/Playlist\";\nimport IconButton from \"../../IconButton\";\nimport { AudioVideoToggle } from \"../AudioVideoToggle\";\nimport { LeaveRoom } from \"../LeaveRoom\";\nimport MetaActions from \"../MetaActions\";\nimport { MoreSettings } from \"../MoreSettings/MoreSettings\";\nimport PIPComponent from \"../PIP/PIPComponent\";\nimport { ScreenshareToggle } from \"../ScreenShare\";\nimport { ScreenShareHintModal } from \"../ScreenshareHintModal\";\nimport { ChatToggle } from \"./ChatToggle\";\nimport { NoiseSuppression } from \"../../plugins/NoiseSuppression\";\nimport { VirtualBackground } from \"../../plugins/VirtualBackground/VirtualBackground\";\nimport { ToggleWhiteboard } from \"../../plugins/whiteboard\";\nimport { isScreenshareSupported } from \"../../common/utils\";\nimport { FeatureFlags } from \"../../services/FeatureFlags\";\n\nconst TranscriptionButton = React.lazy(() =>\n  import(\"../../plugins/transcription\")\n);\n\nconst ScreenshareAudio = () => {\n  const {\n    amIScreenSharing,\n    screenShareVideoTrackId: video,\n    screenShareAudioTrackId: audio,\n    toggleScreenShare,\n  } = useScreenShare();\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  const isAudioScreenshare = amIScreenSharing && !video && !!audio;\n  const [showModal, setShowModal] = useState(false);\n  if (!isAllowedToPublish.screen || !isScreenshareSupported()) {\n    return null;\n  }\n  return (\n    <Fragment>\n      <Tooltip\n        title={`${!isAudioScreenshare ? \"Start\" : \"Stop\"} audio sharing`}\n        key=\"shareAudio\"\n      >\n        <IconButton\n          active={!isAudioScreenshare}\n          onClick={() => {\n            if (amIScreenSharing) {\n              toggleScreenShare();\n            } else {\n              setShowModal(true);\n            }\n          }}\n          data-testid=\"screenshare_audio\"\n        >\n          <MusicIcon />\n        </IconButton>\n      </Tooltip>\n      {showModal && (\n        <ScreenShareHintModal onClose={() => setShowModal(false)} />\n      )}\n    </Fragment>\n  );\n};\n\nexport const ConferencingFooter = () => {\n  return (\n    <AppFooter.Root>\n      <AppFooter.Left>\n        <ScreenshareAudio />\n        <Playlist type={HMSPlaylistType.audio} />\n        <Playlist type={HMSPlaylistType.video} />\n        {FeatureFlags.enableWhiteboard ? <ToggleWhiteboard /> : null}\n        <VirtualBackground />\n        <NoiseSuppression />\n        {FeatureFlags.enableTranscription && <TranscriptionButton />}\n        <Flex\n          align=\"center\"\n          css={{\n            display: \"none\",\n            \"@md\": {\n              display: \"flex\",\n            },\n          }}\n        >\n          <MetaActions isMobile />\n        </Flex>\n      </AppFooter.Left>\n      <AppFooter.Center>\n        <AudioVideoToggle />\n        <ScreenshareToggle />\n        <PIPComponent />\n        <MoreSettings />\n        <LeaveRoom />\n        <Flex\n          align=\"center\"\n          css={{ display: \"none\", \"@md\": { display: \"flex\" } }}\n        >\n          <ChatToggle />\n        </Flex>\n      </AppFooter.Center>\n      <AppFooter.Right>\n        <MetaActions />\n        <ChatToggle />\n      </AppFooter.Right>\n    </AppFooter.Root>\n  );\n};\n","import React from \"react\";\nimport { Box, Flex, Footer as AppFooter } from \"@100mslive/react-ui\";\nimport { AudioVideoToggle } from \"../AudioVideoToggle\";\nimport { StreamActions } from \"../Header/StreamActions\";\nimport { LeaveRoom } from \"../LeaveRoom\";\nimport MetaActions from \"../MetaActions\";\nimport { MoreSettings } from \"../MoreSettings/MoreSettings\";\nimport PIPComponent from \"../PIP/PIPComponent\";\nimport { ScreenshareToggle } from \"../ScreenShare\";\nimport { ChatToggle } from \"./ChatToggle\";\n\nexport const StreamingFooter = () => {\n  return (\n    <AppFooter.Root\n      css={{\n        flexWrap: \"nowrap\",\n        \"@md\": {\n          justifyContent: \"center\",\n        },\n      }}\n    >\n      <AppFooter.Left\n        css={{\n          \"@md\": {\n            w: \"unset\",\n            p: \"0\",\n          },\n        }}\n      >\n        <AudioVideoToggle />\n      </AppFooter.Left>\n      <AppFooter.Center\n        css={{\n          \"@md\": {\n            w: \"unset\",\n          },\n        }}\n      >\n        <ScreenshareToggle css={{ \"@sm\": { display: \"none\" } }} />\n        <Box css={{ \"@md\": { display: \"none\" } }}>\n          <PIPComponent />\n        </Box>\n        <Box\n          css={{\n            display: \"none\",\n            \"@md\": {\n              display: \"flex\",\n              alignItems: \"center\",\n              mx: \"$4\",\n            },\n          }}\n        >\n          <StreamActions />\n        </Box>\n        <MoreSettings />\n        <Box css={{ \"@md\": { display: \"none\" } }}>\n          <LeaveRoom />\n        </Box>\n        <Flex\n          align=\"center\"\n          css={{ display: \"none\", \"@md\": { display: \"flex\" } }}\n        >\n          <ChatToggle />\n        </Flex>\n      </AppFooter.Center>\n      <AppFooter.Right>\n        <MetaActions />\n        <ChatToggle />\n      </AppFooter.Right>\n    </AppFooter.Root>\n  );\n};\n","import React from \"react\";\nimport { ConferencingFooter } from \"./Footer/ConferencingFooter\";\nimport { StreamingFooter } from \"./Footer/StreamingFooter\";\nimport { isStreamingKit } from \"../common/utils\";\n\nexport const Footer = () => {\n  return isStreamingKit() ? <StreamingFooter /> : <ConferencingFooter />;\n};\n","import React from \"react\";\nimport {\n  selectRoleChangeRequest,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { RequestDialog } from \"../primitives/DialogContent\";\nimport { useIsHeadless } from \"./AppData/useUISettings\";\n\nexport const RoleChangeRequestModal = () => {\n  const hmsActions = useHMSActions();\n  const isHeadless = useIsHeadless();\n  const roleChangeRequest = useHMSStore(selectRoleChangeRequest);\n\n  if (!roleChangeRequest?.role || isHeadless) {\n    return null;\n  }\n\n  return (\n    <RequestDialog\n      title=\"Role Change Request\"\n      onOpenChange={value =>\n        !value && hmsActions.rejectChangeRole(roleChangeRequest)\n      }\n      body={`${roleChangeRequest?.requestedBy?.name} has requested you to change your role to ${roleChangeRequest?.role?.name}.`}\n      onAction={() => {\n        hmsActions.acceptChangeRole(roleChangeRequest);\n      }}\n      actionText=\"Accept\"\n    />\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { usePrevious } from \"react-use\";\nimport {\n  HMSRoomState,\n  selectIsConnectedToRoom,\n  selectRoomState,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Box, Flex } from \"@100mslive/react-ui\";\nimport { ConferenceMainView } from \"../layouts/mainView\";\nimport { Footer } from \"./Footer\";\nimport FullPageProgress from \"./FullPageProgress\";\nimport { Header } from \"./Header\";\nimport { RoleChangeRequestModal } from \"./RoleChangeRequestModal\";\nimport { useIsHeadless } from \"./AppData/useUISettings\";\nimport { useNavigation } from \"./hooks/useNavigation\";\n\nconst Conference = () => {\n  const navigate = useNavigation();\n  const { roomId, role } = useParams();\n  const isHeadless = useIsHeadless();\n  const roomState = useHMSStore(selectRoomState);\n  const prevState = usePrevious(roomState);\n  const isConnectedToRoom = useHMSStore(selectIsConnectedToRoom);\n  const hmsActions = useHMSActions();\n\n  useEffect(() => {\n    if (!roomId) {\n      navigate(`/`);\n      return;\n    }\n    if (\n      !prevState &&\n      !(\n        roomState === HMSRoomState.Connecting ||\n        roomState === HMSRoomState.Reconnecting ||\n        isConnectedToRoom\n      )\n    ) {\n      if (role) navigate(`/preview/${roomId || \"\"}/${role}`);\n      else navigate(`/preview/${roomId || \"\"}`);\n    }\n  }, [isConnectedToRoom, prevState, roomState, navigate, role, roomId]);\n\n  useEffect(() => {\n    // beam doesn't need to store messages, saves on unnecessary store updates in large calls\n    if (isHeadless) {\n      hmsActions.ignoreMessageTypes([\"chat\"]);\n    }\n  }, [isHeadless, hmsActions]);\n\n  useEffect(() => {\n    return () => {\n      // This is needed to handle mac touchpad swipe gesture\n      if (isConnectedToRoom) {\n        hmsActions.leave();\n      }\n    };\n  }, [hmsActions, isConnectedToRoom]);\n\n  if (!isConnectedToRoom) {\n    return <FullPageProgress />;\n  }\n\n  return (\n    <Flex css={{ size: \"100%\" }} direction=\"column\">\n      {!isHeadless && (\n        <Box css={{ h: \"$18\", \"@md\": { h: \"$17\" } }} data-testid=\"header\">\n          <Header />\n        </Box>\n      )}\n      <Box\n        css={{\n          w: \"100%\",\n          flex: \"1 1 0\",\n          minHeight: 0,\n        }}\n        data-testid=\"conferencing\"\n      >\n        <ConferenceMainView />\n      </Box>\n      {!isHeadless && (\n        <Box css={{ flexShrink: 0, minHeight: \"$24\" }} data-testid=\"footer\">\n          <Footer />\n        </Box>\n      )}\n      <RoleChangeRequestModal />\n    </Flex>\n  );\n};\n\nexport default Conference;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"@100mslive/react-ui\";\nimport PlaceholderBg from \"../images/first_person.png\";\n\nexport const FirstPersonDisplay = React.memo(() => {\n  return (\n    <Box\n      css={{\n        position: \"relative\",\n        overflow: \"hidden\",\n        w: \"37.5rem\",\n        maxWidth: \"80%\",\n        h: \"100%\",\n        r: \"$3\",\n        m: \"0 auto\",\n        backgroundImage: `url(${PlaceholderBg})`,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n      data-testid=\"first_person_img\"\n    >\n      <Flex\n        align=\"center\"\n        direction=\"column\"\n        css={{\n          position: \"absolute\",\n          w: \"100%\",\n          top: \"33.33%\",\n          left: 0,\n          textAlign: \"center\",\n        }}\n      >\n        <Text color=\"white\" variant=\"h4\" css={{ \"@md\": { fontSize: \"$md\" } }}>\n          Welcome!\n        </Text>\n        <Text\n          color=\"white\"\n          variant=\"h6\"\n          css={{ mt: \"$4\", \"@md\": { fontSize: \"$sm\" } }}\n        >\n          You’re the first one here.\n        </Text>\n        <Text\n          color=\"white\"\n          variant=\"h6\"\n          css={{ mt: \"$2\", \"@md\": { fontSize: \"$sm\" } }}\n        >\n          Sit back and relax till the others join.\n        </Text>\n      </Flex>\n    </Box>\n  );\n});\n","import { styled } from \"@100mslive/react-ui\";\n\nexport const Image = styled(\"img\", {\n  width: \"100%\",\n  height: \"auto\",\n  r: \"$3\",\n});\n","import React, { Fragment } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { Box, config as cssConfig, Flex } from \"@100mslive/react-ui\";\nimport { FirstPersonDisplay } from \"./FirstPersonDisplay\";\nimport { Image } from \"./Image\";\nimport VideoList from \"./VideoList\";\n\nconst MAX_TILES_FOR_MOBILE = 4;\n\n/**\n * the below variables are for showing webinar etc. related image if required on certain meeting urls\n */\nconst webinarProps = JSON.parse(process.env.REACT_APP_WEBINAR_PROPS || \"{}\");\nconst eventRoomIDs = webinarProps?.ROOM_IDS || [];\nconst eventsImg = webinarProps?.IMAGE_FILE || \"\"; // the image to show in center\n// the link to navigate to when user clicks on the image\nconst webinarInfoLink = webinarProps?.LINK_HREF || \"https://100ms.live/\";\n\n// The center of the screen shows bigger tiles\nexport const GridCenterView = ({ peers, maxTileCount }) => {\n  const mediaQueryLg = cssConfig.media.md;\n  const limitMaxTiles = useMedia(mediaQueryLg);\n  return (\n    <Fragment>\n      <Box\n        css={{\n          flex: \"1 1 0\",\n          height: \"100%\",\n          mx: \"$8\",\n          \"@md\": { flex: \"2 1 0\" },\n        }}\n      >\n        {peers && peers.length > 0 ? (\n          <VideoList\n            peers={peers}\n            maxTileCount={limitMaxTiles ? MAX_TILES_FOR_MOBILE : maxTileCount}\n          />\n        ) : eventRoomIDs.some(id => window.location.href.includes(id)) ? (\n          <Box\n            css={{\n              display: \"grid\",\n              placeItems: \"center\",\n              size: \"100%\",\n              p: \"$12\",\n            }}\n          >\n            <a href={webinarInfoLink} target=\"_blank\" rel=\"noreferrer\">\n              <Image\n                css={{ p: \"$4\", boxShadow: \"$sm\" }}\n                alt=\"Event template\"\n                src={eventsImg}\n              />\n            </a>\n          </Box>\n        ) : (\n          <FirstPersonDisplay />\n        )}\n      </Box>\n    </Fragment>\n  );\n};\n\n// Side pane shows smaller tiles\nexport const GridSidePaneView = ({ peers }) => {\n  return (\n    <Flex\n      direction=\"column\"\n      css={{\n        flex: \"0 0 20%\",\n        mx: \"$8\",\n        \"@lg\": {\n          flex: \"0 0 25%\",\n        },\n        \"@md\": {\n          flex: \"1 1 0\",\n        },\n      }}\n    >\n      <Flex css={{ flex: \"1 1 0\" }} align=\"end\">\n        {peers && peers.length > 0 && (\n          <VideoList peers={peers} maxColCount={2} />\n        )}\n      </Flex>\n    </Flex>\n  );\n};\n","const PEER_NAME_PLACEHOLDER = \"peerName\";\nconst labelMap = new Map([\n  [[true, \"screen\"].toString(), \"Your Screen\"],\n  [[true, \"regular\"].toString(), `You (${PEER_NAME_PLACEHOLDER})`],\n  [[false, \"screen\"].toString(), `${PEER_NAME_PLACEHOLDER}'s Screen`],\n  [[false, \"regular\"].toString(), PEER_NAME_PLACEHOLDER],\n  [[true, undefined].toString(), `You (${PEER_NAME_PLACEHOLDER})`],\n  [[false, undefined].toString(), `${PEER_NAME_PLACEHOLDER}`],\n]);\n\nexport const getVideoTileLabel = ({ peerName, isLocal, track }) => {\n  const isPeerPresent = peerName !== undefined;\n  if (!isPeerPresent || !track) {\n    // for peers with only audio track\n    return isPeerPresent\n      ? labelMap\n          .get([isLocal, undefined].toString())\n          .replace(PEER_NAME_PLACEHOLDER, peerName)\n      : \"\";\n  }\n  const isLocallyMuted = track.volume === 0;\n  // Map [isLocal, videoSource] to the label to be displayed.\n  let label = labelMap.get([isLocal, track.source].toString());\n  if (label) {\n    label = label.replace(PEER_NAME_PLACEHOLDER, peerName);\n  } else {\n    label = `${peerName} ${track.source}`;\n  }\n  label = `${label}${track.degraded ? \"(Degraded)\" : \"\"}`;\n  return `${label}${isLocallyMuted ? \" (Muted for you)\" : \"\"}`;\n};\n","import React, { useRef } from \"react\";\nimport { useFullscreen, useToggle } from \"react-use\";\nimport screenfull from \"screenfull\";\nimport {\n  selectVideoPlaylist,\n  selectVideoPlaylistVideoTrackByPeerID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { CrossIcon, ExpandIcon, ShrinkIcon } from \"@100mslive/react-icons\";\nimport { Flex, IconButton, Text, Video } from \"@100mslive/react-ui\";\nimport { VideoPlaylistControls } from \"./PlaylistControls\";\nimport { useUISettings } from \"../AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../../common/constants\";\n\nexport const VideoPlayer = React.memo(({ peerId }) => {\n  const videoTrack = useHMSStore(selectVideoPlaylistVideoTrackByPeerID(peerId));\n  const active = useHMSStore(selectVideoPlaylist.selectedItem);\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const hmsActions = useHMSActions();\n  const ref = useRef(null);\n  const [show, toggle] = useToggle(false);\n  const isFullscreen = useFullscreen(ref, show, {\n    onClose: () => toggle(false),\n  });\n  return (\n    <Flex\n      direction=\"column\"\n      justify=\"center\"\n      css={{ w: \"100%\", h: \"100%\" }}\n      ref={ref}\n    >\n      {active && (\n        <Flex\n          justify=\"between\"\n          align=\"center\"\n          css={{\n            bg: \"$menuBg\",\n            p: \"$2 $2 $2 $6\",\n            borderTopLeftRadius: \"$1\",\n            borderTopRightRadius: \"$1\",\n          }}\n        >\n          <Text css={{ color: \"$textPrimary\" }}>{active.name}</Text>\n          <IconButton\n            css={{\n              color: \"$white\",\n            }}\n            onClick={() => {\n              hmsActions.videoPlaylist.stop();\n            }}\n            data-testid=\"videoplaylist_cross_btn\"\n          >\n            <CrossIcon />\n          </IconButton>\n        </Flex>\n      )}\n      <Video\n        trackId={videoTrack?.id}\n        attach={!isAudioOnly}\n        css={{\n          \"@lg\": { objectFit: \"contain\", h: \"auto\" },\n          r: \"$1\",\n          borderTopLeftRadius: 0,\n          borderTopRightRadius: 0,\n        }}\n      />\n      <VideoPlaylistControls>\n        {screenfull.enabled && (\n          <IconButton\n            onClick={() => toggle()}\n            css={{\n              color: \"$white\",\n              height: \"max-content\",\n              alignSelf: \"center\",\n              cursor: \"pointer\",\n            }}\n          >\n            {isFullscreen ? <ShrinkIcon /> : <ExpandIcon />}\n          </IconButton>\n        )}\n      </VideoPlaylistControls>\n    </Flex>\n  );\n});\n","import React from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { CrossIcon, ShareScreenIcon } from \"@100mslive/react-icons\";\nimport { Button, Flex, Text } from \"@100mslive/react-ui\";\n\nexport const ScreenshareDisplay = () => {\n  const hmsActions = useHMSActions();\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"center\"\n      justify=\"center\"\n      css={{\n        position: \"relative\",\n        overflow: \"hidden\",\n        w: \"37.5rem\",\n        maxWidth: \"80%\",\n        h: \"100%\",\n        r: \"$3\",\n        m: \"0 auto\",\n        color: \"$textPrimary\",\n        bg: \"$surfaceDefault\",\n        textAlign: \"center\",\n      }}\n    >\n      <ShareScreenIcon width={48} height={48} />\n      <Text variant=\"h5\" css={{ m: \"$8 0\" }}>\n        You are sharing your screen\n      </Text>\n      <Button\n        variant=\"danger\"\n        onClick={async () => {\n          await hmsActions.setScreenShareEnabled(false);\n        }}\n        data-testid=\"stop_screen_share_btn\"\n      >\n        <CrossIcon width={18} height={18} />\n        &nbsp; Stop screen share\n      </Button>\n    </Flex>\n  );\n};\n","import React, { Fragment, useCallback, useMemo } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectLocalPeerID,\n  selectLocalPeerRoleName,\n  selectPeers,\n  selectPeerScreenSharing,\n  selectPeerSharingVideoPlaylist,\n  selectScreenShareByPeerID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Box, config as cssConfig, Flex } from \"@100mslive/react-ui\";\nimport { VideoPlayer } from \"../components/Playlist/VideoPlayer\";\nimport { ScreenshareDisplay } from \"../components/ScreenshareDisplay\";\nimport ScreenshareTile from \"../components/ScreenshareTile\";\nimport VideoList from \"../components/VideoList\";\nimport VideoTile from \"../components/VideoTile\";\n\nconst ScreenShareView = () => {\n  // for smaller screen we will show sidebar in bottom\n  const mediaQueryLg = cssConfig.media.lg;\n  const showSidebarInBottom = useMedia(mediaQueryLg);\n  const peers = useHMSStore(selectPeers);\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const peerPresenting = useHMSStore(selectPeerScreenSharing);\n  const peerSharingPlaylist = useHMSStore(selectPeerSharingVideoPlaylist);\n  const isPresenterFromMyRole =\n    peerPresenting?.roleName?.toLowerCase() === localPeerRole?.toLowerCase();\n  const amIPresenting = localPeerID === peerPresenting?.id;\n  const showPresenterInSmallTile =\n    showSidebarInBottom || amIPresenting || isPresenterFromMyRole;\n\n  const smallTilePeers = useMemo(() => {\n    const smallTilePeers = peers.filter(peer => peer.id !== peerPresenting?.id);\n    if (showPresenterInSmallTile && peerPresenting) {\n      smallTilePeers.unshift(peerPresenting); // put presenter on first page\n    }\n    return smallTilePeers;\n  }, [peers, peerPresenting, showPresenterInSmallTile]);\n\n  return (\n    <Flex\n      css={{\n        size: \"100%\",\n      }}\n      direction={showSidebarInBottom ? \"column\" : \"row\"}\n    >\n      <ScreenShareComponent\n        amIPresenting={amIPresenting}\n        peerPresenting={peerPresenting}\n        peerSharingPlaylist={peerSharingPlaylist}\n      />\n      <Flex\n        direction={{ \"@initial\": \"column\", \"@lg\": \"row\" }}\n        css={{\n          overflow: \"hidden\",\n          p: \"$4 $8\",\n          flex: \"0 0 20%\",\n          \"@lg\": {\n            flex: \"1 1 0\",\n          },\n        }}\n      >\n        <SidePane\n          showSidebarInBottom={showSidebarInBottom}\n          peerScreenSharing={peerPresenting}\n          isPresenterInSmallTiles={showPresenterInSmallTile}\n          smallTilePeers={smallTilePeers}\n          totalPeers={peers.length}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\n// Sidepane will show the camera stream of the main peer who is screensharing\n// and both camera + screen(if applicable) of others\nexport const SidePane = ({\n  isPresenterInSmallTiles,\n  peerScreenSharing, // the peer who is screensharing\n  smallTilePeers,\n  totalPeers,\n  showSidebarInBottom,\n}) => {\n  // The main peer's screenshare is already being shown in center view\n  const shouldShowScreenFn = useCallback(\n    peer => peerScreenSharing && peer.id !== peerScreenSharing.id,\n    [peerScreenSharing]\n  );\n  return (\n    <Fragment>\n      {!isPresenterInSmallTiles && (\n        <LargeTilePeerView peerScreenSharing={peerScreenSharing} />\n      )}\n      <SmallTilePeersView\n        showSidebarInBottom={showSidebarInBottom}\n        smallTilePeers={smallTilePeers}\n        shouldShowScreenFn={shouldShowScreenFn}\n      />\n    </Fragment>\n  );\n};\n\nconst ScreenShareComponent = ({\n  showStats,\n  amIPresenting,\n  peerPresenting,\n  peerSharingPlaylist,\n}) => {\n  const screenshareTrack = useHMSStore(\n    selectScreenShareByPeerID(peerPresenting?.id)\n  );\n\n  if (peerSharingPlaylist) {\n    return (\n      <Box\n        css={{\n          mx: \"$8\",\n          flex: \"3 1 0\",\n          \"@lg\": {\n            flex: \"2 1 0\",\n            display: \"flex\",\n            alignItems: \"center\",\n          },\n        }}\n      >\n        <VideoPlayer peerId={peerSharingPlaylist.id} />\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      css={{\n        flex: \"3 1 0\",\n        mx: \"$8\",\n        \"@lg\": { ml: \"$4\", maxHeight: \"80%\" },\n      }}\n    >\n      {peerPresenting &&\n        (amIPresenting &&\n        ![\"browser\", \"window\", \"application\"].includes(\n          screenshareTrack?.displaySurface\n        ) ? (\n          <Box css={{ objectFit: \"contain\", h: \"100%\" }}>\n            <ScreenshareDisplay />\n          </Box>\n        ) : (\n          <ScreenshareTile peerId={peerPresenting?.id} />\n        ))}\n    </Box>\n  );\n};\n\nconst SmallTilePeersView = ({\n  smallTilePeers,\n  shouldShowScreenFn,\n  showStatsOnTiles,\n  showSidebarInBottom,\n}) => {\n  return (\n    <Flex\n      css={{\n        flex: \"2 1 0\",\n      }}\n    >\n      {smallTilePeers && smallTilePeers.length > 0 && (\n        <VideoList\n          peers={smallTilePeers}\n          maxColCount={showSidebarInBottom ? undefined : 2}\n          maxRowCount={showSidebarInBottom ? 1 : undefined}\n          includeScreenShareForPeer={shouldShowScreenFn}\n          showStatsOnTiles={showStatsOnTiles}\n        />\n      )}\n    </Flex>\n  );\n};\n\nconst LargeTilePeerView = ({ peerScreenSharing, showStatsOnTiles }) => {\n  return peerScreenSharing ? (\n    <Box\n      css={{\n        flex: \"1 1 0\",\n        minHeight: \"25%\",\n        py: \"$4\",\n        \"@lg\": {\n          mr: \"$4\",\n          minHeight: \"unset\",\n          py: 0,\n        },\n        \"@sm\": {\n          height: \"100%\",\n          maxHeight: \"75%\",\n          alignSelf: \"center\",\n        },\n      }}\n    >\n      <VideoTile\n        showStatsOnTiles={showStatsOnTiles}\n        width=\"100%\"\n        height=\"100%\"\n        peerId={peerScreenSharing.id}\n      />\n    </Box>\n  ) : null;\n};\n\nexport default ScreenShareView;\n"],"names":["useAppConfig","path","usePlaylist","type","isAudioPlaylist","selector","active","selection","playlist","hmsActions","playlistAction","stringifyWithNull","obj","k","v","PusherCommunicationProvider","roomId","eventName","message","arg","cb","_a","provider","WhiteboardEvents","useWhiteboardState","amIWhiteboardOwner","useWhiteboardMetadata","useMultiplayerState","app","setApp","isReady","setIsReady","shouldRequestState","rLiveShapes","rLiveBindings","getCurrentState","sendCurrentState","updateLocalState","shapes","bindings","merge","lShapes","lBindings","id","shape","binding","applyStateToBoard","state","handleChanges","setupInitialState","onMount","onChangePage","_app","_assets","unsubs","stillAlive","setupDocument","unsub","Whiteboard","events","ToggleWhiteboard","whiteboardEnabled","whiteboardActive","toggleWhiteboard","Tooltip","IconButton","PencilDrawIcon","Progress","duration","selectPlaylist","progress","e","PlaylistActive","onToggle","Controls","css","hasNext","hasPrevious","actions","VolumeControl","volume","peerSharingPlaylist","audioTrack","audioTrackVolume","sliderVolume","value","AudioPlaylistControls","VideoPlaylistControls","children","labelStyles","Tile","peerId","width","height","track","peer","isAudioOnly","isHeadless","isMouseHovered","setIsMouseHovered","showStatsOnTiles","label","fullscreenRef","fullscreen","setFullscreen","isFullscreen","isFullScreenSupported","audioTrackID","videoTrackID","peerID","isScreenshare","removeOthers","isAudioEnabled","isVideoEnabled","setVolume","toggleAudio","toggleVideo","sendEvent","Pagination","page","setPage","numPages","disableLeft","disableRight","nextPage","prevPage","StyledPagination","ChevronLeftIcon","_","i","ChevronRightIcon","List","maxTileCount","peers","maxColCount","maxRowCount","includeScreenShareForPeer","aspectRatio","tileOffset","ref","pagesWithTiles","useVideoList","getOffset","useFreeze","FeatureFlags","StyledVideoList","tiles","pageNo","tile","ScreenshareTile","VideoTile","VideoList","offset","trackId","trackSelector","peerName","localPeerID","mirrorLocalVideo","isAudioMuted","isVideoMuted","borderAudioRef","isVideoDegraded","isLocal","onHoverHandler","event","headlessConfig","hideLabel","getPadding","showAudioMuted","PeerMetadata","metaStyles","metaData","isHandRaised","isBRB","hideTileAudioMute","EmbedView","showStats","Flex","EmbedComponent","amIScreenSharing","toggleScreenShare","useScreenShare","embedConfig","setEmbedConfig","wasScreenShared","setWasScreenShared","screenShareAttemptInProgress","src","iframeRef","resetEmbedConfig","Box","useAppLayout","MainGridView","centerRoles","sidepaneRoles","useUISettings","localPeerId","centerPeers","sidebarPeers","showSidePane","itsOnlyMeInTheRoom","nooneIsPublishing","WhiteboardView","HLSView","ActiveSpeakerView","ConferenceMainView","localPeerRole","peerSharing","peerSharingAudio","whiteboardShared","isConnected","useRefreshSessionMetadata","headlessUIMode","uiViewMode","hlsViewerRole","urlToIframe","audioPlaylist","videoPlaylist","ViewComponent","FullPageProgress","SidePane","formatDuration","mins","secs","PlaylistItem","name","metadata","selected","onClick","Dropdown","Text","BrowseAndPlayFromLocal","file","Playlist","open","setOpen","collapse","setCollapse","AudioPlayerIcon","VideoPlayerIcon","CrossIcon","playlistItem","onOpenChange","permissions","recordingUrl","resolution","setResolution","recordingStarted","setRecordingState","isBrowserRecordingOn","isStreamingOn","isHLSRunning","useRecordingStreaming","Dialog","AlertTriangleIcon","Button","error","ToastManager","ResolutionInput","StatsForNerds","tracksWithLabels","useTracksWithLabel","statsOptions","selectedStat","setSelectedStat","setShowStatsOnTiles","selectionBg","useDropdownSelection","Switch","Label","option","LocalPeerStats","TrackStats","tracksMap","peersMap","stats","StatsRow","formatBytes","trackID","inbound","bytes","unit","decimals","dm","sizes","size","ChangeNameModal","previewPreference","setPreviewPreference","useUserPreferences","localPeerName","currentName","setCurrentName","changeName","Input","ChangeSelfRole","roles","hideTriggerItem","useMedia","selfRoleChangeTo","availableSelfChangeRoles","PersonIcon","ArrowRightIcon","role","CheckIcon","EmbedUrl","setShowOpenUrl","ViewIcon","EmbedUrlModal","url","setUrl","isAnythingEmbedded","isModifying","DialogContent","useFullscreen","isFullScreenEnabled","setIsFullScreenEnabled","toggle","err","onChange","FullScreenItem","allowed","toggleFullscreen","ExpandIcon","trackSourceOptions","trackTypeOptions","MuteAllModal","enabled","setEnabled","trackType","setTrackType","selectedRole","setRole","selectedSource","setSource","muteAll","MicOffIcon","RadioGroup","OSName","isMacOS","isMobileOS","MoreSettings","isAllowedToPublish","enablHlsStats","showChangeNameModal","setShowChangeNameModal","showMuteAll","setShowMuteAll","showOpenUrl","showDeviceSettings","setShowDeviceSettings","showStatsForNerds","setShowStatsForNerds","showSelfRoleChange","setShowSelfRoleChange","showStartRecording","setShowStartRecording","isMobile","VerticalMenuIcon","RecordIcon","PencilIcon","SettingsIcon","Checkbox","InfoIcon","SettingsModal","RoleChangeModal","drawVideoElementsOnCanvas","videoElements","canvas","numberOfTiles","videoElement","ctx","canvasWidth","canvasHeight","numRows","numCols","tileHeight","tileWidth","fillGridTiles","dummyChangeInCanvas","videoElementPos","row","startY","col","startX","video","MAX_NUMBER_OF_TILES_IN_PIP","DEFAULT_FPS","DEFAULT_CANVAS_WIDTH","DEFAULT_CANVAS_HEIGHT","LEAVE_EVENT_NAME","PIPStates","PipManager","onStateChangeFn","newTracksToShowUnordered","currentTracksShowing","pipVideo","videoPlayPromise","delay","tracksToShow","newTracks","oldTracks","betterNewTracks","leftOvers","oldPosition","numTracks","PictureInPicture","SetupMediaSession","store","isMicActive","isCamActive","_b","current","MediaSession","PIPComponent","isPipOn","setIsPipOn","onPipToggle","PipIcon","ActivatedPIP","remotePeers","ScreenshareToggle","isVideoScreenshare","ShareScreenIcon","ScreenShareHintModal","onClose","ChatToggle","countUnreadMessages","isChatOpen","toggleChat","useSidepane","ChatIcon","ChatUnreadIcon","NoiseSuppression","pluginRef","disable","setDisabled","isNSSupported","setIsNSSupported","isPluginPresent","selectedDeviceIDs","useDevices","pluginActive","createPlugin","HMSNoiseSuppressionPlugin","removePlugin","handleFailure","addPlugin","pluginSupport","AudioLevelIcon","TranscriptionButton","ScreenshareAudio","audio","isAudioScreenshare","showModal","setShowModal","MusicIcon","ConferencingFooter","VirtualBackground","MetaActions","AudioVideoToggle","LeaveRoom","StreamingFooter","StreamActions","RoleChangeRequestModal","roleChangeRequest","navigate","useNavigation","roomState","prevState","usePrevious","isConnectedToRoom","Header","FirstPersonDisplay","Image","MAX_TILES_FOR_MOBILE","webinarProps","eventRoomIDs","eventsImg","webinarInfoLink","GridCenterView","mediaQueryLg","limitMaxTiles","GridSidePaneView","PEER_NAME_PLACEHOLDER","labelMap","getVideoTileLabel","isPeerPresent","isLocallyMuted","VideoPlayer","videoTrack","show","useToggle","Video","ShrinkIcon","ScreenshareDisplay","ScreenShareView","showSidebarInBottom","peerPresenting","isPresenterFromMyRole","amIPresenting","showPresenterInSmallTile","smallTilePeers","ScreenShareComponent","isPresenterInSmallTiles","peerScreenSharing","totalPeers","shouldShowScreenFn","LargeTilePeerView","SmallTilePeersView","screenshareTrack"],"sourceRoot":""}