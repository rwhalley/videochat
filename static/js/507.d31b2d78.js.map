{"version":3,"file":"static/js/507.d31b2d78.js","mappings":"sKA2CA,QAlC0B,IAAM,CAC9B,MAAMA,G,EAAkB,MAAY,IAAqB,EACnDC,G,EAA2B,UAAOD,CAAe,EACjDE,I,EAAS,MAAY,IAAW,GAAK,CAAC,GAAG,OAC7CC,GACEA,EAAK,YAAcA,EAAK,YAAcA,EAAK,gBAAgB,OAAS,CACxE,EAKA,GAHIH,IACFC,EAAyB,QAAUD,GAEjCE,EAAM,SAAW,EACnB,OAAO,KAGT,MAAME,EAAgBH,EAAyB,SAAWC,EAAM,GAC1DG,EAAeD,GAAiBF,EAAM,OAAS,EAErD,OACE,gBAAC,IAAI,CAAC,IAAK,CAAE,KAAM,OAAQ,MAAO,CAAE,cAAe,QAAS,CAAE,GAC5D,gBAAC,IAAc,CACb,MAAO,CAACE,CAAa,EACrB,aAAc,EACd,aAAc,CAACC,CAAA,CACjB,EACCA,GACC,gBAAC,IAAgB,CACf,MAAOH,EAAM,OAAOC,GAAQA,EAAK,KAAOC,EAAc,EAAE,EAC1D,CAEJ,CAEJ,C","sources":["layouts/ActiveSpeakerView.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport {\n  selectDominantSpeaker,\n  selectPeers,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Flex } from \"@100mslive/react-ui\";\nimport { GridCenterView, GridSidePaneView } from \"../components/gridView\";\n\nconst ActiveSpeakerView = () => {\n  const dominantSpeaker = useHMSStore(selectDominantSpeaker);\n  const latestDominantSpeakerRef = useRef(dominantSpeaker);\n  const peers = (useHMSStore(selectPeers) || []).filter(\n    peer =>\n      peer.videoTrack || peer.audioTrack || peer.auxiliaryTracks.length > 0\n  );\n  // if there is no current dominant speaker latest keeps pointing to last\n  if (dominantSpeaker) {\n    latestDominantSpeakerRef.current = dominantSpeaker;\n  }\n  if (peers.length === 0) {\n    return null;\n  }\n  // show local peer if there hasn't been any dominant speaker\n  const activeSpeaker = latestDominantSpeakerRef.current || peers[0];\n  const showSidePane = activeSpeaker && peers.length > 1;\n\n  return (\n    <Flex css={{ size: \"100%\", \"@lg\": { flexDirection: \"column\" } }}>\n      <GridCenterView\n        peers={[activeSpeaker]}\n        maxTileCount={1}\n        hideSidePane={!showSidePane}\n      />\n      {showSidePane && (\n        <GridSidePaneView\n          peers={peers.filter(peer => peer.id !== activeSpeaker.id)}\n        />\n      )}\n    </Flex>\n  );\n};\n\nexport default ActiveSpeakerView;\n"],"names":["dominantSpeaker","latestDominantSpeakerRef","peers","peer","activeSpeaker","showSidePane"],"sourceRoot":""}